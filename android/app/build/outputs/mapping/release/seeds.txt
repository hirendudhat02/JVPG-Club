com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.facebook.react.views.modal.ReactModalHostManager
io.invertase.firebase.common.ReactNativeFirebaseModule
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
com.facebook.react.bridge.GuardedRunnable
com.google.firebase.messaging.FirebaseMessaging
com.facebook.react.modules.dialog.DialogModule
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule
com.facebook.react.animated.NativeAnimatedModule
com.google.android.gms.measurement.AppMeasurementJobService
com.horcrux.svg.SvgViewManager
com.android.installreferrer.api.InstallReferrerStateListener
androidx.core.widget.NestedScrollView
com.yalantis.ucrop.view.GestureCropImageView
com.facebook.react.bridge.JavaModuleWrapper
com.facebook.react.modules.appearance.AppearanceModule
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager
com.swmansion.reanimated.layoutReanimation.LayoutAnimations
com.facebook.react.modules.websocket.WebSocketModule
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
com.yalantis.ucrop.view.UCropView
com.facebook.soloader.SoLoader$Api14Utils
androidx.savedstate.SavedStateRegistry$1
com.facebook.react.bridge.ReactMarkerConstants
com.google.android.material.appbar.MaterialToolbar
com.facebook.react.bridge.CatalystInstanceImpl$1$1
com.facebook.react.uimanager.ViewManager
com.reactnative.ivpusic.imagepicker.IvpusicImagePickerFileProvider
com.facebook.react.bridge.RuntimeScheduler
com.google.android.gms.common.api.Status
com.facebook.react.bridge.AssertionException
com.facebook.react.views.text.ReactRawTextManager
com.horcrux.svg.RenderableViewManager$LinearGradientManager
com.facebook.react.bridge.JSBundleLoader$1
com.horcrux.svg.RenderableViewManager$SymbolManager
androidx.annotation.Keep
com.facebook.react.views.switchview.ReactSwitchManager
com.facebook.react.fabric.events.FabricEventEmitter
com.facebook.react.bridge.ModuleHolder
com.facebook.react.bridge.BaseActivityEventListener
com.facebook.react.views.textinput.ReactTextInputManager
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN
com.google.android.gms.common.api.internal.LifecycleCallback
com.facebook.react.bridge.NativeModule
androidx.work.impl.diagnostics.DiagnosticsReceiver
com.google.firebase.crashlytics.FirebaseCrashlytics
com.facebook.react.bridge.JavaMethodWrapper$3
com.facebook.react.animated.EventAnimationDriver
com.th3rdwave.safeareacontext.SafeAreaProviderManager
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager
com.facebook.react.bridge.CatalystInstanceImpl$1
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
com.facebook.react.bridge.queue.MessageQueueThreadImpl
com.facebook.imagepipeline.nativecode.NativeCodeInitializer
androidx.viewpager2.adapter.FragmentStateAdapter$5
com.swmansion.rnscreens.ScreenFragment
com.google.android.material.textview.MaterialTextView
kotlin.internal.jdk7.JDK7PlatformImplementations
com.facebook.react.devsupport.JSDevSupport
com.horcrux.svg.RenderableViewManager$PathViewManager
androidx.activity.result.ActivityResultRegistry$1
com.facebook.react.bridge.ReactMarker
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
com.facebook.fbreact.specs.NativeVibrationSpec
com.shockwave.pdfium.util.Size
com.facebook.react.views.view.ReactClippingViewManager
com.facebook.react.bridge.Dynamic
io.xogus.reactnative.versioncheck.RNVersionCheckModule
com.facebook.react.bridge.FallbackJSBundleLoader
androidx.appcompat.widget.Toolbar
com.horcrux.svg.RenderableViewManager$MaskManager
com.reactnativecommunity.clipboard.ClipboardModule
androidx.work.impl.WorkDatabase_Impl
com.google.android.material.theme.MaterialComponentsViewInflater
com.facebook.react.bridge.JSIModuleSpec
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
com.facebook.jni.UnknownCppException
com.facebook.react.bridge.ObjectAlreadyConsumedException
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.react.modules.blob.BlobModule
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener
androidx.activity.ComponentActivity$4
com.facebook.react.fabric.ComponentFactory
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
com.google.android.material.chip.Chip
com.google.android.gms.common.util.DynamiteApi
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.facebook.react.bridge.JsonWriterHelper
com.facebook.react.modules.blob.BlobCollector
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
com.facebook.react.modules.core.TimingModule
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
io.invertase.firebase.app.ReactNativeFirebaseAppInitProvider
com.horcrux.svg.RNSVGRenderableManager
com.horcrux.svg.RenderableViewManager$RadialGradientManager
com.reactlibrary.createthumbnail.CreateThumbnailModule
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.google.android.material.chip.ChipGroup
com.swmansion.reanimated.ReanimatedModule
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
com.facebook.fbreact.specs.NativeToastAndroidSpec
com.facebook.react.modules.core.JSTimers
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
com.facebook.react.modules.appstate.AppStateModule
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
com.google.firebase.iid.FirebaseInstanceIdReceiver
com.swmansion.reanimated.NativeProxy$AnimationFrameCallback
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
com.facebook.react.fabric.Binding
com.rnfs.RNFSManager
androidx.core.graphics.drawable.IconCompat
com.facebook.react.bridge.OnBatchCompleteListener
com.facebook.react.bridge.ReactMarker$MarkerListener
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.appcompat.widget.ViewStubCompat
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider
com.facebook.react.bridge.ModuleSpec
com.facebook.react.bridge.SoftAssertions
com.facebook.react.fabric.ReactNativeConfig
com.facebook.soloader.Api18TraceUtils
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
com.facebook.react.bridge.ReadableNativeMap
com.razorpay.CheckoutActivity
com.facebook.react.bridge.DynamicFromMap
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
androidx.work.impl.workers.DiagnosticsWorker
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.react.bridge.UIManager
com.facebook.react.bridge.ReactCallback
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
com.facebook.yoga.YogaNative
com.horcrux.svg.RenderableViewManager$ForeignObjectManager
com.swmansion.rnscreens.ScreenContainerViewManager
com.horcrux.svg.RenderableViewManager$UseViewManager
com.th3rdwave.safeareacontext.SafeAreaViewManager
com.facebook.react.uimanager.events.RCTEventEmitter
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingReceiver
com.google.android.material.internal.NavigationMenuView
androidx.work.WorkManagerInitializer
com.facebook.react.uimanager.BaseViewManager
net.time4j.SPX
com.swmansion.rnscreens.ScreenViewManager
com.dylanvann.fastimage.FastImageViewModule
com.facebook.react.bridge.JavaJSExecutor$Factory
com.facebook.react.bridge.ReadableNativeMap$1
com.facebook.fbreact.specs.NativeImageEditorSpec
androidx.activity.ImmLeaksCleaner
com.inprogress.reactnativeyoutube.YouTubeManager
com.google.android.material.button.MaterialButton
androidx.lifecycle.SavedStateHandleController
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
androidx.viewpager2.adapter.FragmentStateAdapter$2
com.reactnativecommunity.viewpager.ReactViewPagerManager
com.horcrux.svg.RenderableViewManager
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
com.google.firebase.installations.FirebaseInstallationsRegistrar
com.google.android.material.textfield.TextInputEditText
com.swmansion.reanimated.NativeProxy
com.facebook.react.fabric.FabricUIManager
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule
com.facebook.proguard.annotations.KeepGettersAndSetters
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
androidx.coordinatorlayout.widget.CoordinatorLayout
com.google.android.material.appbar.AppBarLayout$Behavior
com.facebook.react.bridge.JavaScriptModule
com.facebook.react.views.slider.ReactSliderManager
androidx.recyclerview.widget.RecyclerView
com.reactnativecommunity.geolocation.GeolocationModule
androidx.work.impl.WorkDatabase
com.google.android.gms.measurement.AppMeasurement
com.reactnativecommunity.toolbarandroid.ReactToolbarManager
android.support.v4.app.RemoteActionCompatParcelizer
com.facebook.react.bridge.PromiseImpl
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
com.facebook.react.modules.statusbar.StatusBarModule
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec
com.facebook.react.common.futures.SimpleSettableFuture
com.facebook.react.bridge.Inspector$LocalConnection
com.facebook.common.internal.DoNotStrip
com.horcrux.svg.RenderableViewManager$TSpanViewManager
com.facebook.react.config.ReactFeatureFlags
androidx.lifecycle.SavedStateHandleController$1
com.google.android.material.internal.NavigationMenuItemView
com.swmansion.reanimated.Scheduler
androidx.work.impl.background.systemjob.SystemJobService
com.facebook.react.bridge.CatalystInstanceImpl$4
com.facebook.react.bridge.Arguments$2
com.razorpay.rn.RazorpayModule
com.facebook.jni.HybridData
com.facebook.react.views.scroll.ReactScrollViewManager
javax.inject.Provider
com.google.android.gms.common.api.Scope
com.facebook.imagepipeline.platform.PreverificationHelper
com.facebook.react.modules.network.NetworkingModule
com.facebook.react.bridge.Arguments$1
com.horcrux.svg.RenderableViewManager$TextPathViewManager
cl.json.RNShareModule
com.facebook.react.bridge.GuardedResultAsyncTask
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.facebook.react.bridge.NativeArrayInterface
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.google.android.gms.common.api.GoogleApiActivity
com.facebook.react.bridge.InvalidIteratorException
androidx.lifecycle.SingleGeneratedAdapterObserver
com.reactnativerestart.RestartModule
com.facebook.react.bridge.ReadableNativeMap$1$1
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
com.google.android.gms.iid.InstanceID
net.time4j.android.spi.AndroidResourceLoader
com.facebook.react.bridge.UiThreadUtil
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.recyclerview.widget.GridLayoutManager
com.reactnativecommunity.webview.RNCWebViewFileProvider
com.facebook.react.bridge.DynamicFromObject
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
cl.json.RNShareFileProvider
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.facebook.react.bridge.CatalystInstanceImpl
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
com.jvpg.jvpgclub.MainActivity
com.google.android.material.transformation.FabTransformationScrimBehavior
com.facebook.react.modules.sound.SoundManagerModule
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec
com.henninghall.date_picker.DatePickerManager
com.facebook.react.views.text.ReactTextViewManager
com.facebook.react.modules.systeminfo.AndroidInfoModule
com.yalantis.ucrop.UCropActivity
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.reactnativecommunity.viewpager.ViewPagerFragment
com.facebook.react.uimanager.ComponentNameResolver
com.facebook.react.bridge.CatalystInstanceImpl$5
androidx.work.impl.background.systemalarm.RescheduleReceiver
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
com.facebook.react.views.view.ReactViewManager
com.facebook.react.modules.clipboard.ClipboardModule
com.brentvatne.react.ReactVideoViewManager
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.google.android.material.datepicker.MaterialTextInputPicker
com.facebook.jni.DestructorThread$DestructorStack
com.facebook.react.bridge.PerformanceCounter
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.google.android.gms.common.internal.ReflectedParcelable
com.swmansion.reanimated.NativeProxy$EventHandler
com.facebook.react.bridge.JavaMethodWrapper$9
androidx.appcompat.widget.FitWindowsFrameLayout
com.facebook.react.bridge.WritableNativeArray
androidx.lifecycle.Lifecycling$1
net.time4j.tz.model.SPX
com.google.android.material.bottomappbar.BottomAppBar$Behavior
androidx.appcompat.widget.ButtonBarLayout
com.bumptech.glide.integration.okhttp3.OkHttpGlideModule
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
androidx.appcompat.view.menu.ExpandedMenuView
com.facebook.react.bridge.JavaMethodWrapper$2
com.facebook.fbreact.specs.NativeSoundManagerSpec
com.google.android.gms.auth.api.signin.SignInAccount
com.facebook.react.modules.debug.SourceCodeModule
com.reactnativecommunity.webview.RNCWebViewManager
com.google.android.material.textfield.TextInputLayout
com.google.android.gms.common.GoogleApiAvailability
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.facebook.react.modules.intent.IntentModule
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService
com.agontuk.RNFusedLocation.RNFusedLocationModule
com.airbnb.android.react.lottie.LottieAnimationViewManager
com.dylanvann.fastimage.FastImageGlideModule
com.facebook.react.bridge.JavaScriptExecutor
com.facebook.react.bridge.queue.NativeRunnable
com.facebook.react.bridge.Inspector
com.google.android.material.datepicker.MaterialCalendar
com.facebook.react.bridge.NativeModuleCallExceptionHandler
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
com.reactnativecommunity.webview.RNCWebViewModule
com.facebook.react.bridge.JavaMethodWrapper$10
com.google.android.material.behavior.SwipeDismissBehavior
com.facebook.react.bridge.ReactContext
com.facebook.react.bridge.JSInstance
com.facebook.react.bridge.JavaJSExecutor
androidx.appcompat.view.menu.ListMenuItemView
com.facebook.jni.HybridClassBase
com.horcrux.svg.RenderableViewManager$CircleViewManager
com.facebook.react.modules.blob.FileReaderModule
com.facebook.react.bridge.JSBundleLoaderDelegate
com.facebook.react.bridge.JSIModule
com.google.android.gms.auth.api.signin.GoogleSignInOptions
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule
com.facebook.react.uimanager.events.RCTModernEventEmitter
com.facebook.react.bridge.CatalystInstanceImpl$3
androidx.activity.ComponentActivity$3
com.google.firebase.FirebaseCommonRegistrar
androidx.recyclerview.widget.LinearLayoutManager
com.facebook.react.bridge.JavaMethodWrapper$6
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
com.facebook.react.bridge.DynamicFromMap$1
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
com.facebook.react.bridge.ProxyJavaScriptExecutor
androidx.core.util.Pools$SimplePool
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
com.google.android.gms.common.annotation.KeepName
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.yalantis.ucrop.task.BitmapCropTask
net.time4j.tz.SPX
com.learnium.RNDeviceInfo.RNDeviceModule
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.swmansion.rnscreens.ScreenStackFragment
com.google.android.gms.measurement.AppMeasurementService
com.facebook.react.bridge.JavaMethodWrapper$1
com.google.firebase.crashlytics.ndk.CrashpadMain
com.google.android.gms.location.LocationAvailability
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.facebook.react.bridge.JavaOnlyArray
com.facebook.react.bridge.ReactCxxErrorHandler
com.otters.newarchitecture.components.MainComponentsRegistry
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
androidx.recyclerview.widget.StaggeredGridLayoutManager
androidx.work.CoroutineWorker
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.facebook.fbreact.specs.NativeAlertManagerSpec
com.facebook.react.bridge.JSBundleLoader$2
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
com.facebook.react.bridge.JavaOnlyMap$1
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.facebook.react.bridge.RetryableMountingLayerException
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.google.firebase.messaging.FirebaseMessagingRegistrar
com.facebook.yoga.YogaLogger
com.facebook.react.modules.storage.AsyncStorageModule
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
com.facebook.react.uimanager.ReanimatedUIManager
net.time4j.calendar.KoreanCalendar$SPX
com.facebook.react.bridge.GuardedAsyncTask
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
androidx.appcompat.widget.ActionMenuView
com.facebook.react.bridge.ReadableNativeArray
com.facebook.react.bridge.NoSuchKeyException
com.google.firebase.crashlytics.CrashlyticsRegistrar
com.facebook.react.bridge.NativeArgumentsParseException
org.wonday.pdf.PdfManager
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.facebook.react.bridge.WritableMap
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
com.facebook.react.modules.debug.DevSettingsModule
com.facebook.jni.ThreadScopeSupport
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager
com.facebook.fbreact.specs.NativeTimingSpec
com.swmansion.gesturehandler.react.RNGestureHandlerModule
com.facebook.jni.DestructorThread$1
com.facebook.react.turbomodule.core.TurboModuleManager
com.facebook.fbreact.specs.NativeAppStateSpec
com.facebook.react.uimanager.ComponentNameResolverManager
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.transition.FragmentTransitionSupport
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsInitProvider
com.google.android.gms.measurement.AppMeasurementReceiver
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
com.reactnativecommunity.slider.ReactSliderManager
androidx.work.impl.workers.CombineContinuationsWorker
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
com.facebook.imagepipeline.nativecode.NativeBlurFilter
com.facebook.react.bridge.queue.MessageQueueThreadHandler
com.google.android.gms.common.GooglePlayServicesManifestException
com.facebook.react.bridge.RuntimeExecutor
com.facebook.common.time.RealtimeSinceBootClock
com.facebook.react.bridge.Systrace
com.google.firebase.components.ComponentRegistrar
com.google.android.gms.location.LocationRequest
com.facebook.react.bridge.JavaMethodWrapper
com.facebook.react.bridge.Callback
com.swmansion.reanimated.NativeProxy$KeyboardEventDataUpdater
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.facebook.fbreact.specs.NativeDevSettingsSpec
com.facebook.react.util.RCTLog
androidx.appcompat.view.menu.ActionMenuItemView
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.facebook.react.views.drawer.ReactDrawerLayoutManager
fr.greweb.reactnativeviewshot.RNViewShotModule
com.facebook.react.bridge.WindowFocusChangeListener
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
com.facebook.fbreact.specs.NativeDevMenuSpec
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
com.facebook.react.bridge.ReactNoCrashSoftException
com.horcrux.svg.RenderableViewManager$TextViewManager
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.horcrux.svg.RenderableViewManager$RectViewManager
com.facebook.fbreact.specs.NativeJSDevSupportSpec
com.facebook.fbreact.specs.NativeRedBoxSpec
com.google.android.material.transformation.ExpandableTransformationBehavior
com.horcrux.svg.RenderableViewManager$ClipPathViewManager
com.google.firebase.messaging.FirebaseMessagingService
androidx.work.OverwritingInputMerger
com.facebook.react.devsupport.JSCHeapCapture
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.facebook.react.bridge.NativeModule$NativeMethod
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
com.facebook.react.bridge.JSIModuleProvider
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.react.turbomodule.core.TurboModulePerfLogger
com.facebook.react.bridge.JavaOnlyArray$1
androidx.core.app.RemoteActionCompat
com.facebook.systrace.TraceListener
com.facebook.jni.NativeRunnable
com.facebook.react.common.LifecycleState
com.facebook.jni.CppException
com.facebook.react.bridge.LifecycleEventListener
com.facebook.fbreact.specs.NativeClipboardSpec
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingHeadlessService
androidx.work.ArrayCreatingInputMerger
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.google.firebase.datatransport.TransportRegistrar
com.facebook.jni.DestructorThread$DestructorList
com.facebook.react.bridge.JSIModuleHolder
com.facebook.react.bridge.CxxCallbackImpl
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
com.facebook.react.bridge.ContextBaseJavaModule
com.horcrux.svg.SvgViewModule
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
com.facebook.jni.HybridData$Destructor
com.facebook.jni.IteratorHelper
com.facebook.react.bridge.JSIModuleType
com.facebook.hermes.instrumentation.HermesSamplingProfiler
com.facebook.react.bridge.ReactMethod
com.facebook.react.bridge.ReadableMap
androidx.fragment.app.Fragment$5
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.android.material.internal.CheckableImageButton
com.dylanvann.fastimage.FastImageViewManager
com.google.android.material.datepicker.MaterialDatePicker
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
com.facebook.react.fabric.SurfaceHandlerBinding
com.facebook.react.bridge.JSBundleLoader$3
com.facebook.jni.MapIteratorHelper
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
com.facebook.react.views.progressbar.ReactProgressBarViewManager
com.facebook.fbreact.specs.NativeLogBoxSpec
com.facebook.react.modules.debug.AnimationsDebugModule
com.google.firebase.components.ComponentDiscoveryService
com.henninghall.date_picker.pickers.AndroidNative
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.android.installreferrer.api.ReferrerDetails
com.razorpay.CircularProgressView
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
com.facebook.react.uimanager.UIManagerModule
com.facebook.react.bridge.MemoryPressureListener
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
com.reactnative.ivpusic.imagepicker.PickerModule
com.facebook.react.bridge.BaseJavaModule
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule
com.facebook.react.bridge.ColorPropConverter
com.facebook.fbreact.specs.NativeModalManagerSpec
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
com.facebook.react.bridge.JavaScriptExecutorFactory
org.chromium.support_lib_boundary.StaticsBoundaryInterface
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.facebook.react.bridge.JSBundleLoader$5
com.facebook.react.module.model.ReactModuleInfo
androidx.startup.InitializationProvider
com.facebook.react.bridge.CxxModuleWrapper
com.facebook.react.bridge.Promise
com.facebook.react.bridge.CatalystInstanceImpl$2
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.facebook.react.bridge.CxxModuleWrapperBase
androidx.fragment.app.DialogFragment
com.facebook.react.modules.toast.ToastModule
com.facebook.react.bridge.JSApplicationIllegalArgumentException
com.facebook.jni.CppSystemErrorException
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
com.facebook.react.bridge.NativeArray
androidx.savedstate.Recreator
com.razorpay.RzpTokenReceiver
com.horcrux.svg.RenderableViewManager$PatternManager
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
com.facebook.react.bridge.ReactContext$2
com.google.android.gms.common.api.internal.zzd
com.facebook.react.modules.core.ExceptionsManagerModule
com.google.firebase.crashlytics.ndk.JniNativeApi
com.facebook.yoga.YogaLogLevel
com.facebook.react.devsupport.LogBoxModule
com.facebook.react.bridge.ReadableType
androidx.work.WorkerParameters
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec
androidx.core.graphics.drawable.IconCompatParcelizer
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.react.bridge.CallbackImpl
androidx.appcompat.widget.ActionBarOverlayLayout
com.facebook.fbreact.specs.NativeLinkingManagerSpec
com.facebook.soloader.SoLoader
com.facebook.react.bridge.CatalystInstance
com.facebook.react.turbomodule.core.TurboModuleManager$1
com.facebook.react.fabric.events.EventEmitterWrapper
com.facebook.react.bridge.JavaMethodWrapper$8
com.facebook.react.bridge.JSBundleLoader$4
androidx.appcompat.widget.SearchView
com.inprogress.reactnativeyoutube.YouTubeModule
com.facebook.react.bridge.ReactContext$1
com.facebook.react.bridge.ReactSoftExceptionLogger
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.oblador.vectoricons.VectorIconsModule
com.henninghall.date_picker.pickers.IosClone
com.facebook.react.fabric.events.EventBeatManager
com.facebook.react.bridge.JSIModulePackage
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
com.facebook.jni.DestructorThread$Destructor
com.swmansion.reanimated.NativeProxy$SensorSetter
com.google.android.material.snackbar.SnackbarContentLayout
com.facebook.react.jscexecutor.JSCExecutor
com.horcrux.svg.RenderableViewManager$GroupViewManager
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
com.google.android.gms.common.SupportErrorDialogFragment
com.facebook.react.bridge.NativeMap
androidx.work.impl.foreground.SystemForegroundService
com.swmansion.rnscreens.ScreenStackViewManager
com.google.firebase.analytics.FirebaseAnalytics
com.facebook.react.bridge.DynamicFromArray
com.facebook.react.bridge.JSApplicationCausedNativeException
com.facebook.react.uimanager.RootViewManager
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.google.android.gms.auth.api.signin.RevocationBoundService
com.facebook.react.devsupport.JSException
com.google.android.gms.auth.api.signin.internal.SignInConfiguration
com.facebook.react.modules.dialog.AlertFragment
com.henninghall.date_picker.DatePickerModule
androidx.core.app.RemoteActionCompatParcelizer
android.support.v4.graphics.drawable.IconCompatParcelizer
com.android.installreferrer.api.InstallReferrerClient
com.facebook.react.bridge.Arguments
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
com.facebook.fbreact.specs.NativeAppearanceSpec
com.facebook.react.modules.appregistry.AppRegistry
androidx.fragment.app.FragmentManager$6
com.otters.newarchitecture.modules.MainApplicationTurboModuleManagerDelegate
com.facebook.yoga.YogaNodeJNIBase
com.horcrux.svg.RenderableViewManager$MarkerManager
com.facebook.react.bridge.NativeModuleRegistry
org.devio.rn.splashscreen.SplashScreenModule
com.facebook.react.bridge.Inspector$Page
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.facebook.react.modules.fresco.FrescoModule
com.facebook.react.bridge.UnexpectedNativeTypeException
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
com.facebook.soloader.SysUtil$LollipopSysdeps
com.facebook.common.time.AwakeTimeSinceBootClock
com.facebook.react.bridge.JSBundleLoader
com.yalantis.ucrop.view.widget.AspectRatioTextView
com.facebook.react.bridge.MemoryPressure
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
androidx.appcompat.widget.AlertDialogLayout
kotlinx.coroutines.CoroutineExceptionHandler
com.google.android.gms.location.LocationResult
com.bumptech.glide.manager.SupportRequestManagerFragment
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec
com.facebook.soloader.DoNotOptimize
com.facebook.react.bridge.ReactModuleWithSpec
com.BV.LinearGradient.LinearGradientManager
com.swmansion.rnscreens.SearchBarManager
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
com.facebook.react.bridge.ReactContextBaseJavaModule
com.horcrux.svg.RenderableViewManager$DefsViewManager
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.facebook.react.bridge.JavaScriptContextHolder
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
com.reactnativecommunity.asyncstorage.AsyncStorageModule
com.google.android.gms.common.api.internal.BasePendingResult
com.facebook.react.uimanager.events.ReactEventEmitter
com.google.android.material.transformation.FabTransformationBehavior
com.th3rdwave.safeareacontext.SafeAreaContextModule
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager
com.facebook.hermes.reactexecutor.HermesExecutor
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
com.facebook.react.bridge.JSCJavaScriptExecutor
com.facebook.react.uimanager.ViewGroupManager
androidx.appcompat.app.AlertController$RecycleListView
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
com.facebook.react.uimanager.SimpleViewManager
org.reactnative.maskedview.RNCMaskedViewManager
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.facebook.react.bridge.JavaOnlyMap
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.appcompat.widget.ActionBarContainer
com.horcrux.svg.RenderableViewManager$ImageViewManager
com.google.firebase.crashlytics.ndk.CrashlyticsNdkRegistrar
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
com.facebook.react.modules.image.ImageLoaderModule
com.facebook.react.modules.vibration.VibrationModule
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
com.facebook.react.views.text.ReactVirtualTextViewManager
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.react.bridge.ReadableNativeArray$1
com.horcrux.svg.RenderableViewManager$EllipseViewManager
com.bumptech.glide.GeneratedAppGlideModule
com.facebook.react.bridge.ReadableMapKeySetIterator
com.facebook.react.turbomodule.core.TurboModuleManager$2
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.google.android.material.bottomsheet.BottomSheetBehavior
com.ReactNativeBlobUtil.Utils.FileProvider
androidx.versionedparcelable.ParcelImpl
com.facebook.proguard.annotations.DoNotStrip
com.yalantis.ucrop.view.OverlayView
com.facebook.react.modules.share.ShareModule
com.facebook.react.modules.camera.ImageStoreManager
com.facebook.react.views.text.ReactTextAnchorViewManager
com.facebook.react.bridge.ReadableArray
com.facebook.react.bridge.ReactBridge
androidx.core.app.CoreComponentFactory
com.google.android.material.transformation.ExpandableBehavior
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.facebook.react.bridge.ActivityEventListener
com.swmansion.reanimated.nodes.EventNode
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
com.facebook.react.bridge.ReactIgnorableMountingException
com.bumptech.glide.load.ImageHeaderParser$ImageType
com.facebook.react.views.image.ReactImageManager
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.facebook.react.modules.deviceinfo.DeviceInfoModule
com.facebook.fbreact.specs.NativeShareModuleSpec
com.facebook.react.bridge.JavaScriptModuleRegistry
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule
com.facebook.react.bridge.UIManagerListener
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.react.bridge.ReadableNativeMap$3
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
com.facebook.react.bridge.WritableNativeMap
com.facebook.react.bridge.queue.MessageQueueThread
com.facebook.react.modules.i18nmanager.I18nManagerModule
androidx.appcompat.widget.ActionBarContextView
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
com.google.android.material.datepicker.MaterialCalendarGridView
com.facebook.react.bridge.JavaMethodWrapper$4
com.facebook.react.modules.permissions.PermissionsModule
com.facebook.react.perflogger.NativeModulePerfLogger
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
net.time4j.history.SPX
com.swmansion.reanimated.CopiedEvent$1
androidx.room.MultiInstanceInvalidationService
com.facebook.react.bridge.ReactApplicationContext
com.facebook.react.fabric.CoreComponentsRegistry
com.facebook.react.bridge.JavaOnlyMap$2
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
androidx.versionedparcelable.CustomVersionedParcelable
androidx.appcompat.widget.DialogTitle
kotlin.internal.jdk8.JDK8PlatformImplementations
kotlinx.coroutines.internal.MainDispatcherFactory
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
com.jvpg.jvpgclub.MainApplication
com.facebook.react.bridge.BackgroundExecutor
com.facebook.react.modules.fabric.ReactFabric
com.horcrux.svg.RenderableViewManager$LineViewManager
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
com.reactlibrary.InstaStoryManager
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
androidx.work.impl.workers.ConstraintTrackingWorker
com.facebook.react.bridge.JavaMethodWrapper$5
com.facebook.react.turbomodule.core.interfaces.TurboModule
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
com.facebook.react.modules.core.DeviceEventManagerModule
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
com.google.firebase.provider.FirebaseInitProvider
com.bumptech.glide.GeneratedAppGlideModuleImpl
com.facebook.fbreact.specs.NativeBugReportingSpec
androidx.work.impl.background.systemalarm.SystemAlarmService
androidx.activity.ComponentActivity$5
com.facebook.react.bridge.JavaMethodWrapper$7
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.google.android.material.transformation.FabTransformationSheetBehavior
com.facebook.react.bridge.ReadableNativeMap$2
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
com.facebook.fbreact.specs.NativeI18nManagerSpec
com.facebook.jni.DestructorThread$Terminus
androidx.appcompat.widget.ContentFrameLayout
com.facebook.react.bridge.JSIModuleRegistry
com.google.android.material.internal.BaselineLayout
com.facebook.jni.annotations.DoNotStrip
com.facebook.react.devsupport.HMRClient
io.invertase.firebase.app.ReactNativeFirebaseAppModule
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
com.facebook.react.bridge.Inspector$RemoteConnection
com.ReactNativeBlobUtil.ReactNativeBlobUtil
androidx.work.Worker
com.facebook.react.bridge.queue.ReactQueueConfiguration
androidx.work.ListenableWorker
com.shockwave.pdfium.PdfiumCore
com.reactnativecommunity.netinfo.NetInfoModule
com.google.android.datatransport.cct.CctBackendFactory
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.react.common.mapbuffer.ReadableMapBuffer
com.facebook.jni.DestructorThread
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec
com.facebook.react.bridge.WritableArray
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.dylanvann.fastimage.FastImageViewManager: java.lang.String REACT_ON_LOAD_START_EVENT
net.time4j.calendar.astro.JulianDay: net.time4j.scale.TimeScale scale
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToRunnable
com.google.android.gms.internal.measurement.zzfh: com.google.android.gms.internal.measurement.zzfh zza
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
com.google.android.gms.internal.measurement.zzgd: int zzg
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzkm zzf
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzkm zzf
com.rnfs.RNFSManager: java.lang.String RNFSFileTypeRegular
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
net.time4j.tz.model.LastWeekdayPattern: long serialVersionUID
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkk zzT
com.google.android.gms.internal.measurement.zzgy: int zzd
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String NAME
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
com.facebook.react.bridge.ReadableNativeMap$1$1: com.facebook.react.bridge.ReadableNativeMap$1 this$1
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
net.time4j.EnumElement: long serialVersionUID
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
androidx.recyclerview.widget.RecyclerView: int NO_POSITION
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder customClientBuilder
androidx.recyclerview.widget.RecyclerView: int mInitialTouchY
com.reactnative.ivpusic.imagepicker.PickerModule: boolean includeBase64
net.time4j.engine.TimeSpan$Item: long amount
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NEEDS_POINTER_DATA
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzm
com.airbnb.android.react.lottie.LottieAnimationViewManager: int VERSION
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
net.time4j.history.HistoricIntegerElement: long serialVersionUID
com.ReactNativeBlobUtil.ReactNativeBlobUtil: com.facebook.react.bridge.ReactApplicationContext RCTContext
com.google.android.gms.internal.location.zzaa: android.os.Parcelable$Creator CREATOR
net.time4j.calendar.SexagesimalName: int number
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
androidx.appcompat.app.AppCompatViewInflater: java.lang.String LOG_TAG
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
com.ReactNativeBlobUtil.ReactNativeBlobUtil: java.util.concurrent.ThreadPoolExecutor fsThreadPool
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
net.time4j.tz.PlatformTimezone: boolean strict
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
com.google.android.gms.internal.measurement.zzgy: boolean zzi
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
com.ReactNativeBlobUtil.ReactNativeBlobUtil: java.util.concurrent.LinkedBlockingQueue fsTaskQueue
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzkm zzf
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String NAME
com.horcrux.svg.RenderableViewManager: double EPSILON
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
net.time4j.calendar.WeekdayInMonthElement: long serialVersionUID
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType GIF
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String NAME
net.time4j.calendar.service.StdDateElement: java.lang.Class chrono
com.google.android.gms.internal.measurement.zzfn: int zzd
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzg
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK
com.reactnativecommunity.viewpager.ReactViewPagerManager: int COMMAND_SET_PAGE
net.time4j.engine.TimeAxis$SelfElement: java.lang.Class type
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_PREVENTS_DISPLAY_SLEEP_DURING_VIDEO_PLAYBACK
com.razorpay.rn.RazorpayModule: java.lang.String MAP_KEY_RZP_PAYMENT_ID
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzj
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.lang.String TAG
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.google.android.gms.internal.measurement.zzff: boolean zzl
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
com.rnfs.RNFSManager: java.lang.String RNFSExternalDirectoryPath
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkl zzd
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
androidx.recyclerview.widget.RecyclerView: int mTouchSlop
com.facebook.react.bridge.ReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager mNodesManager
com.facebook.react.bridge.BackgroundExecutor: java.lang.String TAG
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
fr.greweb.reactnativeviewshot.RNViewShotModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: int COMMAND_DISMISS_POPUP_MENUS
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzgg zza
com.swmansion.reanimated.nodes.Node: com.swmansion.reanimated.UpdateContext mUpdateContext
androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged
com.swmansion.reanimated.nodes.Node: java.util.Map mLastLoopID
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
org.reactnative.maskedview.RNCMaskedViewManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.measurement.zzfn: java.lang.String zze
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_PICS_DIRECTORY
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzff: java.lang.String zzk
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_Y
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
net.time4j.DayPeriod$Element: long serialVersionUID
net.time4j.DecimalTimeElement: long serialVersionUID
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.google.android.gms.internal.measurement.zzfr: int zze
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzD
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener mAccessibilityServiceChangeListener
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.google.android.gms.internal.measurement.zzfv: java.lang.String zze
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
com.ReactNativeBlobUtil.ReactNativeBlobUtil: java.util.concurrent.ThreadPoolExecutor threadPool
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_SRC_MAINVER
com.reactnativecommunity.viewpager.ReactViewPagerManager: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
com.facebook.react.config.ReactFeatureFlags: boolean enableRuntimeScheduler
net.time4j.tz.HistorizedTimezone: long serialVersionUID
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzad
fr.greweb.reactnativeviewshot.RNViewShotModule: java.lang.String RNVIEW_SHOT
com.facebook.react.fabric.FabricUIManager: boolean mShouldDeallocateEventDispatcher
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: long zzj
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.react.config.ReactFeatureFlags: boolean warnOnLegacyNativeModuleSystemUse
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String REACT_CLASS
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
net.time4j.history.internal.StdHistoricalElement: long serialVersionUID
com.google.android.gms.internal.measurement.zzgm: float zzi
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgt zza
com.google.android.gms.internal.measurement.zzfz: java.lang.String zze
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.String TAG
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int mModuleId
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
com.henninghall.date_picker.DatePickerManager: int SCROLL
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_STEREO_PAN
com.facebook.react.modules.network.NetworkingModule: java.lang.String NAME
com.google.android.gms.location.LocationSettingsRequest: android.os.Parcelable$Creator CREATOR
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_START
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String NAME
com.reactnative.ivpusic.imagepicker.PickerModule: boolean showCropFrame
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzkm zze
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.google.android.material.theme.MaterialComponentsViewInflater: int floatingToolbarItemBackgroundResId
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_IDLE
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_EXTERNAL_DIRECTORY
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperActiveWidgetColor
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_ENABLED
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
com.google.android.gms.internal.measurement.zzey: int zze
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver receiver
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzer: int zzd
net.time4j.calendar.KoreanEra$YearOfEraElement: long serialVersionUID
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.events.EventBeatManager mEventBeatManager
com.rnfs.RNFSManager: java.lang.String RNFSFileTypeDirectory
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableViewManager$SVGClass svgClass
com.google.android.gms.internal.measurement.zzer: boolean zzf
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
androidx.recyclerview.widget.RecyclerView: int VERTICAL
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToSvgView
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
com.reactnative.ivpusic.imagepicker.PickerModule: int CAMERA_PICKER_REQUEST
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_LOCATIONS
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
com.reactnative.ivpusic.imagepicker.PickerModule: boolean cropperCircleOverlay
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.List roots
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
com.google.android.gms.internal.measurement.zzgd: int zzI
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
androidx.recyclerview.widget.RecyclerView: boolean mIsAttached
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarManager$Companion Companion
com.facebook.yoga.YogaNodeJNIBase: float[] arr
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier mReactDatabaseSupplier
net.time4j.OverflowUnit: net.time4j.CalendarUnit unit
com.google.android.gms.internal.measurement.zzgg: int zzd
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.measurement.zzgd: long zzx
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.rnfs.RNFSManager: java.lang.String RNFSDocumentDirectory
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
androidx.appcompat.app.AppCompatViewInflater: androidx.collection.SimpleArrayMap sConstructorMap
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
com.facebook.jni.IteratorHelper: java.lang.Object mElement
androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.ReadableMap options
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_START
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
com.google.android.gms.internal.measurement.zzgd: long zzk
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgg zzS
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_END
androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_PICKER_CANCELLED_MSG
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzkm zzg
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: com.facebook.react.turbomodule.core.interfaces.TurboModule mModule
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
com.facebook.react.modules.storage.AsyncStorageModule: boolean mShuttingDown
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
net.time4j.CalendarUnit: net.time4j.IsoDateUnit kld
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.reactnativecommunity.netinfo.NetInfoModule: com.reactnativecommunity.netinfo.ConnectivityReceiver mConnectivityReceiver
com.facebook.react.modules.storage.AsyncStorageModule: int MAX_SQL_KEYS
com.facebook.react.modules.appstate.AppStateModule: java.lang.String NAME
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.BV.LinearGradient.LinearGradientManager: java.lang.String REACT_CLASS
net.time4j.calendar.KoreanCalendar$SPX: long serialVersionUID
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_CALLBACK_ERROR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.google.android.gms.measurement.internal.zzac: android.os.Parcelable$Creator CREATOR
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_LIBRARY_PERMISSION_KEY
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType UNKNOWN
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String TAG
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.resolver.DeviceTypeResolver deviceTypeResolver
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_FAILED_TO_OPEN_CAMERA
net.time4j.engine.BasicElement: int identity
com.google.android.gms.internal.measurement.zzff: int zzg
com.facebook.react.common.mapbuffer.ReadableMapBuffer: com.facebook.jni.HybridData mHybridData
net.time4j.tz.SingleOffsetTimezone: net.time4j.tz.ZonalOffset offset
net.time4j.engine.BasicElement: java.lang.String name
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_WIDTH
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerInteractionManager interactionManager
androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_CONTROLS
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
org.wonday.pdf.PdfManager: boolean $assertionsDisabled
com.horcrux.svg.RenderableViewManager: java.lang.String mClassName
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
com.google.android.gms.location.LocationSettingsStates: android.os.Parcelable$Creator CREATOR
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_RATE
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.agontuk.RNFusedLocation.RNFusedLocationModule: com.agontuk.RNFusedLocation.LocationProvider continuousLocationProvider
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_COLORS
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData mHybridData
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzL
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
net.time4j.calendar.EastAsianME: long serialVersionUID
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzfz zzac
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_EXT_STORAGE_DIRECTORY
androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize
com.inprogress.reactnativeyoutube.YouTubeManager: int COMMAND_PREVIOUS_VIDEO
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
com.google.android.gms.internal.measurement.zzfd: int zzd
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
net.time4j.calendar.KoreanEra$EraElement: long serialVersionUID
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_RESOURCES
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzem zza
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.reactnativecommunity.netinfo.NetInfoModule: int numberOfListeners
com.google.android.gms.internal.measurement.zzfb: java.lang.String zze
com.rnfs.RNFSManager: java.lang.String RNFSPicturesDirectoryPath
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.learnium.RNDeviceInfo.RNDeviceModule: boolean mLastPowerSaveState
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
com.rnfs.RNFSManager: android.util.SparseArray uploaders
com.horcrux.svg.RNSVGRenderableManager: int DEFAULT_BUFFER_SIZE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_START
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.Compression compression
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory mCallerContextFactory
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
com.google.android.gms.internal.measurement.zzff: long zze
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger
net.time4j.SPX: long serialVersionUID
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate mSurfaceDelegate
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_IMAGE_DATA_FOUND
com.rnfs.RNFSManager: android.util.SparseArray downloaders
com.facebook.react.bridge.RuntimeExecutor: com.facebook.jni.HybridData mHybridData
net.time4j.DateElement: long serialVersionUID
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int mRecommendedTimeout
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HORIZONTAL
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$Companion Companion
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_PICKER_CANCELLED_KEY
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_DISALLOW_INTERRUPTION
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzH
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.reactnativecommunity.geolocation.GeolocationModule: java.lang.String mWatchedProvider
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzkm zzh
com.google.android.gms.internal.measurement.zzgd: int zze
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzg
com.facebook.react.bridge.Inspector$Page: int mId
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfz zza
com.google.android.gms.internal.measurement.zzgd: int zzK
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.google.android.gms.internal.measurement.zzek: boolean zzk
com.facebook.react.turbomodule.core.TurboModuleManager: boolean sIsSoLibraryLoaded
com.facebook.react.modules.blob.FileReaderModule: java.lang.String NAME
net.time4j.CalendarUnit: net.time4j.IsoDateUnit ui
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_PAGING
net.time4j.engine.ChronoException: long serialVersionUID
net.time4j.tz.model.EmptyTransitionModel: net.time4j.tz.ZonalOffset offset
net.time4j.calendar.service.StdEnumDateElement: long serialVersionUID
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.reactnativecommunity.netinfo.NetInfoModule: com.reactnativecommunity.netinfo.AmazonFireDeviceConnectivityPoller mAmazonConnectivityChecker
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: int DEFAULT_INTERVAL_DURATION
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.reactnativecommunity.geolocation.GeolocationModule: java.lang.String NAME
net.time4j.TimeElement: long serialVersionUID
com.google.android.gms.internal.measurement.zzft: int zzd
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_RIGHT
androidx.recyclerview.widget.RecyclerView: int mScrollState
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
com.google.android.gms.internal.location.zzba: android.os.Parcelable$Creator CREATOR
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: boolean sIsSoLibraryLoaded
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.google.android.gms.internal.measurement.zzff: java.lang.String zzo
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
net.time4j.CalendarUnit: net.time4j.IsoDateUnit joda
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.google.android.gms.internal.measurement.zzff: int zzd
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String FIREBASE_TEST_LAB
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
com.google.android.gms.internal.measurement.zzcl: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_START
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter mRCTEventEmitter
com.swmansion.reanimated.NativeProxy$AnimationFrameCallback: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.measurement.zzgd: long zzU
com.google.android.gms.internal.measurement.zzek: int zze
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzf
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2
androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
com.google.android.gms.internal.measurement.zzgd: boolean zzab
net.time4j.IntegerTimeElement: long serialVersionUID
net.time4j.engine.RuleNotFoundException: long serialVersionUID
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELAY_MS
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
com.swmansion.reanimated.NativeProxy$EventHandler: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.reactlibrary.createthumbnail.CreateThumbnailModule: com.facebook.react.bridge.ReactApplicationContext reactContext
androidx.recyclerview.widget.RecyclerView: boolean DEBUG
net.time4j.calendar.astro.JulianDay: long serialVersionUID
com.facebook.react.config.ReactFeatureFlags: boolean enableAggressiveEventEmitterCleanup
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: java.lang.String E_FAILED_TO_SHOW_PLAYER
com.google.android.gms.measurement.internal.zzkw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzkl zzf
com.reactnative.ivpusic.imagepicker.PickerModule: android.net.Uri mCameraCaptureURI
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_SRC_IS_NETWORK
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.google.android.gms.internal.measurement.zzgm: double zzj
com.facebook.react.bridge.ReadableNativeMap$1$1: int val$index
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_DIRECTION
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_DEFAULT
com.facebook.react.bridge.ReactContext: boolean mDestroyed
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzgp zza
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$Companion Companion
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaa
com.facebook.react.bridge.ReadableNativeMap$1: com.facebook.react.bridge.ReadableNativeMap this$0
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String NAME
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
com.facebook.react.turbomodule.core.TurboModulePerfLogger: com.facebook.react.perflogger.NativeModulePerfLogger sNativeModulePerfLogger
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_VOLUME
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NAME
kotlinx.coroutines.CompletedExceptionally: int _handled
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
net.time4j.LongElement: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
net.time4j.calendar.EastAsianMonth: int index
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow
com.razorpay.rn.RazorpayModule: java.lang.String MAP_KEY_ERROR_CODE
com.google.android.gms.internal.location.zzbc: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
net.time4j.DayCycles: long serialVersionUID
com.facebook.react.modules.toast.ToastModule: java.lang.String NAME
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionTime
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
androidx.recyclerview.widget.RecyclerView: int mLastTouchX
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker
com.google.android.gms.internal.measurement.zzfp: int zze
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzj
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_NUMBER_OF_TAPS
com.facebook.react.uimanager.UIManagerModule: int mViewManagerConstantsCacheSize
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.google.android.gms.location.zzs: android.os.Parcelable$Creator CREATOR
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.react.uimanager.BaseViewManager: java.util.Map sStateDescription
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData mHybridData
cl.json.RNShareModule: int SHARE_REQUEST_CODE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
com.facebook.react.modules.dialog.DialogModule: java.lang.String NAME
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.google.android.gms.internal.measurement.zzek: java.lang.String zzf
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
com.facebook.react.bridge.queue.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType JPEG
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.google.android.gms.internal.measurement.zzfv: int zzd
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown
com.swmansion.reanimated.nodes.Node: com.swmansion.reanimated.NodesManager mNodesManager
com.google.android.gms.internal.measurement.zzgm: long zzh
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgp zzf
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
androidx.recyclerview.widget.RecyclerView: boolean mEnableFastScroller
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.ResultCollector resultCollector
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String[] val$iteratorKeys
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_ACTIVITY_DOES_NOT_EXIST
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
com.google.android.gms.internal.measurement.zzei: int zze
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzer zzf
com.horcrux.svg.RNSVGRenderableManager: int EOF
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_END
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MAX_POINTERS
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgm: int zzd
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzer zzi
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_CAMERA_PERMISSION_MSG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzP
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_START_POINT
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: java.lang.String ERR_INTERNAL_ERROR
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzv
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzX
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzf
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
com.google.android.gms.internal.measurement.zzfb: int zzd
net.time4j.calendar.service.StdWeekdayElement: long serialVersionUID
com.google.android.gms.internal.measurement.zzer: java.lang.String zzi
androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete
net.time4j.calendar.CommonElements$DayOfWeekElement: long serialVersionUID
com.google.android.gms.location.LocationSettingsResult: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.appstate.AppStateModule: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_TOP
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzi
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
net.time4j.tz.NamedID: long serialVersionUID
com.facebook.react.bridge.CallbackImpl: int mCallbackId
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzA
net.time4j.calendar.KoreanCalendar: long serialVersionUID
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.agontuk.RNFusedLocation.RNFusedLocationModule: java.util.HashMap pendingRequests
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricRenderer
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
com.inprogress.reactnativeyoutube.YouTubeManager: int COMMAND_NEXT_VIDEO
com.google.android.gms.internal.measurement.zzft: long zzg
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzgb zza
com.rnfs.RNFSManager: java.lang.String RNFSExternalCachesDirectoryPath
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
com.rnfs.RNFSManager: java.lang.String RNFSCachesDirectoryPath
com.facebook.jni.HybridData$Destructor: long mNativePointer
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DURATION_MS
com.dylanvann.fastimage.FastImageViewManager: com.bumptech.glide.RequestManager requestManager
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.facebook.react.config.ReactFeatureFlags: boolean enableEagerRootViewAttachment
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
com.google.android.gms.internal.measurement.zzfh: int zzd
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState
net.time4j.PlainDate: long serialVersionUID
com.facebook.react.bridge.DynamicFromArray: int mIndex
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzg
com.facebook.react.bridge.NativeModuleRegistry: java.lang.String TAG
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzO
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.util.Iterator mIterator
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.facebook.react.uimanager.UIManagerModule: int mBatchId
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzer: com.google.android.gms.internal.measurement.zzer zza
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
com.swmansion.rnscreens.ScreenViewManager: java.lang.String REACT_CLASS
net.time4j.calendar.RelatedGregorianYearElement: long serialVersionUID
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperStatusBarColor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String LOW_POWER_MODE
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzei zza
com.google.android.gms.internal.measurement.zzfd: boolean zzf
net.time4j.MachineTime: long serialVersionUID
com.google.android.gms.internal.measurement.zzfj: com.google.android.gms.internal.measurement.zzfj zza
androidx.recyclerview.widget.RecyclerView: int DEFAULT_ORIENTATION
com.facebook.react.animated.NativeAnimatedModule: java.lang.String NAME
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect
net.time4j.engine.TimeAxis$SelfElement: net.time4j.engine.TimePoint min
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgd zzd
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_FIELDS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
net.time4j.tz.ZonalOffset: long serialVersionUID
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableViewManager$MatrixDecompositionContext sMatrixDecompositionContext
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.google.android.gms.internal.measurement.zzfx: double zzi
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
androidx.recyclerview.widget.RecyclerView: int INVALID_POINTER
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_SRC_PATCHVER
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: java.lang.String E_PLAYER_ERROR
com.facebook.react.modules.share.ShareModule: java.lang.String NAME
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_SRC_TYPE
com.google.android.gms.internal.measurement.zzfv: com.google.android.gms.internal.measurement.zzfv zza
com.horcrux.svg.RenderableViewManager: android.util.SparseArray mTagToRunnable
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager$Companion Companion
androidx.recyclerview.widget.RecyclerView: long FOREVER_NS
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.Map propManagersMap
com.razorpay.rn.RazorpayModule: java.lang.String MAP_KEY_PAYMENT_DETAILS
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
com.facebook.react.devsupport.JSDevSupport: java.lang.String MODULE_NAME
com.google.android.gms.internal.measurement.zzgd: int zzs
com.google.android.gms.internal.measurement.zzgd: boolean zzF
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
com.airbnb.android.react.lottie.LottieAnimationViewManager: int COMMAND_PLAY
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzae
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
com.google.android.gms.internal.measurement.zzft: java.lang.String zzf
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_SRC_HEADERS
com.reactnativerestart.RestartModule: com.facebook.react.bridge.LifecycleEventListener mLifecycleEventListener
com.facebook.react.modules.intent.IntentModule: java.lang.String NAME
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzgy zza
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_ANGLE_CENTER
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
net.time4j.tz.ZonalTransition: int previous
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_MUTED
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
net.time4j.tz.ZonalTransition: int dst
com.facebook.react.fabric.FabricUIManager: int mCurrentSynchronousCommitNumber
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener
com.facebook.react.fabric.FabricUIManager: long mCommitStartTime
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzkm zzf
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.RNInstallReferrerClient installReferrerClient
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int sHolderCount
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: boolean zzZ
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzk
net.time4j.history.HistoricDateElement: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
com.reactnativecommunity.viewpager.ReactViewPagerManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
androidx.viewpager2.widget.ViewPager2$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
net.time4j.history.HistoricIntegerElement: net.time4j.history.ChronoHistory history
androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzp
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter
com.facebook.react.config.ReactFeatureFlags: boolean enableRuntimeSchedulerInTurboModule
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.SerialExecutor executor
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
com.airbnb.android.react.lottie.LottieAnimationViewManager: int COMMAND_RESET
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
org.wonday.pdf.PdfManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.google.android.gms.internal.measurement.zzfz: int zzd
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
com.reactnative.ivpusic.imagepicker.PickerModule: boolean multiple
net.time4j.format.NumberSystem: java.lang.String code
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
net.time4j.tz.TransitionResolver: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
net.time4j.calendar.service.StdIntegerDateElement: long serialVersionUID
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
net.time4j.engine.TimeAxis$SelfElement: net.time4j.engine.TimePoint max
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
com.facebook.react.fabric.FabricUIManager: long mLayoutTime
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzG
com.google.android.gms.internal.measurement.zzkf: java.util.Map zza
com.google.android.gms.internal.measurement.zzfx: java.lang.String zzf
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
net.time4j.CalendarUnit: net.time4j.IsoDateUnit co
com.google.android.gms.internal.measurement.zzff: java.lang.String zzf
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback mDispatchUIFrameCallback
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
com.reactlibrary.InstaStoryManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
com.airbnb.lottie.LottieAnimationView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier mReactDatabaseSupplier
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Map mTurboModuleHolders
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean mShuttingDown
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzn
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.google.android.gms.internal.measurement.zzet: boolean zzh
com.google.android.gms.internal.measurement.zzei: boolean zzh
com.google.android.gms.internal.measurement.zzgd: int zzJ
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandlerWrapper
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: com.facebook.react.bridge.Promise mPickerPromise
com.horcrux.svg.SvgViewManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.measurement.zzgd: int zzQ
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.reanimated.nodes.EventNode: java.util.List mMapping
net.time4j.Weekcycle: long serialVersionUID
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_URI
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.horcrux.svg.RenderableViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.reactnative.ivpusic.imagepicker.PickerModule: boolean includeExif
com.swmansion.reanimated.ReanimatedModule: java.lang.String NAME
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_LIBRARY_DIRECTORY
com.swmansion.reanimated.NativeProxy$SensorSetter: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.measurement.zzkf: com.google.android.gms.internal.measurement.zzmp zzc
com.th3rdwave.safeareacontext.SafeAreaContextModule: com.th3rdwave.safeareacontext.SafeAreaContextModule$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mAccessibilityServiceEnabled
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainerViewManager$Companion Companion
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.resolver.DeviceIdResolver deviceIdResolver
net.time4j.tz.FallbackTimezone: net.time4j.tz.TZID tzid
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP_A
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String TAG
net.time4j.tz.model.FixedDayPattern: long serialVersionUID
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule mTurboModuleManagerJSIModule
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzgi zza
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperToolbarWidgetColor
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object[] val$iteratorValues
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String REACT_CLASS
cl.json.RNShareModule: com.facebook.react.bridge.ReactApplicationContext reactContext
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
com.facebook.react.views.slider.ReactSliderManager: int STYLE
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzkm zzd
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzem zzg
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
com.google.android.gms.internal.measurement.zzgd: boolean zzz
com.google.android.gms.measurement.internal.zzq: android.os.Parcelable$Creator CREATOR
com.reactnativerestart.RestartModule: java.lang.String REACT_NATIVE_HOST_CLASS_NAME
net.time4j.format.expert.NonAmbivalentMap: long serialVersionUID
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
net.time4j.PlainTime: long serialVersionUID
com.rnfs.RNFSManager: java.lang.String RNFSExternalStorageDirectoryPath
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
com.reactnativecommunity.webview.RNCWebViewModule: com.reactnativecommunity.webview.RNCWebViewModuleImpl mRNCWebViewModuleImpl
net.time4j.Weekmodel$CalendarWeekElement: long serialVersionUID
com.reactnativecommunity.asyncstorage.AsyncStorageModule: int MAX_SQL_KEYS
com.google.android.gms.internal.measurement.zzgt: int zzd
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
androidx.recyclerview.widget.RecyclerView: int HORIZONTAL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.oblador.vectoricons.VectorIconsModule: java.lang.String REACT_CLASS
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: com.facebook.react.bridge.ReadableMap initialNotification
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MIN_POINTERS
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: java.lang.String E_ACTIVITY_DOES_NOT_EXIST
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap mPreviousDisplayMetrics
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.google.android.gms.internal.measurement.zzfj: java.lang.String zze
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType RAW
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String NAME
com.google.android.gms.internal.measurement.zzgr: java.lang.String zze
net.time4j.history.HistoricEraElement: net.time4j.history.ChronoHistory history
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String BATTERY_LEVEL
androidx.recyclerview.widget.RecyclerView: long NO_ID
com.google.android.gms.internal.measurement.zzgd: long zzl
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion Companion
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.facebook.react.bridge.ReadableNativeMap$1: int currentIndex
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_BIND_VIEW_TAG
com.google.android.gms.internal.measurement.zzfb: boolean zzg
com.ReactNativeBlobUtil.ReactNativeBlobUtil: boolean ActionViewVisible
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_EXCEPTION
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
androidx.recyclerview.widget.RecyclerView: int INVALID_TYPE
com.google.android.gms.internal.measurement.zzem: int zzd
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.rnfs.RNFSManager: java.lang.String MODULE_NAME
net.time4j.CalendarUnit: net.time4j.IsoDateUnit eof
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.ReactNativeBlobUtil.ReactNativeBlobUtil: okhttp3.OkHttpClient mClient
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
net.time4j.DayCycles: long days
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.String[] val$iteratorKeys
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
net.time4j.tz.SPX: long serialVersionUID
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
net.time4j.tz.model.RuleBasedTransitionModel: long serialVersionUID
net.time4j.tz.model.EmptyTransitionModel: long serialVersionUID
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
com.reactnativerestart.RestartModule: java.lang.String REACT_APPLICATION_CLASS_NAME
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList mListeners
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperToolbarTitle
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver
com.reactnativecommunity.clipboard.ClipboardModule: java.lang.String NAME
com.reactnative.ivpusic.imagepicker.PickerModule: boolean disableCropperColorSetters
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.swmansion.reanimated.ReanimatedModule: com.facebook.react.uimanager.UIManagerModule mUIManager
net.time4j.tz.ZonalTransition: long posix
androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth
net.time4j.engine.TimeSpan$Item: java.lang.Object unit
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.razorpay.rn.RazorpayModule: java.lang.String MAP_KEY_PAYMENT_ID
com.reactnative.ivpusic.imagepicker.PickerModule: int IMAGE_PICKER_REQUEST
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY
net.time4j.tz.FallbackTimezone: long serialVersionUID
com.reactnative.ivpusic.imagepicker.PickerModule: boolean hideBottomControls
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.google.android.gms.measurement.internal.zzau: android.os.Parcelable$Creator CREATOR
net.time4j.scale.LeapSeconds$SimpleLeapSecondEvent: int shift
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.google.android.gms.internal.measurement.zzfv: long zzf
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.facebook.react.config.ReactFeatureFlags: boolean enableExperimentalStaticViewConfigs
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzh
com.inprogress.reactnativeyoutube.YouTubeModule: java.lang.String E_MODULE_ERROR
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_SRC_URI
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean mIsDoneCreatingModule
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
com.google.android.gms.internal.measurement.zzkc: com.google.android.gms.internal.measurement.zzjw zza
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_CANNOT_LAUNCH_CAMERA
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
androidx.recyclerview.widget.RecyclerView: int mInitialTouchX
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_Y
com.google.android.gms.internal.measurement.zzfx: long zzg
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_RESIZE_MODE
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzek zza
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
net.time4j.format.expert.AmbivalentValueException: long serialVersionUID
com.google.android.gms.location.zzbo: android.os.Parcelable$Creator CREATOR
com.reactnative.ivpusic.imagepicker.PickerModule: int height
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline mImagePipeline
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_ON_LAYOUT_TAG
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags
androidx.recyclerview.widget.RecyclerView: int mScrollPointerId
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
net.time4j.OverflowUnit: long serialVersionUID
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzW
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NUMBER_OF_POINTERS
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory[] handlerFactories
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: java.lang.String SELF_MODULE_NAME
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
com.google.android.gms.internal.measurement.zzft: int zzi
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: int REQ_RESOLVE_SERVICE_MISSING
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair
com.razorpay.rn.RazorpayModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.bridge.BackgroundExecutor: java.util.concurrent.ExecutorService mExecutorService
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_LIBRARY_PERMISSION_MSG
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzkm zzi
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ATTR
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String TAG
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTModernEventEmitter mFabricEventEmitter
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzt
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.google.android.gms.internal.measurement.zzfd: int zzh
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
net.time4j.Weekmodel$CalendarWeekElement: net.time4j.Weekmodel this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_VIEW_NOT_FOUND
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
net.time4j.calendar.EastAsianMonth: boolean leap
com.airbnb.android.react.lottie.LottieAnimationViewManager: int COMMAND_RESUME
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzf
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaf
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionCPPTime
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String mediaType
com.facebook.react.modules.core.TimingModule: java.lang.String NAME
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
com.facebook.react.bridge.ReadableNativeMap$2: int currentIndex
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: java.lang.String ERR_SETTINGS_CHANGE_UNAVAILABLE_CODE
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String mLastBatteryState
net.time4j.engine.TimeSpan$Item: long serialVersionUID
io.xogus.reactnative.versioncheck.RNVersionCheckModule: java.lang.String packageName
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_DRAGGING
com.ReactNativeBlobUtil.ReactNativeBlobUtil: android.util.SparseArray promiseTable
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
com.rnfs.RNFSManager: java.lang.String RNFSDownloadDirectoryPath
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_CAMERA_IS_NOT_AVAILABLE
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzi
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
net.time4j.tz.NamedID: java.lang.String tzid
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxAnimations
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String NAME
com.rnfs.RNFSManager: java.lang.String RNFSTemporaryDirectoryPath
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
net.time4j.calendar.CommonElements$DayOfWeekElement: net.time4j.Weekmodel model
com.reactnative.ivpusic.imagepicker.PickerModule: boolean enableRotationGesture
com.google.android.gms.internal.measurement.zzet: boolean zzi
com.google.android.gms.internal.measurement.zzfr: com.google.android.gms.internal.measurement.zzfr zza
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
com.google.android.gms.internal.measurement.zzey: boolean zzg
androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_END
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String REACT_CLASS
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_SRC
com.facebook.react.config.ReactFeatureFlags: boolean enableTurboModulePromiseAsyncDispatch
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher mMountItemDispatcher
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
io.invertase.firebase.common.ReactNativeFirebaseModule: io.invertase.firebase.common.TaskExecutorService executorService
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
com.google.android.gms.internal.measurement.zzfx: float zzh
net.time4j.calendar.CyclicYear: long serialVersionUID
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
com.google.android.gms.internal.measurement.zzgg: int zze
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewManagerImpl mRNCWebViewManagerImpl
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzfp zza
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener
com.google.android.gms.internal.measurement.zzgd: long zzB
com.google.android.gms.internal.measurement.zzgd: int zzY
com.facebook.react.bridge.ReadableNativeMap$3: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor executor
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzfb zza
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
com.google.android.gms.internal.measurement.zzet: java.lang.String zzf
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_MAIN_BUNDLE
androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.dylanvann.fastimage.FastImageViewManager: java.util.Map VIEWS_FOR_URLS
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: com.facebook.react.bridge.Promise promise
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener ON_CHANGE_LISTENER
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.ScreenViewManager$Companion Companion
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData mHybridData
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
com.facebook.react.uimanager.events.ReactEventEmitter: boolean $assertionsDisabled
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfd: com.google.android.gms.internal.measurement.zzfd zza
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
com.swmansion.reanimated.CopiedEvent$1: com.swmansion.reanimated.CopiedEvent this$0
com.google.android.gms.internal.measurement.zzek: int zzd
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.facebook.react.fabric.FabricUIManager: long mDispatchViewUpdatesTime
com.inprogress.reactnativeyoutube.YouTubeModule: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MIN_DURATION_MS
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG_A
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.reactnative.ivpusic.imagepicker.PickerModule: boolean freeStyleCropEnabled
com.google.android.gms.internal.measurement.zzgd: long zzw
net.time4j.calendar.EastAsianST: long serialVersionUID
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
com.swmansion.reanimated.NativeProxy$EventHandler: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
com.facebook.react.bridge.ReadableNativeMap$2: com.facebook.react.bridge.ReadableNativeMap this$0
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_PLAY_IN_BACKGROUND
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModules
com.dylanvann.fastimage.FastImageViewManager: java.lang.String REACT_CLASS
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.util.HashMap initialNotificationMap
com.google.android.gms.internal.measurement.zzio: int zzb
com.otters.newarchitecture.components.MainComponentsRegistry: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_ANGLE
com.google.android.gms.internal.measurement.zzfx: java.lang.String zze
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_LEFT
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String MODULE_NAME
net.time4j.tz.PlatformTimezone: long serialVersionUID
com.google.android.gms.internal.measurement.zzer: java.lang.String zzg
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.swmansion.reanimated.nodes.Node: java.util.List mChildren
net.time4j.tz.FallbackTimezone: net.time4j.tz.Timezone fallback
com.google.android.gms.internal.measurement.zzgm: com.google.android.gms.internal.measurement.zzgm zza
com.facebook.react.fabric.FabricUIManager: boolean IS_DEVELOPMENT_ENVIRONMENT
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
net.time4j.calendar.CommonElements$CalendarWeekElement: net.time4j.engine.ChronoElement dayElement
com.facebook.react.fabric.FabricUIManager: java.lang.String TAG
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean mIsTryingToCreate
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String REACT_CLASS
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_TEMP_DIRECTORY
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
com.google.android.gms.internal.measurement.zzem: java.lang.String zzh
com.reactnativerestart.RestartModule: com.reactnativerestart.ReactInstanceHolder mReactInstanceHolder
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
net.time4j.IntegerDateElement: long serialVersionUID
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewManager$Companion Companion
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider mJavaModuleProvider
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_PROGRESS_UPDATE_INTERVAL
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String NAME
net.time4j.history.HistoricDateElement: net.time4j.history.ChronoHistory history
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: int REQUEST_CHECK_SETTINGS
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_SRC_IS_ASSET
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MAX_DIST
com.google.android.gms.internal.measurement.zzfr: long zzf
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_SHOULD_ACTIVATE_ON_START
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$eventListener$1 eventListener
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DIST
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
fr.greweb.reactnativeviewshot.RNViewShotModule: java.util.concurrent.Executor executor
com.google.android.gms.internal.measurement.zzfj: int zzd
com.google.android.gms.internal.measurement.zzet: boolean zzj
androidx.recyclerview.widget.RecyclerView: boolean DISPATCH_TEMP_DETACH
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback
net.time4j.WeekdayInMonthElement: long serialVersionUID
androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.dylanvann.fastimage.FastImageViewManager: java.lang.String REACT_ON_PROGRESS_EVENT
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
androidx.recyclerview.widget.RecyclerView: int UNDEFINED_DURATION
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.facebook.react.bridge.ReactSoftExceptionLogger: java.util.List sListeners
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.measurement.zzgk: int zzd
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfn zzg
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkl zze
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
net.time4j.calendar.CommonElements$CalendarWeekElement: boolean bounded
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_END
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_END
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String REJECTION_CODE
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
net.time4j.PlainTimestamp: long serialVersionUID
net.time4j.engine.BasicElement: int hash
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzg
com.dylanvann.fastimage.FastImageViewModule: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
net.time4j.tz.PlatformTimezone: net.time4j.tz.TZID id
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver headphoneConnectionReceiver
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_NESTED_PREFETCH_TAG
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
net.time4j.Weekmodel$DayOfWeekElement: net.time4j.Weekmodel this$0
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzgk zza
com.reactnative.ivpusic.imagepicker.PickerModule: boolean useFrontCamera
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStackViewManager$Companion Companion
net.time4j.OverflowUnit: int policy
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager mJavaTimerManager
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_PREFETCH_TAG
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.measurement.zzkf: int zzd
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
com.google.android.gms.internal.measurement.zzet: int zze
androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgm: long zze
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
net.time4j.tz.model.GregorianTimezoneRule: long serialVersionUID
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzkm zzf
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
com.facebook.react.turbomodule.core.TurboModuleManager: java.lang.Object mTurboModuleCleanupLock
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: java.lang.String ERR_USER_DENIED_CODE
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String NAME
com.facebook.react.modules.blob.BlobModule: java.lang.String NAME
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_SEEK
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String mCurrentMediaPath
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVATE_AFTER_LONG_PRESS
com.google.android.gms.internal.location.zzj: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
com.reactnativecommunity.viewpager.ReactViewPagerManager: int COMMAND_SET_PAGE_WITHOUT_ANIMATION
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
com.google.android.gms.internal.measurement.zzfp: int zzd
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzq
com.google.android.gms.internal.measurement.zzgd: long zzN
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.google.android.gms.internal.measurement.zzgy: int zze
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: long zzM
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.reflect.Method mHandleErrorFunc
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
com.google.android.gms.internal.measurement.zzfz: java.lang.String zzf
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.inprogress.reactnativeyoutube.YouTubeManager: int COMMAND_SEEK_TO
com.google.android.gms.internal.measurement.zzgd: int zza
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.RuntimeScheduler: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzft zza
net.time4j.scale.LeapSeconds$SimpleLeapSecondEvent: net.time4j.base.GregorianDate date
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_ERROR_WHILE_CLEANING_FILES
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations
com.facebook.react.devsupport.JSDevSupport: com.facebook.react.devsupport.JSDevSupport$DevSupportCallback mCurrentCallback
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_FAILED_TO_SHOW_PICKER
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.google.android.gms.internal.measurement.zzfp: boolean zzh
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_X
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String NAME
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_CREATE_VIEW_TAG
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
net.time4j.Duration: long serialVersionUID
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
com.google.android.gms.internal.measurement.zzek: boolean zzj
androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.airbnb.android.react.lottie.LottieAnimationViewManager: int COMMAND_PAUSE
com.rnfs.RNFSManager: java.lang.String RNFSDocumentDirectoryPath
net.time4j.Moment: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
com.google.android.gms.internal.measurement.zzfh: java.lang.String zze
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
net.time4j.tz.model.CompositeTransitionModel: long serialVersionUID
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProviderManager$Companion Companion
io.invertase.firebase.common.ReactNativeFirebaseModule: java.lang.String moduleName
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
com.google.android.gms.internal.measurement.zzgy: double zzj
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
com.google.android.gms.internal.measurement.zzfn: com.google.android.gms.internal.measurement.zzfn zza
com.facebook.react.fabric.events.FabricEventEmitter: java.lang.String TAG
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_MANUAL_ACTIVATION
com.facebook.react.bridge.ModuleSpec: java.lang.Class mType
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
net.time4j.engine.TimeAxis$SelfElement: long serialVersionUID
com.google.android.gms.internal.measurement.zzet: int zzd
com.reactnative.ivpusic.imagepicker.PickerModule: boolean cropping
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
com.google.android.gms.internal.measurement.zzgd: int zzC
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String E_NO_CAMERA_PERMISSION_KEY
com.facebook.react.config.ReactFeatureFlags: boolean enableFabricLogs
androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD
com.swmansion.reanimated.nodes.Node: java.util.Map mMemoizedValue
net.time4j.i18n.LanguageMatch: java.lang.String alias
net.time4j.calendar.astro.JulianDay: double value
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding mBinding
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzkm zzh
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_SERVICE_EVENT_NAME
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_VERTICAL
com.reactnative.ivpusic.imagepicker.PickerModule: boolean showCropGuidelines
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: com.facebook.react.bridge.ActivityEventListener mActivityEventListener
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzek: boolean zzl
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkm zzg
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_PAUSED
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.transitions.TransitionModule mTransitionManager
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.yalantis.ucrop.model.AspectRatio: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: int REQ_START_STANDALONE_PLAYER
net.time4j.engine.CalendarDays: long days
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate val$delegate
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzff zza
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap mMeasuredStyles
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.TurboModuleManager this$0
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_AVG_TOUCHES
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzkm zzd
com.oblador.vectoricons.VectorIconsModule: java.util.Map sTypefaceCache
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzkm zze
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.facebook.react.config.ReactFeatureFlags: boolean insertZReorderBarriersOnViewGroupChildren
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgk: int zze
com.ReactNativeBlobUtil.ReactNativeBlobUtil: java.util.concurrent.LinkedBlockingQueue taskQueue
net.time4j.calendar.EastAsianMonth: long serialVersionUID
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_SETTLING
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
com.reactnative.ivpusic.imagepicker.PickerModule: int width
com.swmansion.reanimated.Scheduler: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.measurement.zzek: boolean zzh
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
net.time4j.Weekmodel$CalendarWeekElement: int category
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
net.time4j.calendar.EastAsianCY: long serialVersionUID
com.facebook.react.bridge.ReactBridge: boolean sDidInit
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.ReanimatedEventDispatcher reanimatedEventDispatcher
androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
org.wonday.pdf.PdfManager: org.wonday.pdf.PdfView pdfView
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData mHybridData
net.time4j.tz.model.SPX: long serialVersionUID
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_FULLSCREEN
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue mOperations
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzgr zza
com.google.android.gms.internal.measurement.zzey: java.lang.String zzf
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map REACT_PROPS_AUTOFILL_HINTS_MAP
net.time4j.tz.ZonalTransition: long serialVersionUID
com.facebook.react.views.slider.ReactSliderManager: java.lang.String REACT_CLASS
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String NAME
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String TAG
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzkm zzf
com.swmansion.reanimated.nodes.Node: java.lang.Double ONE
com.facebook.jni.CppSystemErrorException: int errorCode
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
androidx.recyclerview.widget.RecyclerView: int MAX_SCROLL_DURATION
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.facebook.react.config.ReactFeatureFlags: boolean useOverflowInset
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzey zza
com.facebook.react.turbomodule.core.TurboModuleManager: boolean mTurboModuleCleanupStarted
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
com.google.android.gms.internal.measurement.zzgd: long zzn
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
androidx.recyclerview.widget.RecyclerView: boolean VERBOSE_TRACING
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzy
com.facebook.react.config.ReactFeatureFlags: boolean enableLockFreeEventDispatcher
com.inprogress.reactnativeyoutube.YouTubeManager: int COMMAND_PLAY_VIDEO_AT
com.google.android.gms.internal.measurement.zzfd: boolean zzg
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
net.time4j.CalendarUnit: net.time4j.IsoDateUnit nvd
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_X
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_BOTTOM
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
com.reactnativecommunity.geolocation.GeolocationModule: float RCT_DEFAULT_LOCATION_ACCURACY
net.time4j.tz.model.DayOfWeekInMonthPattern: long serialVersionUID
com.google.android.gms.internal.measurement.zzey: int zzd
com.razorpay.rn.RazorpayModule: int RZP_REQUEST_CODE
com.razorpay.rn.RazorpayModule: java.lang.String MAP_KEY_WALLET_NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzE
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzfx zza
com.facebook.react.uimanager.UIManagerModule: java.util.Map mViewManagerConstantsCache
com.agontuk.RNFusedLocation.RNFusedLocationModule: java.lang.String TAG
com.swmansion.reanimated.ReanimatedModule: java.util.ArrayList mOperations
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.google.android.gms.internal.measurement.zzgd: long zzV
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
net.time4j.history.ChronoHistory: long serialVersionUID
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzr
com.facebook.react.modules.vibration.VibrationModule: java.lang.String NAME
com.razorpay.rn.RazorpayModule: java.lang.String MAP_KEY_ERROR_DESC
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_MAPBUFFER_SO_FILE_START
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
com.google.android.gms.internal.location.zzl: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme mOverrideColorScheme
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String cropperToolbarColor
com.google.android.gms.internal.measurement.zzfh: java.lang.String zzf
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String BATTERY_STATE
net.time4j.Weekmodel$DayOfWeekElement: long serialVersionUID
com.reactnativecommunity.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener ON_CHANGE_LISTENER
com.facebook.react.bridge.ReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.measurement.zzgr: int zzd
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_DOCUMENT_DIRECTORY
kotlinx.coroutines.CancelledContinuation: int _resumed
androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
net.time4j.tz.PlatformTimezone: java.util.TimeZone tz
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter
com.henninghall.date_picker.DatePickerModule: android.app.AlertDialog dialog
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
net.time4j.SI: double length
net.time4j.calendar.CommonElements$CalendarWeekElement: net.time4j.Weekmodel model
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzkm zzj
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
net.time4j.scale.LeapSeconds$SimpleLeapSecondEvent: long _utc
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_SHOULD_CANCEL_WHEN_OUTSIDE
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue mPreOperations
com.reactnativecommunity.netinfo.NetInfoModule: java.lang.String NAME
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.lang.String TAG
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzey zze
androidx.recyclerview.widget.RecyclerView: java.lang.String TAG
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
com.facebook.react.fabric.FabricUIManager: boolean mDestroyed
com.google.android.gms.internal.measurement.zzer: java.lang.String zzh
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List mEagerInitModuleNames
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String NAME
net.time4j.tz.SingleOffsetTimezone: long serialVersionUID
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
net.time4j.history.SPX: long serialVersionUID
com.facebook.react.turbomodule.core.TurboModulePerfLogger: boolean sIsSoLibraryLoaded
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String NAME
com.swmansion.rnscreens.SearchBarManager: java.lang.String REACT_CLASS
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String NAME
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: java.lang.String LOCATION_FAST_INTERVAL_DURATION_PARAMS_KEY
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_POINTERS
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_BORDER_RADII
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
com.google.android.gms.internal.measurement.zzfj: java.lang.String zzf
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.Object mObject
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context mContext
com.google.android.gms.measurement.internal.zzaw: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
net.time4j.scale.LeapSeconds$SimpleLeapSecondEvent: long _raw
com.google.android.gms.internal.measurement.zzgd: int zzf
net.time4j.Weekmodel: long serialVersionUID
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzei: int zzd
androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS
net.time4j.tz.ZonalTransition: int total
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
com.google.android.gms.internal.measurement.zzfr: int zzd
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzu
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: java.lang.String TAG
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider mCxxModuleProvider
com.google.android.gms.internal.measurement.zzfd: java.lang.String zze
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: java.lang.String LOCATION_INTERVAL_DURATION_PARAMS_KEY
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
org.wonday.pdf.PdfManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String mColorScheme
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.zzbj: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
net.time4j.scale.LeapSeconds$SimpleLeapSecondEvent: long serialVersionUID
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_MOVIES_DIRECTORY
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String NAME
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.gms.internal.measurement.zzgd: long zzm
com.facebook.react.config.ReactFeatureFlags: boolean enableRoundedCornerPostprocessing
com.google.android.gms.internal.measurement.zzer: int zze
com.horcrux.svg.RenderableViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
net.time4j.DayCycles: net.time4j.PlainTime time
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_END_POINT
com.reactnativecommunity.geolocation.GeolocationModule: android.location.LocationListener mLocationListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
com.google.android.gms.internal.measurement.zzei: boolean zzi
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
org.wonday.pdf.PdfManager: android.content.Context context
com.brentvatne.react.ReactVideoViewManager: java.lang.String PROP_REPEAT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzft: long zzh
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry registry
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: java.lang.String ERR_FAILED_OPEN_DIALOG_CODE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.brentvatne.react.ReactVideoViewManager: java.lang.String REACT_CLASS
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzet zza
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
androidx.recyclerview.widget.RecyclerView: int mLastTouchY
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_DIST
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
androidx.recyclerview.widget.RecyclerView: java.lang.String TRACE_SCROLL_TAG
com.swmansion.reanimated.nodes.Node: int mNodeID
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
com.facebook.react.uimanager.UIManagerModule: int mNumRootViews
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzo
com.facebook.react.config.ReactFeatureFlags: boolean useTurboModuleManagerCallbackCleanupScope
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
io.xogus.reactnative.versioncheck.RNVersionCheckModule: com.facebook.react.bridge.ReactApplicationContext reactContext
com.learnium.RNDeviceInfo.RNDeviceModule: double mLastBatteryLevel
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: int DEFAULT_FAST_INTERVAL_DURATION
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
net.time4j.YOWElement: long serialVersionUID
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
com.google.android.gms.internal.measurement.zzem: boolean zzg
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String NAME
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
net.time4j.history.HistoricEraElement: long serialVersionUID
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HEIGHT
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners
com.horcrux.svg.RenderableViewManager: android.util.SparseArray mTagToRenderableView
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.swmansion.reanimated.nodes.Node: java.lang.Double ZERO
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] $VALUES
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String NAME
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion Companion
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String NAME
androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
com.horcrux.svg.RenderableViewManager: double[] sTransformDecompositionArray
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
net.time4j.engine.EpochDays: int offset
com.google.android.gms.internal.measurement.zzfx: int zzd
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.String KEY_CACHE_DIRECTORY
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
com.facebook.react.fabric.FabricUIManager: boolean ENABLE_FABRIC_LOGS
com.henninghall.date_picker.DatePickerManager: java.lang.String REACT_CLASS
com.facebook.react.config.ReactFeatureFlags: boolean useGlobalCallbackCleanupScopeUsingRetainJSCallback
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate mDelegate
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
com.swmansion.reanimated.NativeProxy$KeyboardEventDataUpdater: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
net.time4j.calendar.SexagesimalName: long serialVersionUID
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzh
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: boolean sIsSoLibraryLoaded
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.BV.LinearGradient.LinearGradientManager: java.lang.String PROP_USE_ANGLE
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.reactnativecommunity.viewpager.ReactViewPagerManager: int COMMAND_SET_SCROLL_ENABLED
net.time4j.calendar.CommonElements$CalendarWeekElement: long serialVersionUID
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
fr.greweb.reactnativeviewshot.RNViewShotModule: java.lang.String TEMP_FILE_PREFIX
com.facebook.react.config.ReactFeatureFlags: boolean mapBufferSerializationEnabled
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
net.time4j.tz.model.ArrayTransitionModel: long serialVersionUID
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzh
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzkm zzg
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
com.google.android.material.chip.Chip: float getCloseIconSize()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
net.time4j.Moment$LongElement: net.time4j.Moment$LongElement[] values()
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.learnium.RNDeviceInfo.RNDeviceModule: void getUserAgent(com.facebook.react.bridge.Promise)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
com.google.android.gms.internal.measurement.zzfr: zzfr()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$User: CrashlyticsReport$Session$User()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setValue(int)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$BinaryImage: CrashlyticsReport$Session$Event$Application$Execution$BinaryImage()
com.facebook.react.views.view.ReactViewManager: void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.reactnativecommunity.webview.RNCWebViewManager: void setMenuCustomItems(com.reactnativecommunity.webview.RNCWebView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
com.swmansion.rnscreens.Screen: java.lang.Integer getNavigationBarColor()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: NativeDevSplitBundleLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
com.airbnb.lottie.LottieAnimationView: void setIgnoreDisabledSystemAnimations(boolean)
com.BV.LinearGradient.LinearGradientView: void setStartPoint(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.PatternView: void setMeetOrSlice(int)
com.swmansion.reanimated.nodes.EventNode: java.util.List processMapping(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal valueOf(java.lang.String)
net.time4j.tz.PlatformTimezone: PlatformTimezone()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
net.time4j.calendar.SexagesimalName$Stem: net.time4j.calendar.SexagesimalName$Stem valueOf(java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerMove(boolean)
com.facebook.react.modules.dialog.DialogModule: void invalidate()
androidx.recyclerview.widget.RecyclerView: void scrollToPosition(int)
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.fabric.SurfaceHandlerBinding: void setPropsNative(com.facebook.react.bridge.NativeMap)
com.reactnative.ivpusic.imagepicker.PickerModule: void openPicker(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
net.time4j.PlainDate: void readObject(java.io.ObjectInputStream)
com.horcrux.svg.RenderableViewManager: void setClipPath(com.horcrux.svg.VirtualView,java.lang.String)
com.henninghall.date_picker.Formats$Format: com.henninghall.date_picker.Formats$Format valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.rnfs.RNFSManager: void uploadFiles(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setLogo(com.reactnativecommunity.toolbarandroid.ReactToolbar,com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Boolean lambda$hasPermission$6()
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
cn.carbswang.android.numberpickerview.library.NumberPickerView: NumberPickerView(android.content.Context,android.util.AttributeSet)
net.time4j.MachineTime: void readObject(java.io.ObjectInputStream)
com.rnfs.RNFSManager: android.net.Uri getFileUri(java.lang.String,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.swmansion.gesturehandler.core.GestureHandler: GestureHandler()
androidx.recyclerview.widget.RecyclerView: void dispatchContentChangedIfNecessary()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasHmsSync()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule)
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String getName()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.airbnb.lottie.LottieAnimationView: int getRepeatCount()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.reactnativecommunity.geolocation.GeolocationModule: void access$200(com.reactnativecommunity.geolocation.GeolocationModule,int,java.lang.String)
com.facebook.react.perflogger.NativeModulePerfLogger: NativeModulePerfLogger()
androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)
com.horcrux.svg.PatternView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.shockwave.pdfium.PdfiumCore: java.lang.Long nativeGetFirstChildBookmark(long,java.lang.Long)
com.horcrux.svg.SvgViewModule: void access$000(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.facebook.react.modules.share.ShareModule: java.lang.String getName()
com.reactnativecommunity.slider.ReactSlider: void setStep(double)
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,int,boolean)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: boolean getBlurOnSubmit()
com.henninghall.date_picker.DatePickerManager: void onAfterUpdateTransaction(com.henninghall.date_picker.PickerView)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager: void setStrokeLinejoin(com.horcrux.svg.RenderableView,int)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation valueOf(java.lang.String)
org.wonday.pdf.PdfView: void setEnablePaging(boolean)
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
com.reactnativecommunity.webview.RNCWebViewManager: void setSetBuiltInZoomControls(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1: java.lang.Object next()
com.airbnb.lottie.LottieAnimationView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
androidx.transition.TransitionSet: TransitionSet()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsProtectedMedia(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.google.android.gms.internal.measurement.zzes: zzes()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: boolean isAccessibilityEnabled()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JavaOnlyArray: int size()
com.github.barteksc.pdfviewer.PDFView: float getCurrentYOffset()
com.rnfs.RNFSManager: void reject(com.facebook.react.bridge.Promise,java.lang.String,java.lang.Exception)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientTransform(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
androidx.cardview.widget.CardView: float getCardElevation()
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseFormat: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseFormat[] values()
com.facebook.react.bridge.ReadableNativeMap$2: java.lang.String nextKey()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
com.horcrux.svg.RenderableViewManager$UseViewManager: void onDropViewInstance(android.view.View)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
androidx.work.ListenableWorker$Result$Success: ListenableWorker$Result$Success()
com.facebook.react.bridge.DynamicFromArray: int asInt()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: EventStoreConfig()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
com.facebook.react.bridge.CatalystInstanceImpl: void access$400(com.facebook.react.bridge.CatalystInstanceImpl)
com.reactnativecommunity.geolocation.GeolocationModule: void stopObserving()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.slider.ReactSliderManager: void setValue(com.facebook.react.views.slider.ReactSlider,double)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.learnium.RNDeviceInfo.DeviceType: com.learnium.RNDeviceInfo.DeviceType[] values()
okhttp3.Protocol: okhttp3.Protocol[] values()
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
com.facebook.react.views.slider.ReactSlider: void setValue(double)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.airbnb.lottie.LottieComposition: LottieComposition()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(com.swmansion.rnscreens.Screen,boolean)
com.reactnativecommunity.viewpager.ReactViewPagerManager: java.util.Map getCommandsMap()
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
com.horcrux.svg.RectView: void setRx(com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.cache.StagingArea: StagingArea()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.String getKey()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void dropGestureHandler(int)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
com.bumptech.glide.integration.okhttp3.OkHttpGlideModule: OkHttpGlideModule()
com.google.android.gms.internal.measurement.zzfe: zzfe()
net.time4j.PlainDate: java.lang.Object writeReplace()
com.google.android.gms.internal.measurement.zzgt: zzgt()
com.bumptech.glide.manager.SupportRequestManagerFragment: SupportRequestManagerFragment()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
com.facebook.react.uimanager.ReanimatedUIManager: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.shockwave.pdfium.PdfiumCore: int nativeGetPageWidthPixel(long,int)
com.reactnativecommunity.slider.ReactSliderManager: void setInverted(com.reactnativecommunity.slider.ReactSlider,boolean)
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void lambda$checkForUnsentReports$0(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: ReactNativeBlobUtil(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.reactnativecommunity.slider.ReactSlider: int getUpperLimit()
com.airbnb.lottie.model.animatable.AnimatableTransform: AnimatableTransform()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
com.facebook.react.bridge.BaseJavaModule: void invalidate()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesSetString(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
com.razorpay.BaseCheckoutOtpelfActivity: BaseCheckoutOtpelfActivity()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.th3rdwave.safeareacontext.SafeAreaContextModule: SafeAreaContextModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.horcrux.svg.ForeignObjectView: void setWidth(com.facebook.react.bridge.Dynamic)
net.time4j.tz.NameStyle: net.time4j.tz.NameStyle valueOf(java.lang.String)
com.horcrux.svg.TextView: void setInlineSize(com.facebook.react.bridge.Dynamic)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
net.time4j.PlainTimestamp: java.lang.Object writeReplace()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleSetJSResponder(int,boolean)
com.swmansion.rnscreens.SearchBarView: boolean getShouldOverrideBackButton()
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String getName()
org.wonday.pdf.PdfManager: void setPassword(org.wonday.pdf.PdfView,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getCodenameSync()
org.wonday.pdf.PdfManager: void setPath(org.wonday.pdf.PdfView,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
com.horcrux.svg.RenderableViewManager$MaskManager: RenderableViewManager$MaskManager()
com.facebook.react.bridge.ReactContext: void resetPerfStats()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.ReactRootView: int getRootViewTag()
com.swmansion.rnscreens.ScreenContainer: void setFragmentManager(androidx.fragment.app.FragmentManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.react.uimanager.UIImplementationProvider,int)
com.google.android.gms.internal.measurement.zzfo: zzfo()
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.yalantis.ucrop.UCropActivity: UCropActivity()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setBaselineShift(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.NativeModule: void initialize()
androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.inprogress.reactnativeyoutube.YouTubeView: void setFullscreen(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setPressed(boolean)
com.facebook.drawee.debug.DebugControllerOverlayDrawable: DebugControllerOverlayDrawable()
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinX(com.horcrux.svg.MarkerView,float)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.reactnativecommunity.slider.ReactSliderManager: void setMaximumTrackTintColor(com.reactnativecommunity.slider.ReactSlider,java.lang.Integer)
net.time4j.history.HistoricEra: net.time4j.history.HistoricEra valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.airbnb.lottie.LottieAnimationView: void setRepeatMode(int)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.henninghall.date_picker.DatePickerManager: void setProps(com.henninghall.date_picker.PickerView,int,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.SurfaceHandlerBinding: void startNative()
com.facebook.react.devsupport.JSDevSupport: java.lang.String getName()
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
com.reactnativecommunity.webview.RNCWebViewModule: RNCWebViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
com.yalantis.ucrop.view.widget.AspectRatioTextView: void setAspectRatio(com.yalantis.ucrop.model.AspectRatio)
com.swmansion.reanimated.Scheduler: com.facebook.jni.HybridData initHybrid()
com.razorpay.CheckoutBridge: void requestExtraAnalyticsData()
com.facebook.yoga.YogaNative: YogaNative()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
com.github.barteksc.pdfviewer.PDFView: float getCurrentXOffset()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.reactnativecommunity.viewpager.ReactViewPagerManager: void removeAllViews(android.view.ViewGroup)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
org.wonday.pdf.PdfManager: void setSpacing(org.wonday.pdf.PdfView,int)
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
com.reactnativecommunity.geolocation.GeolocationModule: java.lang.String getValidProvider(android.location.LocationManager,boolean)
com.henninghall.date_picker.pickers.IosClone: void setOnValueChangeListenerInScrolling(com.henninghall.date_picker.pickers.Picker$OnValueChangeListenerInScrolling)
net.time4j.tz.model.RuleComparator: net.time4j.tz.model.RuleComparator valueOf(java.lang.String)
com.henninghall.date_picker.models.Variant: com.henninghall.date_picker.models.Variant valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzel: zzel()
com.horcrux.svg.MaskView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.ReadableMapBuffer)
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
com.github.barteksc.pdfviewer.PDFView$ScrollDir: com.github.barteksc.pdfviewer.PDFView$ScrollDir valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostDestroy()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.razorpay.CheckoutBridge: void callNativeIntent(java.lang.String)
com.airbnb.lottie.utils.MeanCalculator: MeanCalculator()
com.facebook.react.bridge.ReactBridge: void staticInit()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void createMediaFile(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getTypedExportedConstants()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinX(com.horcrux.svg.SymbolView,float)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void actionViewIntent(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.reactnative.ivpusic.imagepicker.PickerModule: java.io.File createImageFile()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
io.invertase.firebase.common.ReactNativeFirebaseModule: android.content.Context getApplicationContext()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup)
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
io.xogus.reactnative.versioncheck.RNVersionCheckModule: java.lang.String getCountry()
com.swmansion.rnscreens.Screen: void setFragment(com.swmansion.rnscreens.ScreenFragment)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
com.bumptech.glide.GeneratedAppGlideModuleImpl: GeneratedAppGlideModuleImpl(android.content.Context)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setPickedIndexRelativeToRaw(int)
com.BV.LinearGradient.LinearGradientManager: void setStartPoint(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: float getChipMinHeight()
androidx.recyclerview.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.inprogress.reactnativeyoutube.YouTubeView: int getVideosIndex()
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()
com.swmansion.rnscreens.SearchBarManager: void setTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock: DiskCacheWriteLocker$WriteLock()
com.google.android.gms.location.LocationRequest: LocationRequest()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.gms.measurement.internal.zzah: com.google.android.gms.measurement.internal.zzah[] values()
com.horcrux.svg.LineView: void setY2(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)
com.reactnativecommunity.toolbarandroid.ReactToolbar: void setOverflowIconSource(com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: java.util.Map getConstants()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(android.view.View)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
com.razorpay.NetworkType: com.razorpay.NetworkType[] values()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.swmansion.reanimated.nodes.Node: void markUpdated()
com.google.firebase.installations.local.PersistedInstallationEntry: PersistedInstallationEntry()
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
net.time4j.MachineTime: java.lang.Object writeReplace()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
com.reactnative.ivpusic.imagepicker.PickerModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.learnium.RNDeviceInfo.RNDeviceModule: void getBootloader(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)
com.horcrux.svg.SvgView: void setVbWidth(float)
net.time4j.tz.model.ArrayTransitionModel: void readObject(java.io.ObjectInputStream)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.facebook.react.bridge.queue.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.rnfs.RNFSManager: void access$500(com.rnfs.RNFSManager,com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
com.inprogress.reactnativeyoutube.YouTubeManager: int getDuration(com.inprogress.reactnativeyoutube.YouTubeView)
com.learnium.RNDeviceInfo.RNDeviceModule: double getFirstInstallTimeSync()
com.rnfs.RNFSManager: void pathForBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(android.view.View,int)
com.swmansion.rnscreens.SearchBarView: void setHintTextColor(java.lang.Integer)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactCxxErrorHandler: ReactCxxErrorHandler()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: AppMeasurement$ConditionalUserProperty()
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
com.rnfs.RNFSManager: void setReadable(java.lang.String,java.lang.Boolean,java.lang.Boolean,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(android.view.View,boolean)
com.bumptech.glide.util.Util: Util()
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager: void setFill(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.netinfo.NetInfoModule: void getCurrentState(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.horcrux.svg.SvgViewManager: void setMeetOrSlice(com.horcrux.svg.SvgView,int)
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.yqritc.scalablevideoview.ScalableVideoView: void setRawData(int)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getAvailableLocationProvidersSync()
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: GlobalLibraryVersionRegistrar()
net.time4j.calendar.EastAsianST: java.lang.Object readResolve()
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskStart(int)
com.facebook.react.common.mapbuffer.ReadableMapBuffer: java.nio.ByteBuffer importByteBuffer()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.rnfs.RNFSManager: java.lang.String getOriginalFilepath(java.lang.String,boolean)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsVerticalScrollIndicator(com.reactnativecommunity.webview.RNCWebView,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(android.view.View,float)
com.agontuk.RNFusedLocation.LocationError: com.agontuk.RNFusedLocation.LocationError valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void startAnimationForTag(int,java.lang.String,java.util.Map)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setSubtitleColor(com.reactnativecommunity.toolbarandroid.ReactToolbar,java.lang.Integer)
net.time4j.tz.model.SPX: java.lang.Object readResolve()
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.learnium.RNDeviceInfo.RNDeviceModule: double access$802(com.learnium.RNDeviceInfo.RNDeviceModule,double)
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()
com.rnfs.RNFSManager: void appendFile(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.yqritc.scalablevideoview.ScalableVideoView: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.rnfs.RNFSManager: java.io.OutputStream getOutputStream(java.lang.String,boolean)
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void receiveCommand(com.airbnb.lottie.LottieAnimationView,int,com.facebook.react.bridge.ReadableArray)
com.yqritc.scalablevideoview.ScalableVideoView: void setDataSource(java.io.FileDescriptor)
com.reactnativecommunity.toolbarandroid.ReactToolbar: void setActions(com.facebook.react.bridge.ReadableArray)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.reactnativecommunity.viewpager.ReactViewPagerManager: void removeView(android.view.ViewGroup,android.view.View)
com.brentvatne.react.ReactVideoViewManager: java.util.Map getExportedViewConstants()
com.ReactNativeBlobUtil.ReactNativeBlobUtilMediaCollection$MediaType: com.ReactNativeBlobUtil.ReactNativeBlobUtilMediaCollection$MediaType[] values()
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
com.facebook.react.uimanager.BaseViewManager: void setPointerLeave(android.view.View,boolean)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.reactlibrary.createthumbnail.CreateThumbnailModule: void access$300(java.io.File,long)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
com.google.firebase.platforminfo.LibraryVersion: LibraryVersion()
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue access$300(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String access$200()
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.inprogress.reactnativeyoutube.YouTubeManager: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEvent(int,int)
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust valueOf(java.lang.String)
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.horcrux.svg.RenderableViewManager: void setFillRule(com.horcrux.svg.RenderableView,int)
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.google.firebase.messaging.ProtoEncoderDoNotUse: ProtoEncoderDoNotUse()
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.horcrux.svg.CircleView: void setCx(com.facebook.react.bridge.Dynamic)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToAlignment(int)
com.yalantis.ucrop.view.GestureCropImageView: int getDoubleTapScaleSteps()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: int[] getDefaultColors(android.content.Context)
com.shockwave.pdfium.PdfiumCore: int nativeGetPageHeightPixel(long,int)
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$setDeliveryMetricsExportToBigQuery$13(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion()
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setSelectedTextColor(int)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$000(com.facebook.react.modules.image.ImageLoaderModule,int)
androidx.recyclerview.widget.RecyclerView: android.view.View findNextViewToFocus()
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.razorpay.CheckoutBridge: boolean isUserRegisteredOnUPI(java.lang.String)
net.time4j.calendar.astro.JulianDay: void readObject(java.io.ObjectInputStream)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule()
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptCanOpenWindowsAutomatically(com.reactnativecommunity.webview.RNCWebView,boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.facebook.react.devsupport.JSDevSupport: JSDevSupport(com.facebook.react.bridge.ReactApplicationContext)
com.razorpay.RzpAssist: void trackEvent(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(android.view.View,java.lang.String)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: int isGooglePlayServicesAvailable()
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.swmansion.reanimated.ReanimatedModule: void onHostDestroy()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.fabric.FabricUIManager: java.util.Map getPerformanceCounters()
com.reactnativerestart.RestartModule: void loadBundleLegacy()
com.facebook.react.modules.core.TimingModule: void onHostResume()
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: java.lang.Exception recordJavaScriptError(com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.Binding: com.facebook.react.bridge.ReadableNativeMap getInspectorDataForInstance(com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getRootScreen()
androidx.recyclerview.widget.RecyclerView: int getChildPosition(android.view.View)
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
com.facebook.react.uimanager.ComponentNameResolverManager: void installJSIBindings()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
com.rnfs.RNFSManager: void copyFileAssets(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
com.facebook.react.fabric.FabricUIManager: void setBinding(com.facebook.react.fabric.Binding)
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
com.henninghall.date_picker.DatePickerManager: java.util.Map getCommandsMap()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
net.time4j.history.Computus: net.time4j.history.Computus valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: java.lang.Object getEventDispatcher()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getCarrierSync()
org.wonday.pdf.PdfManager: void setMinScale(android.view.View,float)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.razorpay.t: void setInt(java.lang.String,int)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void getSDCardDir(com.facebook.react.bridge.Promise)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setAlign(com.horcrux.svg.ImageView,java.lang.String)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String getName()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: java.util.Map getConstants()
com.facebook.react.uimanager.events.TouchEvent: TouchEvent()
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.reactnative.ivpusic.imagepicker.PickerModule: void clean(com.facebook.react.bridge.Promise)
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
androidx.lifecycle.LifecycleService: LifecycleService()
com.swmansion.reanimated.NativeProxy: int registerSensor(int,int,com.swmansion.reanimated.NativeProxy$SensorSetter)
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.websocket.WebSocketModule: void access$200(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
com.google.android.gms.internal.measurement.zzkc: zzkc()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.facebook.react.devsupport.JSDevSupport: java.util.Map getTypedExportedConstants()
com.google.android.gms.internal.measurement.zzig: zzig()
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.horcrux.svg.RenderableViewManager: void setOpacity(android.view.View,float)
com.google.android.gms.internal.measurement.zzjs: zzjs()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenContainer,int)
com.facebook.yoga.YogaNative: void jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI(long,boolean)
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getOverflowInset()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView: void setRemoveClippedSubviews(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
com.bumptech.glide.Priority: com.bumptech.glide.Priority valueOf(java.lang.String)
net.time4j.format.expert.TimezoneIDProcessor: net.time4j.format.expert.TimezoneIDProcessor[] values()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
com.razorpay.CheckoutBridge: void setDeviceToken(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
com.swmansion.reanimated.nodes.Node: void dangerouslyRescheduleEvaluate()
com.horcrux.svg.RenderableViewManager: void setMarkerEnd(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
com.yalantis.ucrop.view.CropImageView: void setImageToWrapCropBoundsAnimDuration(long)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackgroundColor(java.lang.Integer)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.rnfs.RNFSManager: void readFile(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$900(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager: void onDropViewInstance(android.view.View)
androidx.viewpager2.widget.ViewPager2: void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: android.os.ParcelFileDescriptor rewind()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.BV.LinearGradient.LinearGradientManager: com.BV.LinearGradient.LinearGradientView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.razorpay.CheckoutActivity: CheckoutActivity()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$DefsViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.gson.TypeAdapter: TypeAdapter()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
com.brentvatne.react.ReactVideoView: void setResizeModeModifier(com.yqritc.scalablevideoview.ScalableType)
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
com.swmansion.rnscreens.CustomSearchView: void setText(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.learnium.RNDeviceInfo.RNDeviceModule: void isAirplaneMode(com.facebook.react.bridge.Promise)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getName()
com.horcrux.svg.MaskView: void setMaskUnits(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getBBox(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.airbnb.lottie.LottieAnimationView: java.lang.String getImageAssetsFolder()
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: BoundaryInterfaceReflectionUtil()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
net.time4j.AmPmElement: net.time4j.AmPmElement[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
androidx.recyclerview.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.CancelHandler: CancelHandler()
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
com.horcrux.svg.RenderableView: void setStrokeDasharray(com.facebook.react.bridge.ReadableArray)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
com.horcrux.svg.RenderableViewManager: void setFillOpacity(com.horcrux.svg.RenderableView,float)
androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.brentvatne.react.ReactVideoViewManager: void setSeek(com.brentvatne.react.ReactVideoView,float)
com.google.android.material.shape.EdgeTreatment: EdgeTreatment()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String getName()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstallReferrerSync()
com.ReactNativeBlobUtil.Utils.FileProvider: FileProvider()
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.swmansion.rnscreens.SearchBarManager: void setTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getTopScreen()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory: RNGestureHandlerModule$HandlerFactory()
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(com.swmansion.rnscreens.Screen,com.facebook.react.bridge.ReadableMap)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.airbnb.android.react.lottie.LottieAnimationViewManager: com.airbnb.android.react.lottie.LottieAnimationViewPropertyManager getOrCreatePropertyManager(com.airbnb.lottie.LottieAnimationView)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl(com.facebook.jni.HybridData)
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.learnium.RNDeviceInfo.RNDeviceModule: java.math.BigInteger getDirTotalCapacity(android.os.StatFs)
com.shockwave.pdfium.PdfiumCore: int nativeGetPageWidthPoint(long)
com.reactnativecommunity.webview.RNCWebViewManager: void setOverScrollMode(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
com.github.barteksc.pdfviewer.util.SnapEdge: com.github.barteksc.pdfviewer.util.SnapEdge[] values()
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getName()
org.wonday.pdf.PdfManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDisplaySync()
androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String access$000(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.react.bridge.CatalystInstanceImpl: void warnOnLegacyNativeModuleSystemUse()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.brentvatne.react.ReactVideoViewManager: void setPlayInBackground(com.brentvatne.react.ReactVideoView,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
com.reactnativecommunity.viewpager.ReactViewPagerManager: void addView(androidx.viewpager2.widget.ViewPager2,android.view.View,int)
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerEnter(boolean)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.slider.ReactSliderManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
com.reactnativecommunity.netinfo.NetInfoModule: void onAmazonFireDeviceConnectivityChanged(boolean)
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setProgress(com.airbnb.lottie.LottieAnimationView,float)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.network.NetworkingModule: void access$500(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setOpacity(android.view.View,float)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: RNGestureHandlerButtonViewManager()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.bridge.WritableArray: void pushNull()
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation getReplaceAnimation()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.BV.LinearGradient.LinearGradientManager: void setColors(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.time4j.SPX: void writeExternal(java.io.ObjectOutput)
com.dylanvann.fastimage.FastImageViewManager: java.lang.String getName()
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBootloaderSync()
com.swmansion.reanimated.nodes.Node: java.lang.Object evaluate()
androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
com.google.firebase.crashlytics.FirebaseCrashlytics: boolean didCrashOnPreviousExecution()
com.github.barteksc.pdfviewer.PDFView: float getMinZoom()
com.airbnb.lottie.LottieAnimationView: void setPerformanceTrackingEnabled(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getBaseOs(com.facebook.react.bridge.Promise)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
org.devio.rn.splashscreen.SplashScreenModule: void show()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
org.wonday.pdf.PdfManager: void setFitPolicy(android.view.View,int)
androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
net.time4j.tz.model.SPX: void writeExternal(java.io.ObjectOutput)
com.brentvatne.react.ReactVideoView: int getBufferPercentage()
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
com.horcrux.svg.SvgView: void setMinX(float)
com.horcrux.svg.RenderableViewManager$CircleViewManager: RenderableViewManager$CircleViewManager()
com.reactnativecommunity.viewpager.ReactViewPagerManager: void setScrollEnabled(androidx.viewpager2.widget.ViewPager2,boolean)
com.facebook.react.bridge.BackgroundExecutor: void queueRunnable(java.lang.Runnable)
com.facebook.jni.HybridData: boolean isValid()
com.yalantis.ucrop.view.OverlayView: void setCropGridRowCount(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: void dispatchChildAttached(android.view.View)
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.uimanager.ComponentNameResolver: java.lang.String[] getComponentNames()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.facebook.fbreact.specs.NativeDevMenuSpec: void debugRemotely(boolean)
net.time4j.i18n.LanguageMatch: net.time4j.i18n.LanguageMatch valueOf(java.lang.String)
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.lang.Boolean isRunningInTestLab()
net.time4j.Duration: void readObject(java.io.ObjectInputStream)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
com.rnfs.RNFSManager: void copyInputStream(java.io.InputStream,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupported64BitAbisSync()
com.horcrux.svg.RenderableViewManager$LineViewManager: void onAfterUpdateTransaction(android.view.View)
net.time4j.tz.TransitionResolver: java.lang.Object writeReplace()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution: CrashlyticsReport$Session$Event$Application$Execution()
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setActions(com.reactnativecommunity.toolbarandroid.ReactToolbar,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setPickedIndexRelativeToMin(int)
com.horcrux.svg.TextPathView: void setMethod(java.lang.String)
com.horcrux.svg.RNSVGRenderableManager: RNSVGRenderableManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
com.facebook.react.turbomodule.core.TurboModuleManager: void initialize()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void decorateRuntime(long)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
kotlinx.coroutines.NodeList: NodeList()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
okhttp3.Headers$Builder: Headers$Builder()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.google.firebase.crashlytics.FirebaseCrashlytics: void setCustomKey(java.lang.String,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onCatalystInstanceDestroy()
org.wonday.pdf.PdfView: void setSpacing(int)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.reactnativecommunity.webview.RNCWebViewManager: void setUserAgent(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView getSvgViewByTag(int)
com.reactnative.ivpusic.imagepicker.PickerModule: void initiateCamera(android.app.Activity)
com.agontuk.RNFusedLocation.LocationAccuracy: com.agontuk.RNFusedLocation.LocationAccuracy[] values()
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void slice(java.lang.String,java.lang.String,int,int,com.facebook.react.bridge.Promise)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.horcrux.svg.MaskView: void setWidth(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableView: void setStrokeWidth(com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.viewpager.ReactViewPagerManager: void removeViewAt(android.view.ViewGroup,int)
com.google.android.gms.internal.measurement.zzae: zzae()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTopInsetEnabled(boolean)
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
com.reactnativecommunity.webview.RNCWebViewManager: void setMinimumFontSize(com.reactnativecommunity.webview.RNCWebView,int)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.dylanvann.fastimage.FastImageViewManager: android.app.Activity getActivityFromContext(android.content.Context)
com.horcrux.svg.RenderableView: void setStrokeDashoffset(float)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(com.swmansion.rnscreens.Screen,boolean)
org.wonday.pdf.PdfManager: void setEnableRTL(android.view.View,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: void getAsyncSelection(android.app.Activity,android.net.Uri,boolean)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutFrozen()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
com.horcrux.svg.MarkerView: void setRefY(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzck)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
net.time4j.calendar.KoreanCalendar: java.lang.Object writeReplace()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
androidx.recyclerview.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] values()
androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.google.firebase.crashlytics.FirebaseCrashlytics: void log(java.lang.String)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.Screen: java.lang.Integer getStatusBarColor()
com.reactnativerestart.RestartModule: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbHeight(com.horcrux.svg.MarkerView,float)
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
com.facebook.react.config.ReactFeatureFlags: boolean isMapBufferSerializationEnabled()
net.time4j.history.Computus: net.time4j.history.Computus[] values()
com.horcrux.svg.MarkerView: void setMinY(float)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.swmansion.rnscreens.ScreenViewManager: java.lang.String getName()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.image.CloseableImage: CloseableImage()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
com.horcrux.svg.SvgViewModule: java.lang.String getName()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.airbnb.lottie.LottieAnimationView: long getDuration()
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.henninghall.date_picker.models.Is24HourSource: com.henninghall.date_picker.models.Is24HourSource valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: ResourceDrawableIdHelper()
com.google.android.gms.location.LocationCallback: LocationCallback()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void initialize()
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String getName()
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
org.devio.rn.splashscreen.SplashScreenModule: java.lang.String getName()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier access$100(com.reactnativecommunity.asyncstorage.AsyncStorageModule)
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
com.reactnativecommunity.viewpager.ReactViewPagerManager: void setOrientation(androidx.viewpager2.widget.ViewPager2,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void removeSession(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
fr.greweb.reactnativeviewshot.RNViewShotModule: void onCatalystInstanceDestroy()
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
net.time4j.tz.model.DayOfWeekInMonthPattern: java.lang.Object writeReplace()
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
com.reactnativecommunity.slider.ReactSliderManager: void setStep(com.reactnativecommunity.slider.ReactSlider,float)
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainer createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.webview.RNCWebViewManager: void setDomStorageEnabled(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
com.facebook.react.fabric.FabricUIManager: int getColor(int,com.facebook.react.bridge.ReadableMap)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setLoop(com.airbnb.lottie.LottieAnimationView,boolean)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
okio.Segment: Segment()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.razorpay.CheckoutBridge: void relay(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
org.wonday.pdf.PdfManager: void setHorizontal(org.wonday.pdf.PdfView,boolean)
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getCTM(int)
com.facebook.react.devsupport.HMRClient: void disable()
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: RenderableViewManager$ClipPathViewManager()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
androidx.work.Constraints: Constraints()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.cardview.widget.CardView: float getRadius()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
net.time4j.history.HistoricDateElement: java.lang.Object readResolve()
com.learnium.RNDeviceInfo.RNDeviceModule: long getTotalAvailableBlocks(android.os.StatFs,java.lang.Boolean)
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.TextLayoutManagerMapBuffer: TextLayoutManagerMapBuffer()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.google.gson.Gson$FutureTypeAdapter: Gson$FutureTypeAdapter()
com.facebook.common.internal.Closeables: Closeables()
com.horcrux.svg.GroupView: void setFont(com.facebook.react.bridge.ReadableMap)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.firebase.crashlytics.internal.model.StaticSessionData: StaticSessionData()
com.facebook.react.HeadlessJsTaskService: HeadlessJsTaskService()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForReanimated(com.facebook.react.uimanager.events.Event)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(android.view.View,java.lang.Integer)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.horcrux.svg.RenderableViewManager: void invalidateSvgView(com.horcrux.svg.VirtualView)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.horcrux.svg.UseView: void setWidth(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.MarkerView: void setVbWidth(float)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.brentvatne.react.ReactVideoView: void setFullscreen(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$subscribeToTopic$10(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()
com.horcrux.svg.RenderableViewManager: void setClipRule(com.horcrux.svg.VirtualView,int)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.razorpay.CheckoutBridge: void onCheckoutRendered()
com.swmansion.rnscreens.ScreenStackViewManager: boolean needsCustomLayoutForChildren()
net.time4j.tz.model.OffsetIndicator: net.time4j.tz.model.OffsetIndicator[] values()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.google.android.gms.internal.measurement.zzgp: zzgp()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setGeolocationEnabled(com.reactnativecommunity.webview.RNCWebView,boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
com.bumptech.glide.module.LibraryGlideModule: LibraryGlideModule()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
androidx.viewpager2.widget.ViewPager2: void setCurrentItem(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.swmansion.reanimated.NativeProxy: void requestRender(com.swmansion.reanimated.NativeProxy$AnimationFrameCallback)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
net.time4j.format.NumberSystem: net.time4j.format.NumberSystem valueOf(java.lang.String)
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
com.henninghall.date_picker.pickers.IosClone: void setTextColor(java.lang.String)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzhy getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onHandlerUpdate(com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingHeadlessService: ReactNativeFirebaseMessagingHeadlessService()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void access$000(com.airbnb.android.react.lottie.LottieAnimationViewManager,com.airbnb.lottie.LottieAnimationView,boolean)
com.reactnativecommunity.webview.RNCWebViewModule: void shouldStartLoadWithLockIdentifier(boolean,double)
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: NativeDatePickerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
com.horcrux.svg.PatternView: void setMinY(float)
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.fabric.events.EventBeatManager)
com.swmansion.reanimated.nodes.EventNode: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(android.view.View,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
androidx.viewpager2.widget.ViewPager2: int getItemDecorationCount()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
kotlinx.coroutines.JobNode: JobNode()
com.swmansion.rnscreens.SearchBarView: java.lang.String getPlaceholder()
androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation access$100(com.facebook.react.uimanager.UIManagerModule)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
com.henninghall.date_picker.DatePickerManager: void receiveCommand(com.henninghall.date_picker.PickerView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.blob.BlobModule: byte[] access$000(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
androidx.recyclerview.widget.RecyclerView: void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$ApplicationExitInfo: CrashlyticsReport$ApplicationExitInfo()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: com.facebook.react.bridge.ReactApplicationContext access$200(com.ReactNativeBlobUtil.ReactNativeBlobUtil)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.gms.internal.measurement.zzho: zzho()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void maybeLoadSoLibrary()
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
com.reactnativecommunity.clipboard.ClipboardModule: ClipboardModule(android.content.Context)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
com.reactnative.ivpusic.imagepicker.PickerModule: void deleteRecursive(java.io.File)
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
com.razorpay.BaseUtils: BaseUtils()
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType valueOf(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType[] values()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.learnium.RNDeviceInfo.RNDeviceModule: void getPreviewSdkInt(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.reactnativecommunity.viewpager.ReactViewPagerManager: void removeView(androidx.viewpager2.widget.ViewPager2,android.view.View)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
com.yalantis.ucrop.view.OverlayView: com.yalantis.ucrop.callback.OverlayViewChangeListener getOverlayViewChangeListener()
net.time4j.ClockUnit: net.time4j.ClockUnit valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry getRegistry()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: void setSummaryText(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.ContextBaseJavaModule: ContextBaseJavaModule(android.content.Context)
com.facebook.drawee.generic.RoundingParams: RoundingParams()
com.google.android.gms.internal.measurement.zzlg: zzlg()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.bridge.Arguments: Arguments()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.views.slider.ReactSlider: void setMinValue(double)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: java.lang.String getName()
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
com.henninghall.date_picker.models.Variant: com.henninghall.date_picker.models.Variant[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] values()
com.facebook.react.uimanager.BaseViewManager: void setPointerMove(android.view.View,boolean)
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.google.android.gms.internal.measurement.zzfj: zzfj()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf)
org.wonday.pdf.PdfView: void setTouchesEnabled(boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setHref(com.horcrux.svg.TextPathView,java.lang.String)
net.time4j.AmPmElement: net.time4j.AmPmElement valueOf(java.lang.String)
com.horcrux.svg.PatternView: void setPatternContentUnits(int)
cn.carbswang.android.numberpickerview.library.NumberPickerView: int getOneRecycleSize()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstallerPackageName(com.facebook.react.bridge.Promise)
io.invertase.firebase.common.ReactNativeFirebaseInitProvider: ReactNativeFirebaseInitProvider()
com.reactlibrary.createthumbnail.CreateThumbnailModule: long getDirSize(java.io.File)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
net.time4j.calendar.RelatedGregorianYearElement: java.lang.Object readResolve()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
com.facebook.react.devsupport.JSDevSupport: void computeDeepestJSHierarchy(android.view.View,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
androidx.core.os.CancellationSignal: CancellationSignal()
com.yalantis.ucrop.view.CropImageView: void setMaxScaleMultiplier(float)
com.reactnativecommunity.geolocation.GeolocationModule: void startObserving(com.facebook.react.bridge.ReadableMap)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getTransactionalExecutor()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType[] values()
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.learnium.RNDeviceInfo.RNDeviceModule: void getCodename(com.facebook.react.bridge.Promise)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setRtl(com.reactnativecommunity.toolbarandroid.ReactToolbar,boolean)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap computeConstantsForViewManager(java.lang.String)
com.facebook.react.bridge.Inspector$Page: int getId()
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setLengthAdjust(com.horcrux.svg.TextView,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.yqritc.scalablevideoview.ScalableVideoView: int getDuration()
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
com.airbnb.lottie.model.CubicCurveData: CubicCurveData()
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
com.reactnativecommunity.viewpager.ReactViewPagerManager: ReactViewPagerManager()
com.razorpay.Z$_A_: void relay(java.lang.String)
com.swmansion.reanimated.NativeProxy: void scrollTo(int,double,double,boolean)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits valueOf(java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.horcrux.svg.RenderableView: void setStrokeLinecap(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)
com.horcrux.svg.LineView: void setY1(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
com.swmansion.reanimated.NativeProxy$SensorSetter: NativeProxy$SensorSetter(com.facebook.jni.HybridData)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
com.google.android.gms.internal.measurement.zzne: com.google.android.gms.internal.measurement.zzne[] values()
cl.json.RNShareModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.swmansion.reanimated.Scheduler: void triggerUI()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.facebook.react.uimanager.ComponentNameResolverManager: ComponentNameResolverManager(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: void initChildrenHelper()
org.wonday.pdf.PdfView: void setScale(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(android.view.View,java.lang.Integer)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.facebook.react.fabric.events.EventBeatManager: void tick()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: RecyclerView$AdapterDataObserver()
net.time4j.engine.ValidationElement: net.time4j.engine.ValidationElement valueOf(java.lang.String)
com.facebook.react.modules.camera.ImageStoreManager: void access$200(java.io.Closeable)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
org.wonday.pdf.PdfManager: void setMaxScale(android.view.View,float)
com.facebook.jni.DestructorThread: DestructorThread()
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInFill(int,com.facebook.react.bridge.ReadableMap)
com.henninghall.date_picker.DatePickerModule: android.view.View withTopMargin(com.henninghall.date_picker.PickerView)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.reactnativecommunity.webview.RNCWebViewModule: void downloadFile(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
com.google.firebase.crashlytics.internal.model.StaticSessionData$AppData: StaticSessionData$AppData()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.storage.AsyncStorageModule: boolean ensureDatabase()
com.google.firebase.crashlytics.ndk.CrashpadMain: void crashpadMain(java.lang.String[])
cn.carbswang.android.numberpickerview.library.NumberPickerView: boolean getWrapSelectorWheel()
androidx.recyclerview.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)
com.facebook.react.bridge.UIManager: void stopSurface(int)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.henninghall.date_picker.pickers.AndroidNative: void setShownCount(int)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.rnfs.RNFSManager: void removeListeners(java.lang.Integer)
com.horcrux.svg.RenderableViewManager: void setStrokeDashoffset(com.horcrux.svg.RenderableView,float)
net.time4j.engine.ChronoEntity: ChronoEntity()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.rnfs.RNFSManager: java.io.InputStream access$200(com.rnfs.RNFSManager,java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate access$000(com.facebook.react.devsupport.LogBoxModule)
net.time4j.tz.model.ArrayTransitionModel: java.lang.Object writeReplace()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$Signal: CrashlyticsReport$Session$Event$Application$Execution$Signal()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$FilesPayload: CrashlyticsReport$FilesPayload()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
com.google.android.gms.location.zzs: zzs()
com.facebook.imagepipeline.image.CloseableBitmap: CloseableBitmap()
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust[] values()
androidx.collection.ArraySet: ArraySet()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbHeight(com.horcrux.svg.SymbolView,float)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void access$1100(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.Exception)
com.github.barteksc.pdfviewer.PDFView: void setMidZoom(float)
com.facebook.react.uimanager.UIManagerHelper: UIManagerHelper()
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseType: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseType[] values()
com.swmansion.reanimated.NativeProxy: java.lang.String obtainProp(int,java.lang.String)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getTagsSync()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal[] values()
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
com.google.android.youtube.player.YouTubePlayer$PlayerStyle: com.google.android.youtube.player.YouTubePlayer$PlayerStyle valueOf(java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void unlink(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll(boolean)
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.horcrux.svg.RenderableViewManager$ImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.horcrux.svg.TextView: void setDeltaY(com.facebook.react.bridge.Dynamic)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getFingerprintSync()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSpeed(com.airbnb.lottie.LottieAnimationView,double)
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$Exception: CrashlyticsReport$Session$Event$Application$Execution$Exception()
com.oblador.vectoricons.VectorIconsModule: void getImageForFont(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Inspector: java.util.List getPages()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
net.time4j.Duration: java.lang.Object writeReplace()
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize[] values()
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getExtension(android.content.Context,android.net.Uri)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.swmansion.reanimated.ReanimatedModule: ReanimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarker: ReactMarker()
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(android.view.View,boolean)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory: GlideBuilder$WaitForFramesAfterTrimMemory()
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.airbnb.lottie.LottieAnimationView: void setSpeed(float)
net.time4j.history.YearDefinition: net.time4j.history.YearDefinition[] values()
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTags(com.facebook.react.bridge.Promise)
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(android.view.View,java.lang.Integer)
com.facebook.jni.UnknownCppException: UnknownCppException()
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)
com.facebook.react.JSInterpreter: com.facebook.react.JSInterpreter[] values()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
com.inprogress.reactnativeyoutube.YouTubeManager: YouTubeManager()
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData initHybrid()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
org.wonday.pdf.PdfView: void setPath(java.lang.String)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
com.reactnativecommunity.viewpager.ReactViewPagerManager: void setOverScrollMode(androidx.viewpager2.widget.ViewPager2,java.lang.String)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
net.time4j.tz.model.CompositeTransitionModel: void readObject(java.io.ObjectInputStream)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setCacheComposition(com.airbnb.lottie.LottieAnimationView,boolean)
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
org.wonday.pdf.PdfView: void setFitPolicy(int)
com.facebook.react.modules.appstate.AppStateModule: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitle(java.lang.String)
com.swmansion.rnscreens.Screen: void setStatusBarAnimated(java.lang.Boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
okhttp3.RequestBody: RequestBody()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
net.time4j.calendar.KoreanEra$YearOfEraElement: java.lang.Object readResolve()
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap)
com.brentvatne.react.ReactVideoViewManager: ReactVideoViewManager()
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.bridge.BaseJavaModule: boolean hasConstants()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.modules.dialog.DialogModule: boolean access$000(com.facebook.react.modules.dialog.DialogModule)
com.rnfs.RNFSManager: void touch(java.lang.String,double,double,com.facebook.react.bridge.Promise)
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor valueOf(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.text.ReactUnderlineSpan: ReactUnderlineSpan()
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.horcrux.svg.ImageView: void setSrc(com.facebook.react.bridge.ReadableMap)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void fetchBlobForm(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.lang.String nextKey()
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.CustomToolbar: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.facebook.react.modules.storage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
net.time4j.tz.Timezone: Timezone()
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate getDelegate()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(android.view.View,boolean)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule access$800(com.facebook.react.bridge.CatalystInstanceImpl)
com.yalantis.ucrop.view.OverlayView: void setCropGridStrokeWidth(int)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline[] values()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontSize(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
com.BV.LinearGradient.LinearGradientView: void setUseAngle(boolean)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getTypedExportedConstants()
androidx.work.impl.utils.futures.AbstractFuture: AbstractFuture()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.learnium.RNDeviceInfo.RNDeviceModule: void getMacAddress(com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSystemAvailableFeatures(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
com.rnfs.RNFSManager: void access$100(com.rnfs.RNFSManager,com.facebook.react.bridge.Promise,java.lang.String,java.lang.Exception)
com.brentvatne.react.ReactVideoView: void setRepeatModifier(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptForMainFrameOnly(com.reactnativecommunity.webview.RNCWebView,boolean)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: boolean access$100()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
net.time4j.Quarter: net.time4j.Quarter[] values()
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String getName()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: boolean didChildRangeChange(int,int)
com.ReactNativeBlobUtil.ReactNativeBlobUtilMediaCollection$MediaType: com.ReactNativeBlobUtil.ReactNativeBlobUtilMediaCollection$MediaType valueOf(java.lang.String)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec: NativeDevSplitBundleLoaderSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
com.dylanvann.fastimage.FastImageViewManager: void setResizeMode(com.dylanvann.fastimage.FastImageViewWithUrl,java.lang.String)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.rnscreens.Screen: void setStatusBarColor(java.lang.Integer)
com.reactnativecommunity.geolocation.GeolocationModule: void throwLocationPermissionMissing(java.lang.SecurityException)
com.horcrux.svg.RenderableViewManager$PatternManager: RenderableViewManager$PatternManager()
com.airbnb.lottie.LottieAnimationView: void setMaintainOriginalImageBounds(boolean)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.reactnativecommunity.slider.ReactSliderManager: void setLowerLimit(com.reactnativecommunity.slider.ReactSlider,float)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.recyclerview.widget.RecyclerView: int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType[] values()
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Application: CrashlyticsReport$Session$Application()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
com.learnium.RNDeviceInfo.RNDeviceModule: double getFreeDiskStorageOldSync()
com.horcrux.svg.RNSVGRenderableManager: java.lang.String getName()
com.horcrux.svg.SvgViewManager: void onDropViewInstance(android.view.View)
com.henninghall.date_picker.models.Is24HourSource: com.henninghall.date_picker.models.Is24HourSource[] values()
com.airbnb.lottie.LottieAnimationView: void setMinProgress(float)
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy[] values()
com.henninghall.date_picker.pickers.AndroidNative: void setOnValueChangeListenerInScrolling(com.henninghall.date_picker.pickers.Picker$OnValueChangeListenerInScrolling)
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
com.github.barteksc.pdfviewer.PDFView: void setNightMode(boolean)
com.horcrux.svg.RNSVGRenderableManager: void getRawResource(java.lang.String,com.facebook.react.bridge.Promise)
com.rnfs.RNFSManager: void readDir(java.lang.String,com.facebook.react.bridge.Promise)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RadialGradientView: void setGradientTransform(com.facebook.react.bridge.ReadableArray)
com.yalantis.ucrop.view.CropImageView: float getMinScale()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.facebook.react.modules.blob.BlobModule: java.lang.String access$200(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
io.xogus.reactnative.versioncheck.RNVersionCheckModule: RNVersionCheckModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.learnium.RNDeviceInfo.RNDeviceModule: void isCameraPresent(com.facebook.react.bridge.Promise)
com.reactnativecommunity.netinfo.NetInfoModule: NetInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.nodes.Node: void forceUpdateMemoizedValue(java.lang.Object)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getConstants()
com.bumptech.glide.gifdecoder.GifFrame: GifFrame()
net.time4j.format.NumberType: net.time4j.format.NumberType valueOf(java.lang.String)
com.yalantis.ucrop.view.TransformImageView: java.lang.String getImageOutputPath()
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
com.google.android.gms.internal.measurement.zzag: zzag()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
io.invertase.firebase.common.ReactNativeFirebaseModule: android.app.Activity getActivity()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)
com.swmansion.rnscreens.Screen: void setStackPresentation(com.swmansion.rnscreens.Screen$StackPresentation)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode: ReactSwitchManager$ReactSwitchShadowNode()
com.yalantis.ucrop.view.TransformImageView: android.graphics.Bitmap getViewBitmap()
com.horcrux.svg.RenderableView: void setId(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.views.text.TextLayoutManager: TextLayoutManager()
com.google.android.gms.internal.measurement.zzkq: com.google.android.gms.internal.measurement.zzkq[] values()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.progressbar.ProgressBarShadowNode: ProgressBarShadowNode()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter getEventEmitter(java.lang.String)
com.github.barteksc.pdfviewer.PDFView: void setPageFitPolicy(com.github.barteksc.pdfviewer.util.FitPolicy)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer access$100(com.facebook.react.animated.NativeAnimatedModule)
com.horcrux.svg.TSpanView: void setContent(java.lang.String)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(android.view.View,boolean)
com.facebook.react.config.ReactFeatureFlags: void setUseOverflowInset(boolean)
com.swmansion.rnscreens.Screen: java.lang.String getStatusBarStyle()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
com.google.android.gms.internal.measurement.zzfz: zzfz()
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
com.henninghall.date_picker.props.Prop: Prop()
net.time4j.calendar.KoreanCalendar$Unit: net.time4j.calendar.KoreanCalendar$Unit valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.reactnative.ivpusic.imagepicker.PickerModule: void initiatePicker(android.app.Activity)
com.reactnativecommunity.webview.RNCWebViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.airbnb.lottie.model.layer.Layer$MatteType: com.airbnb.lottie.model.layer.Layer$MatteType valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
com.airbnb.lottie.LottieAnimationView: void setMinAndMaxFrame(java.lang.String)
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures[] values()
com.facebook.react.views.slider.ReactSliderManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.yoga.YogaNative: void jni_YGNodeFreeJNI(long)
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,int)
com.razorpay.PluginCheckoutBridge: void processPayment(java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void cancelRequest(java.lang.String,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView: void access$100(androidx.recyclerview.widget.RecyclerView,int)
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.facebook.react.fabric.FabricUIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.yalantis.ucrop.view.TransformImageView: float getCurrentAngle()
com.rnfs.RNFSManager: void rejectFileIsDirectory(com.facebook.react.bridge.Promise)
com.airbnb.lottie.LottieAnimationView: float getMaxFrame()
com.reactnativecommunity.webview.RNCWebView: void setBasicAuthCredential(com.reactnativecommunity.webview.RNCBasicAuthCredential)
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.react.bridge.ReactContext: void raiseCatalystInstanceMissingException()
net.time4j.tz.model.RuleBasedTransitionModel: java.lang.Object writeReplace()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void exists(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.yalantis.ucrop.view.CropImageView: void setTargetAspectRatio(float)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibilityWithOptions(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
net.time4j.Duration: Duration()
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
com.airbnb.lottie.LottieAnimationView: void setProgress(float)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.swmansion.reanimated.ReanimatedModule: void onHostPause()
com.facebook.react.uimanager.ComponentNameResolverManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrollStateChanged(int)
com.yqritc.scalablevideoview.ScalableVideoView: void setScalableType(com.yqritc.scalablevideoview.ScalableType)
com.facebook.react.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder)
com.brentvatne.react.ReactVideoViewManager: void setRepeat(com.brentvatne.react.ReactVideoView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(android.view.View,boolean)
com.yalantis.ucrop.view.CropImageView: void setImageToWrapCropBounds(boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.viewpager.ReactViewPagerManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.facebook.react.views.slider.ReactSlider: void setStep(double)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
org.devio.rn.splashscreen.SplashScreenModule: void hide()
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
com.horcrux.svg.VirtualView: void setResponsible(boolean)
com.inprogress.reactnativeyoutube.YouTubeView: com.facebook.react.bridge.ReactContext getReactContext()
com.horcrux.svg.SymbolView: void setMeetOrSlice(int)
com.reactnativecommunity.clipboard.ClipboardModule: java.lang.String getName()
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher access$000(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.learnium.RNDeviceInfo.RNDeviceModule: void getDevice(com.facebook.react.bridge.Promise)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.turbomodule.core.TurboModuleManager$1: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.gms.common.api.Api$AbstractClientBuilder: Api$AbstractClientBuilder()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
com.dylanvann.fastimage.FastImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ModuleHolder: boolean getHasConstants()
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
net.time4j.history.NewYearRule: net.time4j.history.NewYearRule[] values()
com.horcrux.svg.SvgViewManager: void setAlign(com.horcrux.svg.SvgView,java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupportedAbisSync()
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMeetOrSlice(com.horcrux.svg.PatternView,int)
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void onAfterUpdateTransaction(com.airbnb.lottie.LottieAnimationView)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.horcrux.svg.ImageView: void setMeetOrSlice(int)
com.swmansion.reanimated.NativeProxy$AnimationFrameCallback: NativeProxy$AnimationFrameCallback(com.facebook.jni.HybridData)
org.reactnative.maskedview.RNCMaskedView: void setRenderingMode(java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: boolean access$000(com.facebook.react.modules.storage.AsyncStorageModule)
com.facebook.react.bridge.ReadableNativeMap$1$1: ReadableNativeMap$1$1(com.facebook.react.bridge.ReadableNativeMap$1,int)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
com.google.android.gms.common.api.PendingResult: PendingResult()
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
org.wonday.pdf.PdfView: void setEnableAnnotationRendering(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: RNGestureHandlerRootViewManager()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateStart(java.lang.String,int)
net.time4j.SPX: SPX()
com.reactnativecommunity.netinfo.types.CellularGeneration: com.reactnativecommunity.netinfo.types.CellularGeneration[] values()
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(com.facebook.react.views.slider.ReactSlider,boolean)
androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
com.rnfs.RNFSManager: java.io.InputStream getInputStream(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
com.learnium.RNDeviceInfo.RNDeviceModule: void getUsedMemory(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: ViewInfoStore$InfoRecord()
com.swmansion.reanimated.NativeProxy$KeyboardEventDataUpdater: void keyboardEventDataUpdater(int,int)
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void setCrashlyticsCollectionEnabled(java.lang.Boolean,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsFullscreenVideo(com.reactnativecommunity.webview.RNCWebView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: void onNewIntent(android.content.Intent)
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
net.time4j.calendar.astro.MoonPhase: net.time4j.calendar.astro.MoonPhase[] values()
androidx.recyclerview.widget.RecyclerView: void viewRangeUpdate(int,int,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseType: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseType valueOf(java.lang.String)
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: YouTubeStandaloneModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
com.razorpay.CheckoutBridge: void setDimensions(int,int)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.dylanvann.fastimage.GlideOptions: GlideOptions()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
net.time4j.tz.model.FixedDayPattern: void readObject(java.io.ObjectInputStream)
androidx.work.impl.utils.ProcessUtils: ProcessUtils()
okhttp3.OkHttpClient: OkHttpClient()
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinY(com.horcrux.svg.PatternView,float)
com.facebook.react.bridge.RuntimeScheduler: RuntimeScheduler(com.facebook.jni.HybridData)
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
com.rnfs.RNFSManager: void readFileAssets(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.reactlibrary.createthumbnail.CreateThumbnailModule: void create(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
net.time4j.format.expert.PatternType: net.time4j.format.expert.PatternType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager: void setTransform(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.core.TimingModule: void onHostDestroy()
com.airbnb.lottie.LottieAnimationView: void setComposition(com.airbnb.lottie.LottieComposition)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.brentvatne.react.ReactVideoView: void setMutedModifier(boolean)
com.facebook.react.modules.blob.FileReaderModule: java.lang.String getName()
com.google.android.gms.internal.measurement.zzgc: zzgc()
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView getSvgView()
com.facebook.react.turbomodule.core.TurboModuleManager: void installJSIBindings()
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.UIManager: android.view.View resolveView(int)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
com.horcrux.svg.SvgViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
com.facebook.react.bridge.DynamicFromArray: double asDouble()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger: void removeListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$deleteToken$5(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType: com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: RecyclerView$RecycledViewPool$ScrapData()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.henninghall.date_picker.DatePickerModule: void removeListeners(java.lang.Integer)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
cl.json.RNShareModule: java.util.Map getConstants()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setOpacity(android.view.View,float)
net.time4j.tz.HistorizedTimezone: java.lang.Object writeReplace()
com.swmansion.reanimated.ReanimatedModule: void installTurboModule()
com.horcrux.svg.SvgView: void setMeetOrSlice(int)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String getName()
net.time4j.history.ChronoHistory: java.lang.Object writeReplace()
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(android.view.View,boolean)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
net.time4j.format.expert.FractionalElement: net.time4j.format.expert.FractionalElement valueOf(java.lang.String)
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin[] values()
com.google.firebase.crashlytics.FirebaseCrashlytics: void setCustomKeys(com.google.firebase.crashlytics.CustomKeysAndValues)
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.RenderableViewManager$SVGClass,com.horcrux.svg.RenderableViewManager$1)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void onDropViewInstance(android.view.View)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(android.view.View,int)
net.time4j.history.SPX: SPX()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setContent(com.horcrux.svg.TSpanView,java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void getBlob(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
net.time4j.Meridiem: net.time4j.Meridiem valueOf(java.lang.String)
com.horcrux.svg.RadialGradientView: void setCy(com.facebook.react.bridge.Dynamic)
com.google.gson.reflect.TypeToken: TypeToken()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void sendAccessibilityEvent(int,int)
com.reactnative.ivpusic.imagepicker.PickerModule: PickerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.swmansion.rnscreens.CustomSearchView: boolean getOverrideBackAction()
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.horcrux.svg.RenderableViewManager: void access$100(com.horcrux.svg.RenderableViewManager,com.horcrux.svg.VirtualView)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$Thread$Frame: CrashlyticsReport$Session$Event$Application$Execution$Thread$Frame()
com.swmansion.gesturehandler.core.NativeViewGestureHandler: NativeViewGestureHandler()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: ReactNativeFirebaseUtilsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
net.time4j.format.expert.FractionalElement: net.time4j.format.expert.FractionalElement[] values()
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
net.time4j.calendar.CommonElements$CalendarWeekElement: java.lang.Object readResolve()
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
fr.greweb.reactnativeviewshot.RNViewShotModule: java.util.Map getConstants()
com.oblador.vectoricons.VectorIconsModule: java.lang.String getName()
com.learnium.RNDeviceInfo.RNDeviceModule: void getIpAddress(com.facebook.react.bridge.Promise)
net.time4j.base.ResourceLoader: ResourceLoader()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftException(java.lang.String,java.lang.Throwable)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
cl.json.RNShareModule$SHARES: cl.json.RNShareModule$SHARES[] values()
com.facebook.react.devsupport.JSDevSupport: void onSuccess(java.lang.String)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
org.wonday.pdf.PdfManager: void setScale(android.view.View,float)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
com.facebook.react.devsupport.LogBoxModule: void invalidate()
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInStroke(int,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
net.time4j.calendar.SexagesimalName$Branch: net.time4j.calendar.SexagesimalName$Branch[] values()
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager: void onCatalystInstanceDestroy()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
com.rnfs.RNFSManager: void scanFile(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo: NetworkConnectionInfo()
com.learnium.RNDeviceInfo.RNDeviceModule: void getPhoneNumber(com.facebook.react.bridge.Promise)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.swmansion.reanimated.nodes.Node: void addChild(com.swmansion.reanimated.nodes.Node)
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
com.airbnb.lottie.LottieAnimationView: void setImageDrawable(android.graphics.drawable.Drawable)
com.learnium.RNDeviceInfo.DeviceType: com.learnium.RNDeviceInfo.DeviceType valueOf(java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void initialize()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
com.learnium.RNDeviceInfo.RNDeviceModule: void hasGms(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableView: void setStrokeMiterlimit(float)
com.horcrux.svg.RectView: void setY(com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.webview.RNCWebViewManager: void setApplicationNameForUserAgent(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
org.wonday.pdf.PdfManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.shape.ShapePath$PathOperation: ShapePath$PathOperation()
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsInitProvider: ReactNativeFirebaseCrashlyticsInitProvider()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] values()
com.yalantis.ucrop.view.GestureCropImageView: GestureCropImageView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
com.rnfs.RNFSManager: void mkdir(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.SvgView: android.graphics.RectF getViewBox()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDeviceNameSync()
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.horcrux.svg.PatternView: void setPatternTransform(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.horcrux.svg.RenderableViewManager: void decomposeMatrix()
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
com.brentvatne.react.ReactVideoView: void setRateModifier(float)
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
com.facebook.react.fabric.FabricUIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.learnium.RNDeviceInfo.RNDeviceModule: void getFontScale(com.facebook.react.bridge.Promise)
com.rnfs.RNFSManager: byte[] getInputStreamBytes(java.io.InputStream)
com.shockwave.pdfium.PdfiumCore: com.shockwave.pdfium.util.Size nativeGetPageSizeByIndex(long,int,int)
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.google.firebase.crashlytics.internal.model.StaticSessionData$OsData: StaticSessionData$OsData()
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(android.view.View,boolean)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String)
com.facebook.react.devsupport.DoubleTapReloadRecognizer: DoubleTapReloadRecognizer()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
com.airbnb.android.react.lottie.LottieAnimationViewManager: com.airbnb.android.react.lottie.LottieAnimationViewPropertyManager access$100(com.airbnb.android.react.lottie.LottieAnimationViewManager,com.airbnb.lottie.LottieAnimationView)
com.facebook.react.modules.network.NetworkingModule: boolean access$000(long,long)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeArrayChunk(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.reactnativecommunity.viewpager.ReactViewPagerManager: void addView(android.view.ViewGroup,android.view.View,int)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
androidx.recyclerview.widget.RecyclerView: void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.henninghall.date_picker.DatePickerManager: DatePickerManager()
com.facebook.react.bridge.ReadableNativeArray: int size()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.horcrux.svg.PatternView: void setHeight(com.facebook.react.bridge.Dynamic)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.Map getExportedViewConstants()
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onCatalystInstanceDestroy()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.henninghall.date_picker.pickers.AndroidNative: void setTextAlign(android.graphics.Paint$Align)
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: boolean hasPendingAdapterUpdates()
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener access$100()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
net.time4j.YOWElement: java.lang.Object readResolve()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackButtonInCustomView(boolean)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
com.facebook.yoga.YogaNative: void jni_YGNodePrintJNI(long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
net.time4j.format.expert.TimezoneElement: net.time4j.format.expert.TimezoneElement valueOf(java.lang.String)
com.reactnativecommunity.viewpager.ReactViewPagerManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.rnfs.RNFSManager: int getResIdentifier(java.lang.String)
net.time4j.calendar.KoreanEra: net.time4j.calendar.KoreanEra[] values()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.Dynamic: int asInt()
com.airbnb.lottie.model.content.ShapeData: ShapeData()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.reactnative.ivpusic.imagepicker.PickerModule: boolean isCameraAvailable(android.app.Activity)
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.gms.signin.internal.zaa: zaa()
com.razorpay.CryptLib$EncryptMode: com.razorpay.CryptLib$EncryptMode[] values()
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
com.henninghall.date_picker.DatePickerManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.henninghall.date_picker.models.WheelType: com.henninghall.date_picker.models.WheelType[] values()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder()
androidx.recyclerview.widget.RecyclerView: void invalidateGlows()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
cl.json.RNShareModule: void onActivityResult(int,int,android.content.Intent)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory: OkHttpUrlLoader$Factory()
com.learnium.RNDeviceInfo.RNDeviceModule: void getIncremental(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideShadow(boolean)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] values()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.razorpay.AnalyticsEvent: com.razorpay.AnalyticsEvent valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.horcrux.svg.TextView: void setRotate(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
org.wonday.pdf.PdfManager: void onDropViewInstance(org.wonday.pdf.PdfView)
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.reactnative.ivpusic.imagepicker.PickerModule: android.graphics.Bitmap validateVideo(java.lang.String)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setNestedScrollEnabled(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$000(com.facebook.react.modules.websocket.WebSocketModule)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidGetPlayServicesStatus(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager: void setPointerEvents(com.horcrux.svg.VirtualView,java.lang.String)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getBase64StringFromFile(java.lang.String)
com.google.android.gms.internal.measurement.zzfx: zzfx()
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType valueOf(java.lang.String)
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.github.barteksc.pdfviewer.PDFView: com.github.barteksc.pdfviewer.util.FitPolicy getPageFitPolicy()
com.inprogress.reactnativeyoutube.YouTubeView: int getCurrentTime()
com.learnium.RNDeviceInfo.RNDeviceModule: RNDeviceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendAccessibilityServiceChangeEvent(boolean)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesGetAll(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(android.view.View,boolean)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactActivity: ReactActivity()
com.horcrux.svg.SymbolView: void setMinY(float)
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getKey()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type valueOf(java.lang.String)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void didCrashOnPreviousExecution(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.GuardedRunnable: void run()
com.learnium.RNDeviceInfo.RNDeviceModule: void addListener(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$unsubscribeFromTopic$11(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.button.MaterialButton: int getIconSize()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.google.firebase.installations.remote.TokenResult: TokenResult()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSecurityPatchSync()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void mv(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(android.view.View,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.brentvatne.react.ReactVideoViewManager: void setVolume(com.brentvatne.react.ReactVideoView,float)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.google.android.material.card.MaterialCardView: void setProgress(float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.horcrux.svg.TextPathView: void setSpacing(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes valueOf(java.lang.String)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
com.reactnativecommunity.webview.RNCWebViewModule: void setDownloadRequest(android.app.DownloadManager$Request)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.henninghall.date_picker.pickers.AndroidNative: void setOnValueChangedListener(com.henninghall.date_picker.pickers.Picker$OnValueChangeListener)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleClearJSResponder()
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.swmansion.rnscreens.Screen: void setActivityState(com.swmansion.rnscreens.Screen$ActivityState)
com.facebook.react.ReactRootView: int getUIManagerType()
com.google.android.gms.internal.measurement.zzbo: zzbo()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: DownsampleStrategy()
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: ReactToolbarManager()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String access$402(com.learnium.RNDeviceInfo.RNDeviceModule,java.lang.String)
net.time4j.tz.FallbackTimezone: java.lang.Object writeReplace()
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
com.airbnb.lottie.LottieAnimationView: void setAnimationFromJson(java.lang.String)
com.reactnativecommunity.webview.RNCWebView$RNCWebViewBridge: void postMessage(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(com.swmansion.rnscreens.Screen,boolean)
org.wonday.pdf.PdfManager: void setEnablePaging(org.wonday.pdf.PdfView,boolean)
io.xogus.reactnative.versioncheck.RNVersionCheckModule: java.util.Map getConstants()
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator getFlingAnimator()
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.google.android.gms.internal.measurement.zzjw: zzjw()
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper findRootHelperForViewAncestor(int)
com.swmansion.rnscreens.ScreenStackHeaderSubview: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview$Type)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void cp(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getTypedExportedConstants()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.yalantis.ucrop.view.UCropView: UCropView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.swmansion.reanimated.CopiedEvent$1: CopiedEvent$1(com.swmansion.reanimated.CopiedEvent)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(android.view.View,java.lang.String)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.horcrux.svg.VirtualView: double getCanvasDiagonal()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
com.learnium.RNDeviceInfo.RNDeviceModule: long getBlockSize(android.os.StatFs,java.lang.Boolean)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenContainer,int)
com.horcrux.svg.MarkerView: void setMinX(float)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideBackButton(boolean)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.razorpay.RzpAssist: void setUseWideViewPort(boolean)
com.reactnativecommunity.slider.ReactSliderManager: java.lang.String getName()
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setVerticalAlign(com.horcrux.svg.TextView,java.lang.String)
com.facebook.react.views.slider.ReactSlider: double getStepValue()
com.google.android.gms.internal.measurement.zzit: zzit()
com.horcrux.svg.RenderableViewManager: void setStrokeLinecap(com.horcrux.svg.RenderableView,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
net.time4j.tz.spi.ZoneNameProviderSPI: ZoneNameProviderSPI()
net.time4j.history.HistoricIntegerElement: java.lang.Object readResolve()
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.reactnativecommunity.webview.RNCWebView: void setWebChromeClient(android.webkit.WebChromeClient)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType[] values()
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.jni.HybridData initHybrid(int,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
com.airbnb.lottie.LottieAnimationView: void setCacheComposition(boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.facebook.react.modules.blob.BlobModule: void initialize()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType: com.reactnativecommunity.webview.RNCWebViewModuleImpl$MimeType[] values()
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] values()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.github.barteksc.pdfviewer.PDFView: void setMinZoom(float)
com.horcrux.svg.RenderableViewManager$PathViewManager: void onDropViewInstance(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.github.barteksc.pdfviewer.PDFView: int getCurrentPage()
com.brentvatne.react.ReactVideoView: int getAudioSessionId()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(com.swmansion.rnscreens.ScreenStack,android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.facebook.react.turbomodule.core.TurboModuleManager$2: TurboModuleManager$2(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification[] values()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.airbnb.lottie.LottieDrawable$OnVisibleAction: com.airbnb.lottie.LottieDrawable$OnVisibleAction valueOf(java.lang.String)
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode[] values()
com.facebook.react.modules.dialog.DialogModule: void initialize()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.brentvatne.react.ReactVideoViewManager: void setProgressUpdateInterval(com.brentvatne.react.ReactVideoView,float)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubview createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
com.learnium.RNDeviceInfo.RNDeviceModule: void getDisplay(com.facebook.react.bridge.Promise)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.firebase.crashlytics.internal.common.CrashlyticsReportWithSessionId: CrashlyticsReportWithSessionId()
com.rnfs.RNFSManager: void copyFile(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebView createViewInstance(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.webview.RNCWebView)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig()
com.horcrux.svg.TextView: void setTextLength(com.facebook.react.bridge.Dynamic)
com.brentvatne.react.ReactVideoView: void setStereoPan(float)
com.horcrux.svg.RadialGradientView: void setRx(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.horcrux.svg.RenderableViewManager$GroupViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.airbnb.lottie.LottieDrawable: LottieDrawable()
com.swmansion.rnscreens.SearchBarManager: void receiveCommand(com.swmansion.rnscreens.SearchBarView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupported32BitAbisSync()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
com.swmansion.reanimated.ReanimatedModule: void disconnectNodes(int,int)
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.airbnb.lottie.LottieAnimationView: void setFallbackResource(int)
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
com.learnium.RNDeviceInfo.RNDeviceModule: float getFontScaleSync()
net.time4j.calendar.astro.AstronomicalSeason: net.time4j.calendar.astro.AstronomicalSeason[] values()
com.facebook.react.modules.blob.BlobModule: java.lang.String getName()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
com.facebook.jni.DestructorThread$Destructor: void destruct()
com.reactnativecommunity.viewpager.ReactViewPagerManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void clear(com.facebook.react.bridge.Callback)
com.airbnb.android.react.lottie.LottieAnimationViewManager: LottieAnimationViewManager()
com.google.android.material.card.MaterialCardView: void setRadius(float)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.FabricUIManager: android.view.View resolveView(int)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.swmansion.rnscreens.SearchBarView: boolean getShouldShowHintSearchIcon()
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: java.lang.String getName()
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getProductSync()
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskTransform(com.horcrux.svg.MaskView,com.facebook.react.bridge.ReadableArray)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setDividerColor(int)
com.facebook.react.bridge.ReactContext: void destroy()
com.reactnativecommunity.slider.ReactSliderManager: void setThumbTintColor(com.reactnativecommunity.slider.ReactSlider,java.lang.Integer)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
com.razorpay.RzpAssist: void toast(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.horcrux.svg.EllipseView: void setCx(com.facebook.react.bridge.Dynamic)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.horcrux.svg.RenderableViewManager$MarkerManager: RenderableViewManager$MarkerManager()
com.swmansion.rnscreens.SearchBarManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.github.barteksc.pdfviewer.PDFView: int getPageCount()
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
com.facebook.react.modules.network.NetworkingModule: boolean access$100(com.facebook.react.modules.network.NetworkingModule)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
com.facebook.react.views.scroll.ScrollEvent: ScrollEvent()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$700(com.facebook.react.animated.NativeAnimatedModule)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
net.time4j.format.expert.TimezoneElement: net.time4j.format.expert.TimezoneElement[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccess(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.reactnativecommunity.webview.RNCWebViewManager: void setSetDisplayZoomControls(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet access$000(com.facebook.react.bridge.ReactContext)
com.reactlibrary.createthumbnail.CreateThumbnailModule: java.io.File createDirIfNotExists(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.dylanvann.fastimage.FastImageViewManager: float getGranularityPercentage()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits[] values()
com.google.android.gms.internal.measurement.zzio: zzio()
com.google.android.gms.internal.measurement.zzer: zzer()
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: Animatable2Compat$AnimationCallback()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleDataCreateEnd(java.lang.String,int)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: ReactNativeFirebaseMessagingModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
okhttp3.Response$Builder: Response$Builder()
com.google.android.gms.internal.measurement.zzmo: zzmo()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor access$100()
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
androidx.recyclerview.widget.RecyclerView: boolean access$200(androidx.recyclerview.widget.RecyclerView)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setFriction(float)
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.reactnativecommunity.webview.RNCWebView: void setMessagingEnabled(boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.cardview.widget.CardView: void setCardElevation(float)
com.inprogress.reactnativeyoutube.YouTubeView: void setVideoId(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
com.yalantis.ucrop.view.TransformImageView: void setScaleType(android.widget.ImageView$ScaleType)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
net.time4j.PlainTime: void readObject(java.io.ObjectInputStream)
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
com.google.android.gms.internal.measurement.zzej: zzej()
com.reactlibrary.createthumbnail.CreateThumbnailModule: android.graphics.Bitmap getBitmapAtTime(android.content.Context,java.lang.String,int,java.util.Map)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
com.horcrux.svg.RenderableViewManager$ImageViewManager: RenderableViewManager$ImageViewManager()
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.razorpay.CryptLib$EncryptMode: com.razorpay.CryptLib$EncryptMode valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.google.gson.JsonElement: JsonElement()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState[] values()
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory valueOf(java.lang.String)
com.swmansion.reanimated.NativeProxy$EventHandler: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver access$002(com.swmansion.reanimated.NativeProxy$EventHandler,com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver)
okio.Options$Companion: Options$Companion()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(android.view.View,java.lang.Integer)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)
com.swmansion.reanimated.NativeProxy$EventHandler: NativeProxy$EventHandler(com.facebook.jni.HybridData)
com.facebook.react.modules.core.TimingModule: java.lang.String getName()
com.google.android.youtube.player.YouTubeInitializationResult: com.google.android.youtube.player.YouTubeInitializationResult valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
com.agontuk.RNFusedLocation.RNFusedLocationModule: void stopObserving()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$300(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.google.android.gms.internal.measurement.zzhz: zzhz()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setOnValueChangeListenerInScrolling(cn.carbswang.android.numberpickerview.library.NumberPickerView$OnValueChangeListenerInScrolling)
com.google.android.material.card.MaterialCardView: float getRadius()
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(android.view.View,boolean)
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.RenderMode getRenderMode()
com.inprogress.reactnativeyoutube.YouTubeManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double)
net.time4j.tz.model.RuleComparator: net.time4j.tz.model.RuleComparator[] values()
okhttp3.RequestBody$Companion: RequestBody$Companion()
com.horcrux.svg.RenderableViewManager: void setStrokeWidth(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
com.yalantis.ucrop.view.OverlayView: void setShowCropFrame(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.brentvatne.react.ReactVideoViewManager: void setControls(com.brentvatne.react.ReactVideoView,boolean)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.horcrux.svg.SvgViewManager: void setVbHeight(com.horcrux.svg.SvgView,float)
com.facebook.jni.DestructorThread$Terminus: void destruct()
com.google.android.datatransport.runtime.EventInternal: EventInternal()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
androidx.collection.LongSparseArray: LongSparseArray()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
com.swmansion.rnscreens.Screen: void setScreenOrientation(java.lang.String)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.github.barteksc.pdfviewer.PDFView: void setSpacing(int)
com.google.android.gms.common.internal.zzj: zzj()
com.google.gson.JsonArray: JsonArray()
com.bumptech.glide.load.engine.LockedResource: LockedResource()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges[] values()
com.inprogress.reactnativeyoutube.YouTubeManager: int getVideosIndex(com.inprogress.reactnativeyoutube.YouTubeView)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.rnfs.RNFSManager: void pathForGroup(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.config.ReactFeatureFlags: void setMapBufferSerializationEnabled(boolean)
com.razorpay.B$$W$: B$$W$()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void deleteApp(java.lang.String,com.facebook.react.bridge.Promise)
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(android.view.View)
com.razorpay.CheckoutBridge: void registerSmsListener()
com.swmansion.rnscreens.ScreenStack: boolean getGoingForward()
com.henninghall.date_picker.pickers.AndroidNative: android.view.View getView()
androidx.work.NetworkType: androidx.work.NetworkType[] values()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.facebook.react.fabric.FabricUIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.GoogleApiAvailability: GoogleApiAvailability()
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.Compression access$900(com.reactnative.ivpusic.imagepicker.PickerModule)
androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)
com.reactnativecommunity.slider.ReactSliderManager: com.reactnativecommunity.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
com.ReactNativeBlobUtil.ReactNativeBlobUtilProgressConfig$ReportType: com.ReactNativeBlobUtil.ReactNativeBlobUtilProgressConfig$ReportType valueOf(java.lang.String)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalDiskCapacitySync()
com.horcrux.svg.RenderableViewManager$RectViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextDecorationLine(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.airbnb.lottie.LottieAnimationView: void setMinFrame(int)
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.reactnativecommunity.netinfo.NetInfoModule: void initialize()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
org.wonday.pdf.PdfView: void setSinglePage(boolean)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(android.view.View,boolean)
com.google.android.gms.internal.measurement.zzgj: zzgj()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setTitle(com.reactnativecommunity.toolbarandroid.ReactToolbar,java.lang.String)
org.wonday.pdf.PdfManager: void setPath(android.view.View,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] values()
com.inprogress.reactnativeyoutube.YouTubeManager: void setPropPlaylistId(com.inprogress.reactnativeyoutube.YouTubeView,java.lang.String)
com.horcrux.svg.SvgView: void setBbHeight(com.facebook.react.bridge.Dynamic)
kotlin.random.Random: Random()
net.time4j.calendar.KoreanCalendar: void readObject(java.io.ObjectInputStream)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.facebook.imageutils.TiffUtil: TiffUtil()
com.brentvatne.react.ReactVideoViewManager: void setSrc(com.brentvatne.react.ReactVideoView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackFragment getScreenFragment()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
com.google.android.material.chip.Chip: void setElevation(float)
com.facebook.react.turbomodule.core.TurboModuleManager$1: TurboModuleManager$1(com.facebook.react.turbomodule.core.TurboModuleManager,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
com.rnfs.RNFSManager: void stopDownload(int)
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.rnfs.RNFSManager: void downloadFile(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void onAfterUpdateTransaction(android.view.View)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.lang.String getName()
com.github.barteksc.pdfviewer.PDFView: void setSwipeEnabled(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderRadius()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.work.impl.WorkDatabase: WorkDatabase()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setOpacity(android.view.View,float)
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
net.time4j.i18n.LanguageMatch: net.time4j.i18n.LanguageMatch[] values()
net.time4j.calendar.EastAsianCY: java.lang.Object readResolve()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerUnits(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.facebook.react.views.scroll.ReactScrollView: android.view.View getContentView()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void attachGestureHandler(int,int,int)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
com.horcrux.svg.MarkerView: void setMeetOrSlice(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: ScreenStackHeaderConfigViewManager()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void startCreatingModule()
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.swmansion.reanimated.NativeProxy: long getCurrentTime()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.otters.newarchitecture.components.MainComponentsRegistry: com.otters.newarchitecture.components.MainComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
com.swmansion.rnscreens.Screen: boolean getNativeBackButtonDismissalEnabled()
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.google.android.datatransport.runtime.ProtoEncoderDoNotUse: ProtoEncoderDoNotUse()
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.imagepipeline.memory.BitmapCounterProvider: BitmapCounterProvider()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfig createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$100(com.reactnative.ivpusic.imagepicker.PickerModule,java.io.File)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
org.wonday.pdf.PdfView: void setPage(int)
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.TextView: void setMethod(java.lang.String)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.horcrux.svg.RenderableView: void setFill(com.facebook.react.bridge.Dynamic)
net.time4j.tz.model.OffsetIndicator: net.time4j.tz.model.OffsetIndicator valueOf(java.lang.String)
com.razorpay.ResponseObject: ResponseObject()
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
com.reactnative.ivpusic.imagepicker.PickerModule: void imagePickerResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.horcrux.svg.RenderableViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
androidx.work.ListenableWorker$Result$Retry: ListenableWorker$Result$Retry()
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.agontuk.RNFusedLocation.LocationError: com.agontuk.RNFusedLocation.LocationError[] values()
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.razorpay.t: void setBoolean(java.lang.String,boolean)
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
androidx.recyclerview.widget.RecyclerView: void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
com.reactnative.ivpusic.imagepicker.PickerModule: void startCropping(android.app.Activity,android.net.Uri)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.Long getVideoDuration(java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
com.swmansion.reanimated.ReanimatedModule: void getValue(int,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: ResourceManagerInternal$DrawableDelegate()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeToMediaFile(java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.core.RotationGestureHandler: RotationGestureHandler()
com.horcrux.svg.CircleView: void setR(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.ReadableNativeMap)
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
com.swmansion.rnscreens.SearchBarView: void setHeaderIconColor(java.lang.Integer)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.reactnativecommunity.webview.RNCWebViewManager: void setScalesPageToFit(com.reactnativecommunity.webview.RNCWebView,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: double access$800(com.learnium.RNDeviceInfo.RNDeviceModule)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
androidx.loader.content.ModernAsyncTask: ModernAsyncTask()
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
androidx.recyclerview.widget.RecyclerView: void repositionShadowingViews()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.FontData: FontData()
com.henninghall.date_picker.DatePickerManager: void setStyle(com.henninghall.date_picker.PickerView,int,com.facebook.react.bridge.Dynamic)
com.reactnative.ivpusic.imagepicker.PickerModule: void croppingResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReactContext$1: void run()
com.horcrux.svg.SvgViewManager: SvgViewManager()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupported32BitAbis(com.facebook.react.bridge.Promise)
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayModeNative(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.swmansion.rnscreens.Screen: void setStatusBarHidden(java.lang.Boolean)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String getName()
com.reactnativecommunity.viewpager.ReactViewPagerManager: androidx.viewpager2.widget.ViewPager2 createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.swmansion.rnscreens.ScreenStackViewManager: void prepareOutTransition(com.swmansion.rnscreens.Screen)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.datatransport.cct.internal.LogResponse: LogResponse()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.webview.RNCWebView: void setHasScrollEvent(boolean)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
net.time4j.format.TextWidth: net.time4j.format.TextWidth[] values()
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.shockwave.pdfium.PdfiumCore: java.lang.String nativeGetDocumentMetaText(long,java.lang.String)
androidx.cardview.widget.CardView: int getContentPaddingRight()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
com.learnium.RNDeviceInfo.RNDeviceModule: void getHardware(com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.yalantis.ucrop.view.OverlayView: void setFreestyleCropEnabled(boolean)
androidx.viewpager2.widget.ViewPager2: void setUserInputEnabled(boolean)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.learnium.RNDeviceInfo.RNDeviceModule: void sendEvent(com.facebook.react.bridge.ReactContext,java.lang.String,java.lang.Object)
com.reactnative.ivpusic.imagepicker.PickerModule: void permissionsCheck(android.app.Activity,com.facebook.react.bridge.Promise,java.util.List,java.util.concurrent.Callable)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsDebuggingRemotely(boolean)
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory: PlatformBitmapFactory()
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.facebook.react.uimanager.events.Event: Event()
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule: void getJSHierarchy(int)
com.razorpay.PluginCheckoutBridge: void onCheckoutBackPress()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
com.razorpay.CheckoutBridge: void toast(java.lang.String,int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupportedAbis(com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.cardview.widget.CardView: void setRadius(float)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isBatteryChargingSync()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.SvgViewManager: void onDropViewInstance(com.facebook.react.views.view.ReactViewGroup)
com.github.barteksc.pdfviewer.PDFView: void setFitEachPage(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha()
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean access$500(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
com.yalantis.ucrop.view.CropImageView: float getTargetAspectRatio()
com.github.barteksc.pdfviewer.PDFView: com.shockwave.pdfium.PdfDocument$Meta getDocumentMeta()
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.ReactNativeBlobUtil.ReactNativeBlobUtilProgressConfig$ReportType: com.ReactNativeBlobUtil.ReactNativeBlobUtilProgressConfig$ReportType[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.bumptech.glide.request.RequestOptions: RequestOptions()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.bumptech.glide.load.resource.UnitTransformation: UnitTransformation()
com.horcrux.svg.RenderableViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
net.time4j.tz.model.CompositeTransitionModel: java.lang.Object writeReplace()
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String)
com.horcrux.svg.TextPathView: void setHref(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
com.horcrux.svg.PatternView: void setVbHeight(float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.facebook.soloader.nativeloader.NativeLoader: NativeLoader()
com.reactnativecommunity.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.yqritc.scalablevideoview.ScalableVideoView: void setDataSource(java.lang.String)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDeviceSync()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
com.google.firebase.crashlytics.ndk.CrashpadMain: void main(java.lang.String[])
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: com.reactnative.ivpusic.imagepicker.ResultCollector access$800(com.reactnative.ivpusic.imagepicker.PickerModule)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.gms.internal.measurement.zzjz: zzjz()
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String getName()
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$1000(com.learnium.RNDeviceInfo.RNDeviceModule)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.facebook.react.animated.NativeAnimatedModule: void access$400(com.facebook.react.animated.NativeAnimatedModule,java.util.Queue,long)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.google.android.datatransport.runtime.TransportContext: TransportContext()
androidx.recyclerview.widget.RecyclerView: boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void setDeliveryMetricsExportToBigQuery(java.lang.Boolean,com.facebook.react.bridge.Promise)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: com.facebook.react.bridge.WritableMap getPlayServicesStatusMap()
com.facebook.fbreact.specs.NativeJSDevSupportSpec: NativeJSDevSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: long getChildItemId(android.view.View)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getName()
com.google.firebase.crashlytics.FirebaseCrashlytics: void deleteUnsentReports()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline access$100(com.facebook.react.modules.image.ImageLoaderModule)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getCommandsMap()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.recyclerview.widget.RecyclerView: void recoverFocusFromState()
org.wonday.pdf.PdfManager: void setNativePage(android.view.View,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStack getScreenStack()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
com.rnfs.RNFSManager: void DeleteRecursive(java.io.File)
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.slider.ReactSliderManager: ReactSliderManager()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMeetOrSlice(com.horcrux.svg.MarkerView,int)
androidx.lifecycle.ViewModelStore: ViewModelStore()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSerialNumber(com.facebook.react.bridge.Promise)
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] values()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.horcrux.svg.RenderableViewManager$RectViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder access$900(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
com.facebook.react.bridge.DynamicFromArray: void recycle()
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.razorpay.t: void setString(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.horcrux.svg.VirtualView)
com.reactnativecommunity.webview.RNCWebViewManager: void setIncognito(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
com.yalantis.ucrop.view.TransformImageView: void setImageBitmap(android.graphics.Bitmap)
com.horcrux.svg.EllipseView: void setCy(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.LineView: void setX2(com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
net.time4j.calendar.KoreanCalendar$SPX: java.lang.Object readResolve()
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.WritableMap getSelection(android.app.Activity,android.net.Uri,boolean)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session: CrashlyticsReport$Session()
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ReanimatedUIManager: void setJSResponder(int,boolean)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
org.wonday.pdf.PdfView: void setMinScale(float)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.CustomToolbar getToolbar()
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.swmansion.reanimated.NativeProxy: void registerEventHandler(com.swmansion.reanimated.NativeProxy$EventHandler)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientTransform(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccessFromFileURLs(com.reactnativecommunity.webview.RNCWebView,boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.Long access$700(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
com.dylanvann.fastimage.FastImageViewModule: void preload(com.facebook.react.bridge.ReadableArray)
cn.carbswang.android.numberpickerview.library.NumberPickerView: int getValue()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
com.google.android.material.chip.Chip: void setMinLines(int)
com.horcrux.svg.ForeignObjectView: void setY(com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(android.view.View)
com.reactnativerestart.RestartModule: void loadBundle()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
net.time4j.calendar.KoreanCalendar$Unit: net.time4j.calendar.KoreanCalendar$Unit[] values()
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.horcrux.svg.SvgView: void setAlign(java.lang.String)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.lang.String getName()
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void logNotAvailable(java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: android.graphics.BitmapFactory$Options validateImage(java.lang.String)
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.VirtualView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.razorpay.rn.RazorpayModule: void onPaymentSuccess(java.lang.String,com.razorpay.PaymentData)
net.time4j.tz.ZonalOffset: java.lang.Object writeReplace()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.inprogress.reactnativeyoutube.YouTubeManager: void setPropControls(com.inprogress.reactnativeyoutube.YouTubeView,int)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String getName()
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getPhoneNumberSync()
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getMacAddressSync()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
com.horcrux.svg.TextView: void setLengthAdjust(java.lang.String)
com.google.android.gms.common.api.GoogleApiClient: GoogleApiClient()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.reactnativecommunity.slider.ReactSlider: void setThumbImage(java.lang.String)
net.time4j.format.expert.TimezoneIDProcessor: net.time4j.format.expert.TimezoneIDProcessor valueOf(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceIdNative()
com.razorpay.CheckoutBridge: void onfault(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager$DefsViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnative.ivpusic.imagepicker.PickerModule: android.graphics.Bitmap access$600(com.reactnative.ivpusic.imagepicker.PickerModule,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.horcrux.svg.RenderableViewManager$GroupViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type[] values()
androidx.recyclerview.widget.RecyclerView: void jumpToPositionForSmoothScroller(int)
com.BV.LinearGradient.LinearGradientView: void setEndPoint(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList access$700(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
com.dylanvann.fastimage.FastImageViewManager: void onProgress(java.lang.String,long,long)
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.razorpay.CheckoutBridge: void setAppToken(java.lang.String)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource valueOf(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
com.facebook.yoga.YogaNode: YogaNode()
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setNavIcon(com.reactnativecommunity.toolbarandroid.ReactToolbar,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeFileArray(java.lang.String,com.facebook.react.bridge.ReadableArray,boolean,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.modules.storage.AsyncStorageModule: void initialize()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
org.wonday.pdf.PdfManager: void setEnableAntialiasing(android.view.View,boolean)
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.google.android.material.button.MaterialButton: void setIconResource(int)
com.reactlibrary.InstaStoryManager: InstaStoryManager()
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
com.github.barteksc.pdfviewer.PDFView: void setAutoSpacing(boolean)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.swmansion.gesturehandler.core.TapGestureHandler: TapGestureHandler()
com.facebook.react.bridge.ReadableNativeMap$2: boolean hasNextKey()
androidx.work.InputMerger: InputMerger()
com.swmansion.rnscreens.SearchBarView: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RadialGradientView: void setFx(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
com.horcrux.svg.TextView: void setPositionY(com.facebook.react.bridge.Dynamic)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
com.facebook.react.views.textinput.ReactEditText: void setFontFeatureSettings(java.lang.String)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.yalantis.ucrop.view.TransformImageView: float getCurrentScale()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
com.google.firebase.crashlytics.FirebaseCrashlytics: void setCustomKey(java.lang.String,float)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.work.ListenableWorker: ListenableWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForRemove(int,int,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDeviceEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ReanimatedUIManager: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(android.view.View,java.lang.Integer)
androidx.viewpager2.widget.ViewPager2: java.lang.CharSequence getAccessibilityClassName()
com.yalantis.ucrop.view.OverlayView: void setFreestyleCropMode(int)
com.horcrux.svg.RenderableViewManager$PathViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.VirtualView: void setName(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
com.learnium.RNDeviceInfo.RNDeviceModule: android.net.wifi.WifiInfo getWifiInfo()
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.vibration.VibrationModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration valueOf(java.lang.String)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
com.reactnativecommunity.viewpager.ReactViewPagerManager: void set(androidx.viewpager2.widget.ViewPager2,int)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
com.horcrux.svg.SvgViewManager: void setMinX(com.horcrux.svg.SvgView,float)
com.google.android.material.shape.ShapePath$ShadowCompatOperation: ShapePath$ShadowCompatOperation()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String getName()
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
com.facebook.react.modules.blob.BlobModule: java.lang.String access$100(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.oblador.vectoricons.VectorIconsModule: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener: AbstractDraweeController$InternalForwardingListener()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1: java.util.Map$Entry next()
com.github.barteksc.pdfviewer.PDFView: void setMaxZoom(float)
com.airbnb.lottie.LottieAnimationView: void setImageAssetsFolder(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void access$100(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)
com.airbnb.lottie.model.DocumentData: DocumentData()
com.henninghall.date_picker.DatePickerModule: java.lang.String getName()
com.reactnativecommunity.webview.RNCWebViewManager: void setLackPermissionToDownloadMessage(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.razorpay.CheckoutBridge: java.lang.String getSdkPlugins()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
androidx.viewpager2.widget.ViewPager2: void setLayoutDirection(int)
androidx.core.content.FileProvider: FileProvider()
androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] values()
com.yalantis.ucrop.view.TransformImageView: void setTransformImageListener(com.yalantis.ucrop.view.TransformImageView$TransformImageListener)
com.learnium.RNDeviceInfo.RNDeviceModule: void removeListeners(java.lang.Integer)
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
com.horcrux.svg.ImageView: void setX(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.PatternView: void setVbWidth(float)
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap access$000(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
com.brentvatne.react.ReactVideoViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.horcrux.svg.RenderableViewManager$DefsViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
okhttp3.CacheControl$Builder: CacheControl$Builder()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
com.horcrux.svg.SvgViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.horcrux.svg.PatternView: void setY(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.ViewGroup,int)
com.reactlibrary.createthumbnail.CreateThumbnailModule: android.graphics.Bitmap access$100(android.content.Context,java.lang.String,int,java.util.Map)
com.facebook.react.fabric.FabricUIManager: void stopSurface(int)
com.reactnativecommunity.webview.RNCWebViewManager: void setThirdPartyCookiesEnabled(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.soloader.MinElf$ISA: com.facebook.soloader.MinElf$ISA[] values()
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager$RectViewManager: void onDropViewInstance(android.view.View)
androidx.work.impl.model.WorkSpec$IdAndState: WorkSpec$IdAndState()
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor(com.facebook.jni.HybridData)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.razorpay.PluginCheckoutBridge: void invokePopup(java.lang.String)
net.time4j.calendar.astro.StdSolarCalculator: net.time4j.calendar.astro.StdSolarCalculator valueOf(java.lang.String)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.gms.internal.measurement.zzjy: zzjy()
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setNormalTextColor(int)
com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture: com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture[] values()
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(com.swmansion.rnscreens.ScreenContainer)
com.reactnative.ivpusic.imagepicker.PickerModule: void getVideo(android.app.Activity,java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalDiskCapacityOldSync()
net.time4j.format.expert.SignPolicy: net.time4j.format.expert.SignPolicy[] values()
com.swmansion.rnscreens.Screen: void setNavigationBarColor(java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.fabric.FabricUIManager: void startSurface(com.facebook.react.fabric.SurfaceHandler,android.content.Context,android.view.View)
com.reactnativecommunity.viewpager.ReactViewPagerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.yalantis.ucrop.view.OverlayView: void setOverlayViewChangeListener(com.yalantis.ucrop.callback.OverlayViewChangeListener)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.reactnativecommunity.webview.RNCWebViewManager: void setBasicAuthCredential(com.reactnativecommunity.webview.RNCWebView,com.facebook.react.bridge.ReadableMap)
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(android.view.View,boolean)
com.swmansion.rnscreens.SearchBarManager: void setAutoFocus(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: java.io.File createVideoFile()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.google.android.datatransport.cct.internal.LogEvent: LogEvent()
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.henninghall.date_picker.DatePickerModule: DatePickerModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
androidx.viewpager2.widget.ViewPager2: void setOffscreenPageLimit(int)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.webview.RNCWebViewManager: void setAndroidLayerType(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
com.horcrux.svg.UseView: void setHref(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String getName()
net.time4j.format.NumberType: net.time4j.format.NumberType[] values()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.bridge.ReactCxxErrorHandler: void handleError(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: NativeAsyncSQLiteDBStorageSpec(com.facebook.react.bridge.ReactApplicationContext)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ComponentNameResolverManager: void staticInit()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSerialNumberSync()
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setDividerHeight(int)
com.horcrux.svg.VirtualView: void setClipPath(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
org.wonday.pdf.PdfManager: org.wonday.pdf.PdfView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.Chip: void setChipTextResource(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http2.Settings: Settings()
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.work.CoroutineWorker: CoroutineWorker(android.content.Context,androidx.work.WorkerParameters)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.horcrux.svg.RenderableViewManager$UseViewManager: void onAfterUpdateTransaction(android.view.View)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
cl.json.RNShareModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
org.wonday.pdf.PdfManager: void setPage(android.view.View,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
okio.Timeout: Timeout()
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.dylanvann.fastimage.FastImageViewManager: boolean isValidContextForGlide(android.content.Context)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzhb: zzhb()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
com.facebook.jni.NativeRunnable: void run()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
com.google.android.gms.internal.measurement.zzfv: zzfv()
com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior: com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void isHeadphonesConnected(com.facebook.react.bridge.Promise)
com.razorpay.rn.RazorpayModule: void onPaymentError(int,java.lang.String,com.razorpay.PaymentData)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.NativeProxy: int subscribeForKeyboardEvents(com.swmansion.reanimated.NativeProxy$KeyboardEventDataUpdater)
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.yalantis.ucrop.view.GestureCropImageView: void setRotateEnabled(boolean)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] values()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTintColor()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
fr.greweb.reactnativeviewshot.RNViewShotModule: void releaseCapture(java.lang.String)
com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
okhttp3.ResponseBody$Companion: ResponseBody$Companion()
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
com.inprogress.reactnativeyoutube.YouTubeView: void setShowFullscreenButton(boolean)
com.horcrux.svg.RectView: void setWidth(com.facebook.react.bridge.Dynamic)
androidx.collection.ArrayMap: ArrayMap()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.reactnative.ivpusic.imagepicker.PickerModule: void cameraPickerResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.yalantis.ucrop.view.CropImageView: CropImageView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
com.bumptech.glide.manager.RequestManagerFragment: RequestManagerFragment()
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: java.lang.String getName()
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
com.horcrux.svg.RadialGradientView: void setGradientUnits(int)
com.agontuk.RNFusedLocation.RNFusedLocationModule: void getCurrentPosition(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidMakePlayServicesAvailable()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object getValue()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: void playVideo(java.lang.String,java.lang.String,boolean,boolean,int,com.facebook.react.bridge.Promise)
com.horcrux.svg.TextView: void setVerticalAlign(java.lang.String)
com.BV.LinearGradient.LinearGradientView: void setBorderRadii(com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
androidx.work.impl.utils.futures.AbstractFuture$Waiter: AbstractFuture$Waiter()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.fabric.Binding: void unregisterSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
com.airbnb.lottie.LottieAnimationView: void setRepeatCount(int)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void stat(java.lang.String,com.facebook.react.bridge.Callback)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
com.google.android.datatransport.runtime.backends.CreationContext: CreationContext()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager()
com.reactnativecommunity.webview.RNCWebViewManager: RNCWebViewManager()
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void crashWithStackPromise(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.bridge.JSIModule: void initialize()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
com.reactnativecommunity.webview.RNCWebView: void setNestedScrollEnabled(boolean)
com.horcrux.svg.SvgView: void setToDataUrlTask(java.lang.Runnable)
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
com.brentvatne.react.ReactVideoView: void setPreventsDisplaySleepDuringVideoPlaybackModifier(boolean)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.ReanimatedModule: void createNode(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskContentUnits(com.horcrux.svg.MaskView,int)
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.facebook.react.modules.network.NetworkingModule: void invalidate()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
com.facebook.react.bridge.DynamicFromObject: void recycle()
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String access$400(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
androidx.viewpager2.widget.ViewPager2: int getOrientation()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
com.yalantis.ucrop.view.OverlayView: void setCropGridCornerColor(int)
net.time4j.history.SPX: void readExternal(java.io.ObjectInput)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)
com.reactnativecommunity.viewpager.ReactViewPagerManager: com.facebook.react.uimanager.events.EventDispatcher access$000(com.reactnativecommunity.viewpager.ReactViewPagerManager)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getInitialWindowMetrics()
com.google.android.gms.internal.measurement.zzff: zzff()
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setResizeMode(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
net.time4j.format.NumberSystem: net.time4j.format.NumberSystem[] values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackFragment getScreenStackFragment()
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.yalantis.ucrop.view.CropImageView: void setCropRect(android.graphics.RectF)
com.google.android.gms.internal.auth-api.zbc: zbc()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
com.reactnativecommunity.slider.ReactSlider: int getTotalSteps()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.time4j.Weekmodel: void readObject(java.io.ObjectInputStream)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseDrawableOnForeground()
com.facebook.imagepipeline.image.EncodedImageOrigin: com.facebook.imagepipeline.image.EncodedImageOrigin valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.github.barteksc.pdfviewer.PDFView: void setScrollHandle(com.github.barteksc.pdfviewer.scroll.ScrollHandle)
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
net.time4j.tz.PlatformTimezone: java.lang.Object readResolve()
kotlinx.coroutines.YieldContext: YieldContext()
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
net.time4j.history.ChronoHistory: void readObject(java.io.ObjectInputStream)
com.swmansion.reanimated.nodes.EventNode: java.lang.Object evaluate()
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.facebook.react.bridge.Dynamic: double asDouble()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.razorpay.CircularProgressView: CircularProgressView(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
com.learnium.RNDeviceInfo.RNDeviceModule: void getDeviceName(com.facebook.react.bridge.Promise)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.horcrux.svg.RenderableViewManager: void setOnLayout(com.horcrux.svg.VirtualView,boolean)
com.google.android.gms.internal.measurement.zzei: zzei()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
com.google.android.gms.internal.measurement.zzgg: zzgg()
com.horcrux.svg.SvgViewManager: void setBbHeight(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.reactnativerestart.RestartModule: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onTouchEvent(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.horcrux.svg.ImageView: void setAlign(java.lang.String)
kotlin.text.Charsets: Charsets()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder)
com.henninghall.date_picker.DatePickerManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.yqritc.scalablevideoview.ScalableVideoView: int getCurrentPosition()
com.agontuk.RNFusedLocation.RNFusedLocationModule: void onLocationError(com.agontuk.RNFusedLocation.LocationProvider,com.agontuk.RNFusedLocation.LocationError,java.lang.String)
com.inprogress.reactnativeyoutube.YouTubeManager: void setPropResumePlay(com.inprogress.reactnativeyoutube.YouTubeView,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
com.horcrux.svg.RenderableViewManager: void setStroke(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.reanimated.ReanimatedModule: void disconnectNodeFromView(int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesClearAll(com.facebook.react.bridge.Promise)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(com.facebook.jni.HybridData)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
com.swmansion.reanimated.nodes.EventNode: EventNode(int,com.facebook.react.bridge.ReadableMap,com.swmansion.reanimated.NodesManager)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
com.google.android.gms.common.api.Api$ApiOptions$NoOptions: Api$ApiOptions$NoOptions()
com.reactnativecommunity.netinfo.NetInfoModule: void removeListeners(java.lang.Integer)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSystemAvailableFeaturesSync()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] values()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeChunk(java.lang.String,java.lang.String,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void onCatalystInstanceDestroy()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.facebook.react.views.modal.ModalHostShadowNode: ModalHostShadowNode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.bumptech.glide.gifdecoder.GifHeaderParser: GifHeaderParser()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback access$200(com.facebook.react.animated.NativeAnimatedModule)
com.horcrux.svg.RenderableViewManager: void onAfterUpdateTransaction(com.horcrux.svg.VirtualView)
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
com.horcrux.svg.RenderableViewManager: boolean isZero(double)
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback access$700(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry access$500(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)
com.facebook.hermes.reactexecutor.HermesExecutor: boolean canLoadFile(java.lang.String)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
com.facebook.react.devsupport.HMRClient: void enable()
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.horcrux.svg.TextPathView: void setSide(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.reactnativecommunity.webview.RNCWebView: void setMenuCustomItems(java.util.List)
net.time4j.format.PluralCategory: net.time4j.format.PluralCategory valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsRemoveListener(java.lang.String,java.lang.Boolean)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
net.time4j.DecimalTimeElement: java.lang.Object readResolve()
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean isLayoutAnimationEnabled()
com.facebook.react.views.slider.ReactSliderManager: void setTestID(android.view.View,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
com.swmansion.reanimated.NativeProxy: boolean isAnyHandlerWaitingForEvent(java.lang.String)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDeltaY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.gms.internal.measurement.zzfd: zzfd()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.razorpay.RzpAssist: void onOtpParsed(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.horcrux.svg.SymbolView: void setAlign(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View,int)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.dylanvann.fastimage.FastImageGlideModule: FastImageGlideModule()
androidx.viewpager2.widget.ViewPager2: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.slider.ReactSliderManager: java.lang.String getName()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$OperatingSystem: CrashlyticsReport$Session$OperatingSystem()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String getName()
com.facebook.react.views.text.ReactTextInlineImageShadowNode: ReactTextInlineImageShadowNode()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: ReactNativeFirebaseAppModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableArray: int size()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
androidx.recyclerview.widget.RecyclerView: int getChildLayoutPosition(android.view.View)
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
net.time4j.SPX: void readExternal(java.io.ObjectInput)
com.reactnativecommunity.slider.ReactSliderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void hash(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getHostSync()
net.time4j.Weekmodel$CalendarWeekElement: java.lang.Object readResolve()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.pm.PackageInfo getPackageInfo()
com.swmansion.reanimated.NativeProxy: float[] measure(int)
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
com.henninghall.date_picker.DatePickerManager: com.henninghall.date_picker.PickerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.google.android.gms.internal.measurement.zzks: zzks()
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type valueOf(java.lang.String)
com.bumptech.glide.util.ExceptionPassthroughInputStream: ExceptionPassthroughInputStream()
com.reactnativecommunity.viewpager.ReactViewPagerManager: boolean needsCustomLayoutForChildren()
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
com.learnium.RNDeviceInfo.RNDeviceModule: void isEmulator(com.facebook.react.bridge.Promise)
com.inprogress.reactnativeyoutube.YouTubeModule: YouTubeModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.yqritc.scalablevideoview.ScalableVideoView: void setAssetData(java.lang.String)
kotlin.jvm.internal.Intrinsics: Intrinsics()
com.learnium.RNDeviceInfo.RNDeviceModule: void getPowerState(com.facebook.react.bridge.Promise)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onStateChange(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
org.wonday.pdf.PdfManager: void setShowsHorizontalScrollIndicator(org.wonday.pdf.PdfView,boolean)
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
com.inprogress.reactnativeyoutube.YouTubeModule: void getDuration(int,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View)
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: int getIdentifier(android.content.Context,java.lang.String)
com.airbnb.lottie.LottieAnimationView: float getMinFrame()
com.reactnativecommunity.webview.RNCWebViewManager: void setSaveFormDataDisabled(com.reactnativecommunity.webview.RNCWebView,boolean)
com.swmansion.rnscreens.ScreenStackViewManager: void startTransitionRecursive(android.view.ViewGroup)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
com.reactnative.ivpusic.imagepicker.PickerModule: void onNewIntent(android.content.Intent)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
org.reactnative.maskedview.RNCMaskedViewManager: RNCMaskedViewManager()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$getToken$3(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.reactnativecommunity.webview.RNCWebViewManager: void setTextZoom(com.reactnativecommunity.webview.RNCWebView,int)
com.facebook.react.animated.NativeAnimatedModule: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: java.lang.String getName()
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setSrc(com.horcrux.svg.ImageView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.facebook.react.modules.toast.ToastModule: java.lang.String getName()
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSecurityPatch(com.facebook.react.bridge.Promise)
com.BV.LinearGradient.LinearGradientView: void setLocations(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Dynamic: boolean isNull()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
com.facebook.react.common.mapbuffer.ReadableMapBuffer$DataType: com.facebook.react.common.mapbuffer.ReadableMapBuffer$DataType[] values()
net.time4j.tz.GapResolver: net.time4j.tz.GapResolver valueOf(java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void removeListeners(java.lang.Integer)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsNotifyReady(java.lang.Boolean)
com.horcrux.svg.RenderableViewManager: void setVectorEffect(com.horcrux.svg.RenderableView,int)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.horcrux.svg.MarkerView: void setAlign(java.lang.String)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getParentTextRoot()
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void log(java.lang.String)
com.razorpay.t: int getInt(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbWidth(com.horcrux.svg.MarkerView,float)
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.reactlibrary.createthumbnail.CreateThumbnailModule: void cleanDir(java.io.File,long)
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String getName()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStack,int)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.horcrux.svg.RadialGradientView: void setGradient(com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.slider.ReactSlider: int getLowerLimit()
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent(int)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.learnium.RNDeviceInfo.RNDeviceModule: void access$700(com.learnium.RNDeviceInfo.RNDeviceModule,com.facebook.react.bridge.ReactContext,java.lang.String,java.lang.Object)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
io.invertase.firebase.common.ReactNativeFirebaseModule: void onCatalystInstanceDestroy()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientUnits(com.horcrux.svg.LinearGradientView,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(android.view.View,boolean)
com.github.barteksc.pdfviewer.util.FitPolicy: com.github.barteksc.pdfviewer.util.FitPolicy valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.yalantis.ucrop.view.OverlayView: void setCropFrameColor(int)
com.facebook.jni.HybridClassBase: HybridClassBase()
com.horcrux.svg.SvgView: void setVbHeight(float)
androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.horcrux.svg.PatternView: void setPatternUnits(int)
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
org.wonday.pdf.PdfView: void setHorizontal(boolean)
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setAlign(com.horcrux.svg.PatternView,java.lang.String)
com.google.gson.internal.Excluder: Excluder()
com.rnfs.RNFSManager: java.lang.String getWriteAccessByAPILevel()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getPreviewSdkIntSync()
com.horcrux.svg.RectView: void setRy(com.facebook.react.bridge.Dynamic)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
com.agontuk.RNFusedLocation.RNFusedLocationModule: RNFusedLocationModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.google.android.gms.internal.measurement.zzfw: zzfw()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
androidx.recyclerview.widget.RecyclerView: void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator getFlingAnimator()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.facebook.react.fabric.FabricUIManager: void attachRootView(com.facebook.react.fabric.SurfaceHandler,android.view.View)
net.time4j.tz.SingleOffsetTimezone: void readObject(java.io.ObjectInputStream)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: void setScrollingListener(com.yalantis.ucrop.view.widget.HorizontalProgressWheelView$ScrollingListener)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void fetchBlob(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaJSExecutor: void loadBundle(java.lang.String)
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.rnfs.RNFSManager: void rejectFileNotFound(com.facebook.react.bridge.Promise,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
com.horcrux.svg.RenderableViewManager: void setStrokeOpacity(com.horcrux.svg.RenderableView,float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)
com.facebook.react.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.reactnativecommunity.netinfo.NetInfoModule: java.lang.String getName()
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType[] values()
androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropogateToDescendantsJNI(long)
net.time4j.tz.OverlapResolver: net.time4j.tz.OverlapResolver valueOf(java.lang.String)
net.time4j.EnumElement: java.lang.Object readResolve()
org.wonday.pdf.PdfManager: void setEnableAnnotationRendering(org.wonday.pdf.PdfView,boolean)
com.facebook.react.bridge.DynamicFromObject: double asDouble()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
com.horcrux.svg.VirtualView: void setOnLayout(boolean)
com.github.barteksc.pdfviewer.PDFView$State: com.github.barteksc.pdfviewer.PDFView$State[] values()
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isLocationEnabledSync()
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.shockwave.pdfium.PdfiumCore: android.graphics.RectF nativeGetLinkRect(long)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
com.google.android.gms.internal.measurement.zzgk: zzgk()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.henninghall.date_picker.pickers.AndroidNative: AndroidNative(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.facebook.react.bridge.DynamicFromMap: void recycle()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
cl.json.RNShareModule: RNShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.slider.ReactSliderManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
net.time4j.tz.model.LastWeekdayPattern: java.lang.Object writeReplace()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
org.wonday.pdf.PdfView: void setMaxScale(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.reactnativecommunity.viewpager.ReactViewPagerManager: void removeAllViews(androidx.viewpager2.widget.ViewPager2)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()
com.razorpay.CheckoutBridge: void getPdfString(java.lang.String,java.lang.String)
net.time4j.format.DisplayMode: net.time4j.format.DisplayMode[] values()
com.horcrux.svg.SVGLength: SVGLength()
com.learnium.RNDeviceInfo.RNDeviceModule: java.util.Map getConstants()
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
com.github.barteksc.pdfviewer.PDFView: void setLandscapeOrientation(boolean)
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.google.android.youtube.player.internal.aa: aa()
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
com.horcrux.svg.RenderableViewManager$SVGClass: com.horcrux.svg.RenderableViewManager$SVGClass[] values()
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$600(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.debug.DevSettingsModule)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.razorpay.CheckoutBridge: void invokePopup(java.lang.String)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void hasPermission(com.facebook.react.bridge.Promise)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing valueOf(java.lang.String)
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: BottomSheetBehavior$BottomSheetCallback()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.BV.LinearGradient.LinearGradientManager: LinearGradientManager()
androidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleNameNative()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(com.swmansion.rnscreens.Screen,java.lang.String)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getTmpDir(android.app.Activity)
net.time4j.TimeElement: java.lang.Object readResolve()
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)
com.facebook.imagepipeline.systrace.FrescoSystrace: FrescoSystrace()
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.henninghall.date_picker.DatePickerManager: com.facebook.react.uimanager.annotations.ReactPropGroup getMethodAnnotation(java.lang.String)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeStream(java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(com.swmansion.rnscreens.Screen,java.lang.String)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.LogRequest: LogRequest()
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: java.util.Map getCommandsMap()
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void initializeApp(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.google.firebase.crashlytics.ndk.CrashpadMain: CrashpadMain()
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.facebook.common.time.MonotonicClock: long now()
org.chromium.support_lib_boundary.ScriptReferenceBoundaryInterface: void remove()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.razorpay.CheckoutBridge: void onerror(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
com.reactnative.ivpusic.imagepicker.PickerModule: void openCamera(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getPowerStateFromIntent(android.content.Intent)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.swmansion.reanimated.NativeProxy$EventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoadedForMainFrameOnly(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
com.razorpay.rn.RazorpayModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.github.barteksc.pdfviewer.PDFView: void setDefaultPage(int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
net.time4j.tz.ZonalTransition: void readObject(java.io.ObjectInputStream)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbWidth(com.horcrux.svg.PatternView,float)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.brentvatne.react.ReactVideoViewManager: java.lang.String getName()
com.henninghall.date_picker.models.Mode: com.henninghall.date_picker.models.Mode[] values()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
com.henninghall.date_picker.models.Mode: com.henninghall.date_picker.models.Mode valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
com.facebook.react.fabric.FabricUIManager: void onHostResume()
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void unsubscribeFromTopic(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableView: void setStrokeLinejoin(int)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean access$000(com.reactnativecommunity.asyncstorage.AsyncStorageModule)
com.facebook.react.fabric.events.EventEmitterWrapper: EventEmitterWrapper()
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
com.horcrux.svg.MaskView: void setMaskContentUnits(int)
net.time4j.calendar.SolarTerm: net.time4j.calendar.SolarTerm[] values()
com.horcrux.svg.VirtualView: float getCanvasHeight()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
net.time4j.engine.FlagElement: net.time4j.engine.FlagElement[] values()
com.inprogress.reactnativeyoutube.YouTubeManager: com.inprogress.reactnativeyoutube.YouTubeView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
com.google.firebase.crashlytics.FirebaseCrashlytics: void sendUnsentReports()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.facebook.react.fabric.Binding: void uninstallFabricUIManager()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean access$502(com.learnium.RNDeviceInfo.RNDeviceModule,boolean)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.ViewGroup)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.oblador.vectoricons.VectorIconsModule: java.lang.String createGlyphImagePath(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.swmansion.reanimated.ReanimatedModule: void attachEvent(int,java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$hasPermission$7(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.reactlibrary.createthumbnail.CreateThumbnailModule: java.io.File access$000(java.lang.String)
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeUniqueEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.yoga.YogaConfigJNIBase: YogaConfigJNIBase()
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void recordErrorPromise(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
com.yqritc.scalablevideoview.ScalableVideoView: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)
androidx.recyclerview.widget.RecyclerView: void draw(android.graphics.Canvas)
com.reactnativecommunity.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMethod(com.horcrux.svg.TextView,java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
com.facebook.react.bridge.BackgroundExecutor: BackgroundExecutor()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void enableUploadProgressReport(java.lang.String,int,int)
com.facebook.react.TurboReactPackage: TurboReactPackage()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setOpacity(android.view.View,float)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
com.airbnb.lottie.LottieAnimationView: void setCompositionTask(com.airbnb.lottie.LottieTask)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: TurboModuleManager$TurboModuleHolder()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragment getFragment()
com.google.android.gms.internal.measurement.zzha: zzha()
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.airbnb.lottie.LottieAnimationView: void setImageResource(int)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$ImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.youtube.player.YouTubePlayer$PlayerStyle: com.google.android.youtube.player.YouTubePlayer$PlayerStyle[] values()
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1)
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] values()
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
com.rnfs.RNFSManager: void addListener(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
androidx.fragment.app.Fragment: Fragment()
okhttp3.Cache$Companion: Cache$Companion()
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.reactnativecommunity.slider.ReactSliderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.agontuk.RNFusedLocation.RNFusedLocationModule: void removeListeners(java.lang.Integer)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
com.horcrux.svg.RenderableViewManager: void setOpacity(com.horcrux.svg.VirtualView,float)
com.yalantis.ucrop.task.BitmapCropTask: boolean cropCImg(java.lang.String,java.lang.String,int,int,int,int,float,float,int,int,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void setModule(com.facebook.react.turbomodule.core.interfaces.TurboModule)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
androidx.recyclerview.widget.RecyclerView: int getChildAdapterPosition(android.view.View)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.inprogress.reactnativeyoutube.YouTubeManager: void receiveCommand(com.inprogress.reactnativeyoutube.YouTubeView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
com.google.android.gms.internal.measurement.zzkf: zzkf()
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidPromptForPlayServices()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide valueOf(java.lang.String)
cl.json.RNShareModule: java.lang.String getName()
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void animateNextTransition(int,com.facebook.react.bridge.ReadableMap)
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)
com.airbnb.lottie.LottieAnimationView: int getFrame()
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(com.reactnativecommunity.webview.RNCWebView)
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
com.facebook.react.uimanager.ReactShadowNodeImpl: ReactShadowNodeImpl()
com.horcrux.svg.RenderableViewManager$DefsViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
com.reactnativecommunity.viewpager.ReactViewPagerManager: void setCurrentItem(androidx.viewpager2.widget.ViewPager2,int,boolean)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.yalantis.ucrop.view.OverlayView: void setDimmedColor(int)
fr.greweb.reactnativeviewshot.RNViewShotModule: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: void cancelScroll()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
org.wonday.pdf.PdfManager: void onDropViewInstance(android.view.View)
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
androidx.recyclerview.widget.RecyclerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.facebook.react.ReactInstancePackage: ReactInstancePackage()
com.horcrux.svg.RenderableViewManager$TSpanViewManager: RenderableViewManager$TSpanViewManager()
com.google.firebase.crashlytics.FirebaseCrashlytics: com.google.android.gms.tasks.Task checkForUnsentReports()
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation getStackPresentation()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithExceptionMap(com.facebook.react.bridge.Promise,java.lang.Exception)
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheEnabled(com.reactnativecommunity.webview.RNCWebView,boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingEnabled(com.reactnativecommunity.webview.RNCWebView,boolean)
net.time4j.history.CalendarAlgorithm: net.time4j.history.CalendarAlgorithm[] values()
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeHandler(kotlin.jvm.functions.Function3)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
net.time4j.calendar.SolarTerm: net.time4j.calendar.SolarTerm valueOf(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.recyclerview.widget.RecyclerView: void requestLayout()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.swmansion.rnscreens.SearchBarView: void setShouldShowHintSearchIcon(boolean)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setOpacity(android.view.View,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: boolean needsCustomLayoutForChildren()
com.BV.LinearGradient.LinearGradientManager: java.lang.String getName()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHidden(boolean)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getJavaModule(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void setD(com.horcrux.svg.PathView,java.lang.String)
com.google.firebase.crashlytics.ndk.CrashlyticsNdkRegistrar: CrashlyticsNdkRegistrar()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: NativeJSCSamplingProfilerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.brentvatne.react.ReactVideoView: void setPausedModifier(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.google.firebase.installations.remote.InstallationResponse: InstallationResponse()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.agontuk.RNFusedLocation.RNFusedLocationModule: void onNewIntent(android.content.Intent)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.transition.TransitionValues: TransitionValues()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event: CrashlyticsReport$Session$Event()
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
com.google.android.material.chip.Chip: float getIconEndPadding()
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSide(com.horcrux.svg.TextPathView,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setMinValue(int)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.facebook.react.fabric.CoreComponentsRegistry: CoreComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$setDeliveryMetricsExportToBigQuery$12(java.lang.Boolean)
com.horcrux.svg.SvgView: void setTintColor(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableView getRenderableViewByTag(int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalDiskCapacity(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
net.time4j.tz.OffsetSign: net.time4j.tz.OffsetSign[] values()
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean isCreatingModule()
com.BV.LinearGradient.LinearGradientManager: void setAngle(com.BV.LinearGradient.LinearGradientView,float)
net.time4j.calendar.SexagesimalName$Stem: net.time4j.calendar.SexagesimalName$Stem[] values()
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setHintTextTypeface(android.graphics.Typeface)
com.inprogress.reactnativeyoutube.YouTubeView: void setResumePlay(boolean)
org.wonday.pdf.PdfManager: void setEnableAntialiasing(org.wonday.pdf.PdfView,boolean)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void crash()
com.swmansion.rnscreens.SearchBarManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
com.swmansion.reanimated.CopiedEvent$1: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.yalantis.ucrop.view.TransformImageView: com.yalantis.ucrop.model.ExifInfo getExifInfo()
com.horcrux.svg.LinearGradientView: void setGradient(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.UIManager: void preInitializeViewManagers(java.util.List)
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.facebook.react.uimanager.ReanimatedUIManager: void measure(int,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.SurfaceHandlerBinding: void setSurfaceIdNative(int)
com.razorpay.CheckoutBridge: void setPaymentID(java.lang.String)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void copyToMediaStore(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeBugReportingSpec: void setCategoryID(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String)
com.horcrux.svg.UseView: void setHeight(com.facebook.react.bridge.Dynamic)
com.dylanvann.fastimage.FastImageViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.reactnativecommunity.viewpager.ViewPagerFragment: ViewPagerFragment()
com.razorpay.rn.RazorpayModule: void onNewIntent(android.content.Intent)
com.facebook.react.uimanager.ReanimatedUIManager: void clearJSResponder()
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReanimatedUIManager: void onBatchComplete()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.config.ReactFeatureFlags: ReactFeatureFlags()
com.facebook.react.bridge.JavaScriptExecutor: void close()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerLeave(boolean)
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void smoothScrollToPosition(int)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunningNative()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
com.shockwave.pdfium.PdfiumCore: long nativeOpenDocument(int,java.lang.String)
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
io.invertase.firebase.app.ReactNativeFirebaseAppInitProvider: ReactNativeFirebaseAppInitProvider()
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(android.view.View,boolean)
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType valueOf(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: ReanimatedUIManager(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void setAutomaticDataCollectionEnabled(java.lang.String,java.lang.Boolean)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.google.android.gms.internal.measurement.zzek: zzek()
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
com.horcrux.svg.LinearGradientView: void setY1(com.facebook.react.bridge.Dynamic)
com.henninghall.date_picker.pickers.IosClone: IosClone(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.MarkerView: void setRefX(com.facebook.react.bridge.Dynamic)
com.google.android.material.theme.MaterialComponentsViewInflater: boolean shouldInflateAppCompatButton(android.content.Context,android.util.AttributeSet)
net.time4j.engine.TimePoint: TimePoint()
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.horcrux.svg.CircleView: void setCy(com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
com.reactnativecommunity.netinfo.types.CellularGeneration: com.reactnativecommunity.netinfo.types.CellularGeneration valueOf(java.lang.String)
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
okhttp3.Headers$Companion: Headers$Companion()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.airbnb.lottie.LottieAnimationView: void setOutlineMasksAndMattes(boolean)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: GroupedLinkedMap$LinkedEntry()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(android.view.View,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBaseOsSync()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: RNAndroidLocationEnablerModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
cn.carbswang.android.numberpickerview.library.NumberPickerView: java.lang.String getContentByCurrValue()
com.horcrux.svg.RNSVGRenderableManager: float getTotalLength(int)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.LottieAnimationView: float getProgress()
com.facebook.react.turbomodule.core.TurboModuleManager: void maybeLoadSoLibrary()
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzcf)
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStack createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.ReanimatedModule: void removeListeners(java.lang.Integer)
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
org.wonday.pdf.PdfManager: void onAfterUpdateTransaction(org.wonday.pdf.PdfView)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$200(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.bridge.queue.NativeRunnable: void run()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
net.time4j.calendar.KoreanCalendar$SPX: KoreanCalendar$SPX()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
net.time4j.ClockUnit: net.time4j.ClockUnit[] values()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.horcrux.svg.SvgViewManager: void setSvgView(int,com.horcrux.svg.SvgView)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(android.view.View,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
com.reactnative.ivpusic.imagepicker.PickerModule: void setConfiguration(com.facebook.react.bridge.ReadableMap)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.facebook.react.bridge.ReactSoftExceptionLogger: void addListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
com.razorpay.CheckoutBridge: void onsubmit(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
org.wonday.pdf.PdfManager: void setEnablePaging(android.view.View,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
com.facebook.react.bridge.ReactBridge: ReactBridge()
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
androidx.work.ListenableWorker$Result: ListenableWorker$Result()
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.yqritc.scalablevideoview.ScalableVideoView: void setDataSource(android.content.res.AssetFileDescriptor)
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
com.facebook.react.devsupport.LogBoxModule: java.lang.String getName()
net.time4j.format.expert.PatternType: net.time4j.format.expert.PatternType[] values()
com.google.android.material.chip.Chip: float getIconStartPadding()
com.facebook.react.modules.vibration.VibrationModule: void cancel()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.airbnb.android.react.lottie.LottieAnimationViewManager: com.airbnb.lottie.LottieAnimationView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void checkForUnsentReports(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ReanimatedUIManager: void removeRootView(int)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.reactnativecommunity.webview.RNCWebViewManager: void setDownloadingMessage(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.swmansion.rnscreens.Screen: void setContainer(com.swmansion.rnscreens.ScreenContainer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.facebook.react.modules.core.TimingModule: void invalidate()
androidx.viewpager2.widget.ViewPager2: int getPageSize()
androidx.recyclerview.widget.RecyclerView: void clearOnChildAttachStateChangeListeners()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: HardwareConfigState()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
com.swmansion.reanimated.nodes.Node: java.lang.Double doubleValue()
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
com.horcrux.svg.RectView: void setX(com.facebook.react.bridge.Dynamic)
androidx.work.WorkManagerInitializer: WorkManagerInitializer()
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void setUserId(java.lang.String,com.facebook.react.bridge.Promise)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.google.android.material.chip.Chip: float getChipIconSize()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setShownCount(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.github.barteksc.pdfviewer.PDFView: void setDualPageMode(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
net.time4j.WeekdayInMonthElement: java.lang.Object readResolve()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.yqritc.scalablevideoview.PivotPoint: com.yqritc.scalablevideoview.PivotPoint valueOf(java.lang.String)
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String getName()
com.facebook.react.bridge.BaseJavaModule: void initialize()
net.time4j.engine.ValidationElement: net.time4j.engine.ValidationElement[] values()
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.WritableMap getImage(android.app.Activity,java.lang.String)
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()
com.horcrux.svg.ImageView: void setWidth(com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
com.swmansion.rnscreens.ScreenContainer: int getScreenCount()
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void deleteUnsentReports()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)
com.reactnativecommunity.slider.ReactSlider: void setMaxValue(double)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.nodes.EventNode: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setOnValueChangedListenerRelativeToRaw(cn.carbswang.android.numberpickerview.library.NumberPickerView$OnValueChangeListenerRelativeToRaw)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(android.view.View,boolean)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradient(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type getType()
com.learnium.RNDeviceInfo.RNDeviceModule: void initialize()
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.reactnativecommunity.netinfo.types.ConnectionType: com.reactnativecommunity.netinfo.types.ConnectionType valueOf(java.lang.String)
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.ReanimatedUIManager: boolean canOverrideExistingModule()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.webview.RNCWebView: android.webkit.WebChromeClient getWebChromeClient()
com.henninghall.date_picker.DatePickerModule: void addListener(java.lang.String)
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
com.reactnativerestart.RestartModule: com.facebook.react.ReactInstanceManager resolveInstanceManager()
net.time4j.tz.model.RuleBasedTransitionModel: void readObject(java.io.ObjectInputStream)
com.horcrux.svg.VirtualView: android.graphics.RectF getClientRect()
com.yalantis.ucrop.view.TransformImageView: void setImageMatrix(android.graphics.Matrix)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstanceIdSync()
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$CustomAttribute: CrashlyticsReport$CustomAttribute()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(android.view.View,boolean)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
com.horcrux.svg.RenderableViewManager: void setMarkerStart(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.razorpay.rn.RazorpayModule: void open(com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher access$000(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.Map getConstants()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.facebook.react.bridge.NativeModule: java.lang.String getName()
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
net.time4j.format.Leniency: net.time4j.format.Leniency valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.henninghall.date_picker.DatePickerManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.razorpay.RzpTokenReceiver: RzpTokenReceiver()
org.wonday.pdf.PdfManager: void setMinScale(org.wonday.pdf.PdfView,float)
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
com.airbnb.lottie.LottieAnimationView: void setFrame(int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onHandlerUpdate(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
androidx.work.ListenableWorker$Result$Failure: ListenableWorker$Result$Failure()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.learnium.RNDeviceInfo.RNDeviceModule: void getFirstInstallTime(com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.react.fabric.FabricUIManager: void profileNextBatch()
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
com.google.android.datatransport.cct.internal.BatchedLogRequest: BatchedLogRequest()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
io.invertase.firebase.common.ReactNativeFirebaseModule: void initialize()
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
com.google.android.gms.internal.measurement.zzbn: android.os.IBinder asBinder()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$setAutoInitEnabled$1(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
org.wonday.pdf.PdfManager: void setHorizontal(android.view.View,boolean)
com.swmansion.gesturehandler.core.FlingGestureHandler: FlingGestureHandler()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBuildIdSync()
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap access$300(okhttp3.Headers)
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
net.time4j.format.expert.SignPolicy: net.time4j.format.expert.SignPolicy valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(android.view.View,boolean)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onStateChange(com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.shockwave.pdfium.PdfiumCore: long nativeLoadPage(long,int)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReadableMap getInspectorDataForInstance(int,android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.recyclerview.widget.RecyclerView: void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(android.view.View,java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.learnium.RNDeviceInfo.RNDeviceModule: void getApiLevel(com.facebook.react.bridge.Promise)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.github.barteksc.pdfviewer.PDFView: float getPositionOffset()
com.google.android.gms.internal.measurement.zzfc: zzfc()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTintColor(int)
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode[] values()
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHintTextColor()
androidx.recyclerview.widget.RecyclerView: void saveFocusInfo()
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
net.time4j.tz.TransitionResolver: void readObject(java.io.ObjectInputStream)
com.horcrux.svg.UseView: void setX(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
net.time4j.Month: net.time4j.Month valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void clear(com.facebook.react.bridge.Callback)
com.facebook.react.turbomodule.core.TurboModuleManager$2: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.rnfs.Uploader: Uploader()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation getStackAnimation()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: void endCreatingModule()
com.reactnativecommunity.webview.RNCWebViewManager: void setMediaPlaybackRequiresUserAction(com.reactnativecommunity.webview.RNCWebView,boolean)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.github.barteksc.pdfviewer.PDFView: com.github.barteksc.pdfviewer.scroll.ScrollHandle getScrollHandle()
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.slider.ReactSlider: void setMinValue(double)
com.yalantis.ucrop.view.OverlayView: int getFreestyleCropMode()
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
com.airbnb.lottie.LottieAnimationView: void setImageAssetDelegate(com.airbnb.lottie.ImageAssetDelegate)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
com.facebook.react.fabric.FabricUIManager: void onCatalystInstanceDestroy()
com.reactnativecommunity.webview.RNCWebView: void setSendContentSizeChangeEvents(boolean)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: void play(android.content.Intent,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
com.razorpay.RzpAssist: void copyToClipboard(java.lang.String)
com.dylanvann.fastimage.FastImageViewModule: void clearMemoryCache(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
org.wonday.pdf.PdfManager: void receiveCommand(org.wonday.pdf.PdfView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.ReactRawTextShadowNode: ReactRawTextShadowNode()
com.learnium.RNDeviceInfo.RNDeviceModule: void getBuildId(com.facebook.react.bridge.Promise)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.razorpay.CheckoutBridge: void ondismiss()
fr.greweb.reactnativeviewshot.RNViewShotModule: RNViewShotModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.facebook.jni.HybridData$Destructor: void destruct()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.reactnativecommunity.webview.RNCWebView: com.reactnativecommunity.webview.RNCWebViewClient getRNCWebViewClient()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(android.view.View,boolean)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
org.wonday.pdf.PdfManager: void setSpacing(android.view.View,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: ReactBaseTextShadowNode()
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.razorpay.rn.RazorpayModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
androidx.recyclerview.widget.RecyclerView: void markKnownViewsInvalid()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.facebook.react.fabric.FabricUIManager: void onHostPause()
com.horcrux.svg.RenderableViewManager: java.lang.String getName()
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.google.android.datatransport.Event: Event()
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.dylanvann.fastimage.FastImageViewManager: void onAfterUpdateTransaction(android.view.View)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsGetListeners(com.facebook.react.bridge.Promise)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl,com.facebook.react.bridge.CatalystInstanceImpl$1)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] values()
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.rnfs.RNFSManager: void moveFile(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.github.barteksc.pdfviewer.PDFView: void setPageFling(boolean)
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.yalantis.ucrop.view.UCropView: com.yalantis.ucrop.view.OverlayView getOverlayView()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean runOnQueue(java.lang.Runnable)
com.facebook.react.bridge.JavaJSExecutor: void close()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcf)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
com.learnium.RNDeviceInfo.RNDeviceModule: double getUsedMemorySync()
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.swmansion.rnscreens.Screen: void setStatusBarStyle(java.lang.String)
com.google.android.material.ripple.RippleUtils: RippleUtils()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.xogus.reactnative.versioncheck.RNVersionCheckModule: java.lang.String getName()
com.horcrux.svg.SvgView: void setBbWidth(com.facebook.react.bridge.Dynamic)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
com.horcrux.svg.SvgViewManager: void setMinY(com.horcrux.svg.SvgView,float)
com.airbnb.lottie.model.content.MergePaths$MergePathsMode: com.airbnb.lottie.model.content.MergePaths$MergePathsMode valueOf(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.rnfs.RNFSManager: void sendEvent(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap access$000(com.learnium.RNDeviceInfo.RNDeviceModule,android.content.Intent)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setInlineSize(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$UseViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.RenderableViewManager: void onDropViewInstance(com.horcrux.svg.VirtualView)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.inprogress.reactnativeyoutube.YouTubeModule: void getVideosIndex(int,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
com.github.barteksc.pdfviewer.util.SnapEdge: com.github.barteksc.pdfviewer.util.SnapEdge valueOf(java.lang.String)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.webview.RNCWebViewModule: void startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.RectView: void setHeight(com.facebook.react.bridge.Dynamic)
net.time4j.Moment$IntElement: net.time4j.Moment$IntElement[] values()
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.facebook.react.devsupport.JSDevSupport: void onFailure(double,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void access$300(androidx.recyclerview.widget.RecyclerView,int,int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logNoThrowSoftExceptionWithMessage(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
com.facebook.react.views.slider.ReactSliderManager: void setStep(android.view.View,double)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getName()
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger access$600(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
com.google.android.material.button.MaterialButton: int getIconGravity()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void getSDCardApplicationDir(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.google.android.gms.internal.measurement.zzjm: zzjm()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void setGestureHandlerState(int,int)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.airbnb.lottie.LottieAnimationView$UserActionTaken: com.airbnb.lottie.LottieAnimationView$UserActionTaken valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
okhttp3.Request$Builder: Request$Builder()
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
com.shockwave.pdfium.PdfiumCore: java.lang.Integer nativeGetDestPageIndex(long,long)
com.rnfs.RNFSManager: void stopUpload(int)
com.airbnb.lottie.LottieAnimationView: void setRenderMode(com.airbnb.lottie.RenderMode)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.reactnativecommunity.webview.RNCWebViewManager: void setSetSupportMultipleWindows(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.react.modules.core.TimingModule: void initialize()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setOverflowIcon(com.reactnativecommunity.toolbarandroid.ReactToolbar,com.facebook.react.bridge.ReadableMap)
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$RequestType: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$RequestType[] values()
com.rnfs.RNFSManager: void copyFileRes(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
net.time4j.format.PluralRules: PluralRules()
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
org.wonday.pdf.PdfManager: void setSinglePage(android.view.View,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
com.rnfs.RNFSManager: void writeFile(java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(android.view.View,com.facebook.react.bridge.ReadableMap)
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasSystemFeatureSync(java.lang.String)
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void unregisterRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String getName()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
net.time4j.tz.FallbackTimezone: void readObject(java.io.ObjectInputStream)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
com.razorpay.t: java.lang.String getString(java.lang.String)
com.reactlibrary.createthumbnail.CreateThumbnailModule: long access$200(java.io.File)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.Bitmap)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void recycleQuietly(android.content.res.TypedArray)
com.reactnativecommunity.slider.ReactSliderManager: void setAccessibilityIncrements(com.reactnativecommunity.slider.ReactSlider,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(com.horcrux.svg.TextPathView,java.lang.String)
org.wonday.pdf.PdfManager: void setNativePage(org.wonday.pdf.PdfView,int)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.ReadableMap access$500(com.reactnative.ivpusic.imagepicker.PickerModule)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSystemManufacturerSync()
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.youtube.player.YouTubePlayerView: void setClipToPadding(boolean)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode()
androidx.recyclerview.widget.RecyclerView: android.view.View findChildViewUnder(float,float)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(android.view.View,boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.text.ReactTextShadowNode: ReactTextShadowNode()
com.dylanvann.fastimage.FastImageCacheControl: com.dylanvann.fastimage.FastImageCacheControl valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State)
com.horcrux.svg.RenderableViewManager$UseViewManager: RenderableViewManager$UseViewManager()
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
com.reactlibrary.createthumbnail.CreateThumbnailModule: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: boolean access$400(com.facebook.react.fabric.FabricUIManager)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: java.util.Map getExportedViewConstants()
net.time4j.history.HistoricEra: net.time4j.history.HistoricEra[] values()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.ViewGroup,int)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStack)
com.yalantis.ucrop.view.OverlayView: void setCropGridColor(int)
com.facebook.react.bridge.NativeMap: java.lang.String toString()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats access$000(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setOpacity(android.view.View,float)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setContentInsetStart(com.reactnativecommunity.toolbarandroid.ReactToolbar,float)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseLegacyStretchBehaviourJNI(long,boolean)
com.google.firebase.crashlytics.CrashlyticsRegistrar: CrashlyticsRegistrar()
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinX(com.horcrux.svg.PatternView,float)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void closeStream(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.yalantis.ucrop.view.OverlayView: void setTargetAspectRatio(float)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbHeight(com.horcrux.svg.PatternView,float)
com.google.android.datatransport.runtime.backends.BackendRequest: BackendRequest()
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void lstat(java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
androidx.recyclerview.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
androidx.viewpager2.widget.ViewPager2: int getScrollState()
com.horcrux.svg.RenderableViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.webview.RNCWebViewModule: boolean startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String[],boolean,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.henninghall.date_picker.DatePickerManager: void updateProp(java.lang.String,com.henninghall.date_picker.PickerView,int,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
com.swmansion.reanimated.NativeProxy$KeyboardEventDataUpdater: NativeProxy$KeyboardEventDataUpdater(com.facebook.jni.HybridData)
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setOnValueChangedListener(cn.carbswang.android.numberpickerview.library.NumberPickerView$OnValueChangeListener)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onTouchEvent(com.swmansion.gesturehandler.core.GestureHandler)
com.reactnativecommunity.webview.RNCWebView: com.facebook.react.uimanager.ThemedReactContext getThemedReactContext()
com.horcrux.svg.RenderableViewManager$LineViewManager: RenderableViewManager$LineViewManager()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
okhttp3.CipherSuite$Companion: CipherSuite$Companion()
com.horcrux.svg.RenderableView: void setStrokeOpacity(float)
com.google.android.gms.internal.measurement.zzgb: zzgb()
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
com.swmansion.reanimated.CopiedEvent$1: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
com.swmansion.rnscreens.SearchBarView: void setAutoFocus(boolean)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: boolean isLocationProviderEnabled()
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
com.agontuk.RNFusedLocation.RNFusedLocationModule: void onLocationChange(com.agontuk.RNFusedLocation.LocationProvider,android.location.Location)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
net.time4j.engine.TimeSpan$Item: void readObject(java.io.ObjectInputStream)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
io.invertase.firebase.common.ReactNativeFirebaseModule: void removeEventListeningExecutor(java.lang.String)
org.reactnative.maskedview.RNCMaskedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview,java.lang.String)
com.yqritc.scalablevideoview.ScalableType: com.yqritc.scalablevideoview.ScalableType[] values()
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.github.barteksc.pdfviewer.PDFView: void setPositionOffset(float)
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
net.time4j.Month: net.time4j.Month[] values()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
com.horcrux.svg.MarkerView: void setMarkerWidth(com.facebook.react.bridge.Dynamic)
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(android.view.View,boolean)
com.facebook.react.modules.network.NetworkingModule: void initialize()
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setHintTextColor(int)
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(com.swmansion.rnscreens.Screen,int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
com.reactnativecommunity.viewpager.ReactViewPagerManager: int getChildCount(androidx.viewpager2.widget.ViewPager2)
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getUniqueIdSync()
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
com.facebook.react.uimanager.LayoutShadowNode: LayoutShadowNode()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.android.datatransport.runtime.backends.BackendResponse: BackendResponse()
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.horcrux.svg.TextPathView: void setSharp(java.lang.String)
com.github.barteksc.pdfviewer.PDFView: java.util.List getTableOfContents()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$sendMessage$8(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.fabric.Binding: void driveCxxAnimations()
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.horcrux.svg.LinearGradientView: void setY2(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.fabric.Binding: void setPixelDensity(float)
com.reactnativecommunity.geolocation.GeolocationModule: com.facebook.react.bridge.WritableMap access$000(android.location.Location)
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: int[] getDefaultContentInsets(android.content.Context)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.util.Map getConstants()
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void sendUnsentReports()
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.dylanvann.fastimage.FastImageViewManager: void onDropViewInstance(com.dylanvann.fastimage.FastImageViewWithUrl)
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: DefaultNativeModuleCallExceptionHandler()
com.reactnativecommunity.viewpager.ReactViewPagerManager: void removeViewAt(androidx.viewpager2.widget.ViewPager2,int)
com.facebook.drawee.view.SimpleDraweeView: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)
androidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.facebook.react.uimanager.ReanimatedUIManager: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
com.facebook.react.fabric.Binding: void stopSurface(int)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions()
com.reactnativecommunity.slider.ReactSlider: double getStepValue()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
com.th3rdwave.safeareacontext.SafeAreaViewEdges: com.th3rdwave.safeareacontext.SafeAreaViewEdges valueOf(java.lang.String)
com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
net.time4j.CalendarUnit: net.time4j.CalendarUnit[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
com.google.android.gms.internal.measurement.zzcb: zzcb()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.facebook.react.config.ReactFeatureFlags: boolean doesUseOverflowInset()
net.time4j.engine.FlagElement: net.time4j.engine.FlagElement valueOf(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(android.view.View,java.lang.String)
net.time4j.history.internal.StdHistoricalElement: java.lang.Object readResolve()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
net.time4j.calendar.astro.AstronomicalSeason: net.time4j.calendar.astro.AstronomicalSeason valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzjx: com.google.android.gms.internal.measurement.zzjx[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.toolbarandroid.ReactToolbar)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: SchedulerConfig()
org.wonday.pdf.PdfManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.youtube.player.YouTubePlayer$ErrorReason: com.google.android.youtube.player.YouTubePlayer$ErrorReason valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.reactnativecommunity.geolocation.GeolocationModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.reactnativecommunity.geolocation.GeolocationModule)
com.horcrux.svg.EllipseView: void setRx(com.facebook.react.bridge.Dynamic)
com.razorpay.CheckoutBridge: void unregisterSmsListener()
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheMode(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void onDropViewInstance(android.view.View)
com.reactnativecommunity.slider.ReactSlider: void setAccessibilityUnits(java.lang.String)
com.google.android.gms.internal.measurement.zzgd: zzgd()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Log: CrashlyticsReport$Session$Event$Log()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
org.wonday.pdf.PdfManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.gson.JsonObject: JsonObject()
com.yalantis.ucrop.view.TransformImageView: java.lang.String getImageInputPath()
com.agontuk.RNFusedLocation.RNFusedLocationModule: void emitEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: android.util.SparseArray access$000()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
org.wonday.pdf.PdfManager: void setFitPolicy(org.wonday.pdf.PdfView,int)
com.facebook.jni.CppSystemErrorException: int getErrorCode()
com.horcrux.svg.LinearGradientView: void setX2(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$000(com.facebook.react.modules.debug.DevSettingsModule)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFont(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
net.time4j.engine.BasicUnit: BasicUnit()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.horcrux.svg.SvgView: void setId(int)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
com.dylanvann.fastimage.FastImageViewManager: void onAfterUpdateTransaction(com.dylanvann.fastimage.FastImageViewWithUrl)
com.facebook.react.bridge.CatalystInstanceImpl: void access$000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(com.reactnativecommunity.webview.RNCWebView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradient(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBackgroundColor(int)
com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModuleImpl$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState valueOf(java.lang.String)
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension valueOf(java.lang.String)
com.airbnb.lottie.LottieAnimationView: boolean getMaintainOriginalImageBounds()
com.horcrux.svg.MarkerView: void setVbHeight(float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.google.android.material.chip.Chip: void setChecked(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.Screen: void setStackAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
kotlin.collections.IntIterator: IntIterator()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isAirplaneModeSync()
com.inprogress.reactnativeyoutube.YouTubeManager: void setPropVideoIds(com.inprogress.reactnativeyoutube.YouTubeView,com.facebook.react.bridge.ReadableArray)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType[] values()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$deleteToken$4(com.google.firebase.messaging.FirebaseMessaging)
com.horcrux.svg.TextPathView: void setStartOffset(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: SchedulerConfig$ConfigValue()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void createFile(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToAlignment(int)
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalMemorySync()
net.time4j.tz.model.SPX: void readExternal(java.io.ObjectInput)
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
com.horcrux.svg.SvgViewModule: SvgViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig[] values()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.facebook.soloader.SoLoader$Api14Utils: SoLoader$Api14Utils()
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMeetOrSlice(com.horcrux.svg.ImageView,int)
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
com.horcrux.svg.RenderableViewManager$RectViewManager: RenderableViewManager$RectViewManager()
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.horcrux.svg.MarkerView: void setOrient(java.lang.String)
com.shockwave.pdfium.PdfiumCore: void nativeRenderPageBitmap(long,android.graphics.Bitmap,int,int,int,int,int,boolean)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData access$1000(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.viewpager2.widget.ViewPager2: int getCurrentItem()
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setTextAlign(android.graphics.Paint$Align)
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzaw: zzaw()
com.airbnb.lottie.LottieAnimationView$UserActionTaken: com.airbnb.lottie.LottieAnimationView$UserActionTaken[] values()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.yqritc.scalablevideoview.PivotPoint: com.yqritc.scalablevideoview.PivotPoint[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String getOverflow()
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEventFromJS(int,int,java.lang.String)
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.facebook.jni.CppException: CppException(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.github.barteksc.pdfviewer.PDFView$ScrollDir: com.github.barteksc.pdfviewer.PDFView$ScrollDir[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
com.horcrux.svg.SvgViewManager: void setColor(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
kotlinx.coroutines.scheduling.Task: Task()
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.shockwave.pdfium.PdfiumCore: android.graphics.Point nativePageCoordsToDevice(long,int,int,int,int,int,double,double)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
com.facebook.react.views.text.ReactVirtualTextShadowNode: ReactVirtualTextShadowNode()
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(android.view.View,float)
org.wonday.pdf.PdfView: void setEnableAntialiasing(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
com.inprogress.reactnativeyoutube.YouTubeManager: void setPropPlay(com.inprogress.reactnativeyoutube.YouTubeView,boolean)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactEditText: void setBlurOnSubmit(java.lang.Boolean)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
com.swmansion.reanimated.ReanimatedModule: void detachEvent(int,java.lang.String,int)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setSubtitle(com.reactnativecommunity.toolbarandroid.ReactToolbar,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.animated.NativeAnimatedModule: void executeAllOperations(java.util.Queue,long)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleRadius()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isCameraPresentSync()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.recyclerview.widget.RecyclerView: void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalMemory(com.facebook.react.bridge.Promise)
com.reactnativecommunity.webview.RNCWebViewModule: void isFileUploadSupported(com.facebook.react.bridge.Promise)
net.time4j.format.PluralCategory: net.time4j.format.PluralCategory[] values()
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.henninghall.date_picker.DatePickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
com.horcrux.svg.ImageView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(android.view.View,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzcf)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getTextRoot()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseBorderlessDrawable()
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$100(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
androidx.fragment.app.DialogFragment: DialogFragment()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.facebook.react.bridge.ReadableArray: int getInt(int)
net.time4j.engine.CalendarVariant: CalendarVariant()
net.time4j.history.internal.HistoricVariant: net.time4j.history.internal.HistoricVariant[] values()
org.reactnative.maskedview.RNCMaskedViewManager: void setAndroidRenderingMode(org.reactnative.maskedview.RNCMaskedView,java.lang.String)
com.reactnativecommunity.slider.ReactSliderManager: void setMinimumValue(com.reactnativecommunity.slider.ReactSlider,float)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
com.horcrux.svg.RenderableViewManager: void setRenderableView(int,com.horcrux.svg.RenderableView)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
net.time4j.engine.EpochDays: net.time4j.engine.EpochDays valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
com.google.android.gms.internal.measurement.zzfh: zzfh()
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(java.util.EnumSet)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.facebook.react.modules.storage.AsyncStorageModule: void invalidate()
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHeaderIconColor()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
com.horcrux.svg.SvgView: void setMinY(float)
net.time4j.calendar.CommonElements$DayOfWeekElement: java.lang.Object readResolve()
com.bumptech.glide.GlideBuilder$LogRequestOrigins: GlideBuilder$LogRequestOrigins()
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] values()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.yalantis.ucrop.view.widget.AspectRatioTextView: AspectRatioTextView(android.content.Context,android.util.AttributeSet)
com.reactnativerestart.RestartModule: RestartModule(com.facebook.react.bridge.ReactApplicationContext)
com.rnfs.RNFSManager: void getFSInfo(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void invalidateItemDecorations()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setRenderMode(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
com.facebook.react.devsupport.LogBoxModule: void hide()
com.yalantis.ucrop.view.GestureCropImageView: void setScaleEnabled(boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
net.time4j.tz.model.FixedDayPattern: java.lang.Object writeReplace()
com.swmansion.rnscreens.ScreenStackHeaderConfig: android.widget.TextView getTitleTextView()
com.razorpay.RzpAssist: void openKeyboard()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
com.razorpay.t: float getFloat(java.lang.String)
com.inprogress.reactnativeyoutube.YouTubeManager: java.util.Map getCommandsMap()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: boolean install()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
io.invertase.firebase.common.ReactNativeFirebaseModule: com.facebook.react.bridge.ReactContext getContext()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstallerPackageNameSync()
com.horcrux.svg.RenderableViewManager: void setMask(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.LinearGradientView: void setGradientTransform(com.facebook.react.bridge.ReadableArray)
com.ReactNativeBlobUtil.ReactNativeBlobUtilMediaCollection: ReactNativeBlobUtilMediaCollection()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
net.time4j.format.OutputContext: net.time4j.format.OutputContext valueOf(java.lang.String)
com.henninghall.date_picker.DatePickerModule: int getTheme(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingReceiver: ReactNativeFirebaseMessagingReceiver()
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: java.lang.String getName()
com.swmansion.rnscreens.Screen: void setNativeBackButtonDismissalEnabled(boolean)
com.reactnativecommunity.slider.ReactSlider: void setupAccessibility(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
okio.AsyncTimeout: AsyncTimeout()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager()
com.horcrux.svg.MaskView: void setY(com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.shockwave.pdfium.PdfiumCore: long[] nativeGetPageLinks(long)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: ReactNativeFirebaseCrashlyticsModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void onAfterUpdateTransaction(android.view.View)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
com.google.android.gms.internal.measurement.zzgm: zzgm()
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void clearOnScrollListeners()
com.inprogress.reactnativeyoutube.YouTubeManager: void setPropShowFullscreenButton(com.inprogress.reactnativeyoutube.YouTubeView,boolean)
com.facebook.react.bridge.ReactContext: void setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalDiskCapacityOld(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.horcrux.svg.SymbolView: void setMinX(float)
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
net.time4j.format.Attributes: Attributes()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.dylanvann.fastimage.FastImageCacheControl: com.dylanvann.fastimage.FastImageCacheControl[] values()
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlagJNI(long,boolean)
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder()
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle[] values()
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: void promptForEnableLocationIfNeeded(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getPointAtLength(int,com.facebook.react.bridge.ReadableMap)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
net.time4j.format.Leniency: net.time4j.format.Leniency[] values()
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.facebook.react.bridge.NativeModuleCallExceptionHandler: void handleException(java.lang.Exception)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.facebook.drawee.backends.pipeline.info.ImagePerfState: ImagePerfState()
com.reactnativecommunity.slider.ReactSliderManager: void setUpperLimit(com.reactnativecommunity.slider.ReactSlider,float)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.modules.network.NetworkingModule: java.util.List access$400(com.facebook.react.modules.network.NetworkingModule)
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.reactnativecommunity.slider.ReactSlider: void setValue(double)
com.razorpay.rn.RazorpayModule: void onExternalWalletSelected(java.lang.String,com.razorpay.PaymentData)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.LazyReactPackage: LazyReactPackage()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setTouched(boolean)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep3()
com.learnium.RNDeviceInfo.RNDeviceModule: double getFreeDiskStorageSync()
com.swmansion.reanimated.ReanimatedModule: void connectNodeToView(int,int)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.shockwave.pdfium.PdfiumCore: java.lang.Long nativeGetSiblingBookmark(long,long)
com.facebook.react.fabric.FabricUIManager: void stopSurface(com.facebook.react.fabric.SurfaceHandler)
com.agontuk.RNFusedLocation.RNFusedLocationModule: com.agontuk.RNFusedLocation.LocationProvider createLocationProvider(boolean)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: void androidResolutionForPlayServices()
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: java.util.Map getConstants()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.ReanimatedUIManager: void setLayoutAnimationEnabledExperimental(boolean)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer getContainer()
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getHardwareSync()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
com.swmansion.reanimated.ReanimatedModule: void addListener(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
fr.greweb.reactnativeviewshot.RNViewShotModule: void captureRef(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: double getMaxMemorySync()
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
com.razorpay.CheckoutBridge: boolean isUserRegistered(java.lang.String)
com.reactnativecommunity.viewpager.ReactViewPagerManager: void setPageMargin(androidx.viewpager2.widget.ViewPager2,float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.common.references.OOMSoftReference: OOMSoftReference()
com.agontuk.RNFusedLocation.RNFusedLocationModule: void addListener(java.lang.String)
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid(boolean,boolean)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void addCompleteDownload(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.yalantis.ucrop.view.OverlayView: void setCircleDimmedLayer(boolean)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.jni.HybridData: HybridData()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDeltaX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
com.learnium.RNDeviceInfo.RNDeviceModule: void getCarrier(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(android.view.View,float)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
com.swmansion.rnscreens.CustomSearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.horcrux.svg.EllipseView: void setRy(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.airbnb.lottie.LottieAnimationView: void setClipToCompositionBounds(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.fabric.FabricUIManager: void updateRootLayoutSpecs(int,int,int,int,int)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void setAutoInitEnabled(java.lang.Boolean,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.FabricUIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
cn.carbswang.android.numberpickerview.library.NumberPickerView: int getMaxValue()
com.facebook.react.views.slider.ReactSliderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.inprogress.reactnativeyoutube.YouTubeView: void setPlay(boolean)
com.airbnb.lottie.value.ScaleXY: ScaleXY()
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.swmansion.reanimated.nodes.TransformNode$TransformConfig: TransformNode$TransformConfig()
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.facebook.react.modules.core.TimingModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule)
com.swmansion.reanimated.NativeProxy: void updateProps(int,java.util.Map)
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
com.facebook.react.views.slider.ReactSliderManager: void setDisabled(android.view.View,boolean)
org.devio.rn.splashscreen.SplashScreenModule: SplashScreenModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandler(java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.Scheduler: void scheduleOnUI()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getTypeSync()
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.rnfs.RNFSManager: void stat(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseDrawableOnForeground(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.horcrux.svg.PatternView: void setAlign(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
net.time4j.i18n.IsoTextProviderSPI: IsoTextProviderSPI()
com.dylanvann.fastimage.FastImageViewManager: FastImageViewManager()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableView: void setFillRule(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
com.horcrux.svg.RenderableViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()
androidx.recyclerview.widget.RecyclerView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode: ReactSliderManager$ReactSliderShadowNode()
com.facebook.react.ReactInstanceManager: void handleCxxError(java.lang.Exception)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontVariant(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.henninghall.date_picker.DatePickerModule: void closePicker()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientUnits(com.horcrux.svg.RadialGradientView,int)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
com.jvpg.jvpgclub.MainActivity: MainActivity()
com.facebook.react.views.slider.ReactSliderManager: void setValue(android.view.View,double)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.reactnativecommunity.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.reactnativecommunity.netinfo.NetInfoModule: void addListener(java.lang.String)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: void onFailure(double,java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void removeSubviewsFromContainerWithID(int)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.inprogress.reactnativeyoutube.YouTubeManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getTransactionalExecutor(java.lang.String)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.MarkerView: void setMarkerHeight(com.facebook.react.bridge.Dynamic)
com.facebook.jni.IteratorHelper: boolean hasNext()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.reactnativecommunity.geolocation.GeolocationModule: void getCurrentPosition(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: com.reactnativecommunity.toolbarandroid.ReactToolbar createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
com.reactlibrary.InstaStoryManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()
com.henninghall.date_picker.pickers.IosClone: void setOnValueChangedListener(com.henninghall.date_picker.pickers.Picker$OnValueChangeListener)
com.bumptech.glide.load.engine.DiskCacheStrategy: DiskCacheStrategy()
com.facebook.react.modules.storage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.nodes.Node: void findAndUpdateNodes(com.swmansion.reanimated.nodes.Node,java.util.Set,java.util.Stack)
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
net.time4j.calendar.CyclicYear: java.lang.Object readResolve()
com.google.firebase.crashlytics.FirebaseCrashlytics: void setUserId(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.BV.LinearGradient.LinearGradientView: void setAngleCenter(com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.learnium.RNDeviceInfo.RNDeviceModule: void isPinOrFingerprintSet(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: boolean runOnJSQueueThread(java.lang.Runnable)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getTopScreen()
com.swmansion.reanimated.NativeProxy: void setGestureState(int,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] values()
com.BV.LinearGradient.LinearGradientManager: void setUseAngle(com.BV.LinearGradient.LinearGradientView,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.horcrux.svg.RenderableView: java.util.ArrayList getAttributeList()
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.slider.ReactSlider: void setLowerLimit(double)
net.time4j.history.NewYearRule: net.time4j.history.NewYearRule valueOf(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$1: boolean hasNext()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
com.github.barteksc.pdfviewer.PDFView: void setSwipeVertical(boolean)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.horcrux.svg.VirtualView: void setMarkerStart(java.lang.String)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
com.google.firebase.crashlytics.ndk.JniNativeApi: boolean nativeInit(java.lang.String[],java.lang.Object)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void df(com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.learnium.RNDeviceInfo.RNDeviceModule: void getFreeDiskStorage(com.facebook.react.bridge.Promise)
org.wonday.pdf.PdfManager: void setEnableRTL(org.wonday.pdf.PdfView,boolean)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.facebook.react.fabric.FabricUIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void subscribeToTopic(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.reactnativecommunity.slider.ReactSliderManager: void setValue(com.reactnativecommunity.slider.ReactSlider,float)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.reactnativecommunity.slider.ReactSlider: void setAccessibilityIncrements(java.util.List)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor[] values()
com.horcrux.svg.VirtualView: void setClientRect(android.graphics.RectF)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setItemPaddingHorizontal(int)
androidx.recyclerview.widget.RecyclerView: boolean removeAnimatingView(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.yalantis.ucrop.view.OverlayView: void setCropFrameStrokeWidth(int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
com.inprogress.reactnativeyoutube.YouTubeModule: java.lang.String getName()
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String getName()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
net.time4j.Moment$IntElement: net.time4j.Moment$IntElement valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseBorderlessDrawable(boolean)
org.reactnative.maskedview.RNCMaskedViewManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.views.scroll.ReactScrollView: java.lang.String getOverflow()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.inprogress.reactnativeyoutube.YouTubeManager: void setPropLoop(com.inprogress.reactnativeyoutube.YouTubeView,boolean)
com.reactnativecommunity.slider.ReactSliderManager: void setMinimumTrackTintColor(com.reactnativecommunity.slider.ReactSlider,java.lang.Integer)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.ViewGroup)
net.time4j.tz.model.LastWeekdayPattern: void readObject(java.io.ObjectInputStream)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
net.time4j.calendar.KoreanEra: net.time4j.calendar.KoreanEra valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.google.android.gms.common.api.internal.zzb: zzb()
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.RenderableViewManager$SVGClass: com.horcrux.svg.RenderableViewManager$SVGClass valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.webview.RNCWebView)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSourceURL(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
com.horcrux.svg.TextView: void setDeltaX(com.facebook.react.bridge.Dynamic)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.airbnb.lottie.LottieAnimationView: void setMaxProgress(float)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
com.horcrux.svg.TextView: void setPositionX(com.facebook.react.bridge.Dynamic)
org.wonday.pdf.PdfManager: void setScale(org.wonday.pdf.PdfView,float)
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
net.time4j.Moment: void readObject(java.io.ObjectInputStream)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry access$200(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.facebook.react.views.slider.ReactSlider: int getTotalSteps()
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(com.swmansion.gesturehandler.react.RNGestureHandlerRootView)
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.facebook.react.modules.debug.DevSettingsModule: void reload()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(android.view.View,double)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setWrapSelectorWheel(boolean)
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
com.horcrux.svg.RenderableViewManager$PathViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
net.time4j.engine.StartOfDay: StartOfDay()
com.google.android.gms.internal.measurement.zzeh: zzeh()
com.facebook.react.animated.ValueAnimatedNode: ValueAnimatedNode()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setTextLength(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.swmansion.reanimated.NativeProxy: void installJSIBindings()
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setAlign(com.horcrux.svg.MarkerView,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setDirection(java.lang.String)
com.rnfs.RNFSManager: void readDirAssets(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
net.time4j.engine.Calendrical: Calendrical()
com.google.android.gms.internal.common.zzc: zzc()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(android.view.View,java.lang.String)
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
com.shockwave.pdfium.PdfiumCore: long nativeGetBookmarkDestIndex(long,long)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
cl.json.RNShareModule: void shareSingle(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseFormat: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$ResponseFormat valueOf(java.lang.String)
net.time4j.tz.GapResolver: net.time4j.tz.GapResolver[] values()
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
net.time4j.tz.NameStyle: net.time4j.tz.NameStyle[] values()
com.otters.newarchitecture.components.MainComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(android.view.View,int)
com.bumptech.glide.request.BaseRequestOptions: BaseRequestOptions()
com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(java.lang.Boolean)
com.google.android.gms.location.LocationSettingsResponse: LocationSettingsResponse()
com.google.android.youtube.player.YouTubePlayer$ErrorReason: com.google.android.youtube.player.YouTubePlayer$ErrorReason[] values()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.dylanvann.fastimage.FastImageViewModule: java.lang.String getName()
com.henninghall.date_picker.models.WheelType: com.henninghall.date_picker.models.WheelType valueOf(java.lang.String)
com.shockwave.pdfium.PdfiumCore: int nativeGetPageHeightPoint(long)
androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)
androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)
net.time4j.tz.OverlapResolver: net.time4j.tz.OverlapResolver[] values()
com.facebook.react.animated.AnimatedNode: AnimatedNode()
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: PersistedEvent()
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.perflogger.NativeModulePerfLogger)
com.google.android.material.chip.Chip: void setLines(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()
net.time4j.Meridiem: net.time4j.Meridiem[] values()
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.reactnativecommunity.geolocation.GeolocationModule: com.facebook.react.bridge.WritableMap locationToMap(android.location.Location)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.airbnb.lottie.LottieAnimationView: void setMaxFrame(int)
net.time4j.tz.SPX: java.lang.Object readResolve()
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.Promise: void reject(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void dismissPopupMenu()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void lambda$sendMessage$9(com.facebook.react.bridge.Promise,com.google.android.gms.tasks.Task)
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
com.airbnb.lottie.LottieAnimationView: void setAnimationFromUrl(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.modules.intent.IntentModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.swmansion.rnscreens.ScreenStackViewManager: ScreenStackViewManager()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setOpacity(android.view.View,float)
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.reactnativerestart.RestartModule: void clearLifecycleEventListener()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(android.view.View,double)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.airbnb.lottie.LottieAnimationView: boolean getClipToCompositionBounds()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String access$100()
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
com.google.android.datatransport.cct.internal.ClientInfo: ClientInfo()
net.time4j.calendar.astro.StdSolarCalculator: net.time4j.calendar.astro.StdSolarCalculator[] values()
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int)
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData initHybrid(long,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.swmansion.reanimated.Scheduler,com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
net.time4j.scale.TimeScale: net.time4j.scale.TimeScale[] values()
androidx.lifecycle.ViewModel: ViewModel()
com.yalantis.ucrop.view.OverlayView: void setCropGridColumnCount(int)
androidx.recyclerview.widget.RecyclerView: void releaseGlows()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
com.horcrux.svg.VirtualView: void setOpacity(float)
com.brentvatne.react.ReactVideoViewManager: void onDropViewInstance(com.brentvatne.react.ReactVideoView)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void copyToInternal(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setContentTextTypeface(android.graphics.Typeface)
com.yalantis.ucrop.view.OverlayView: void setShowCropGrid(boolean)
com.airbnb.lottie.model.content.ShapeTrimPath$Type: com.airbnb.lottie.model.content.ShapeTrimPath$Type[] values()
com.learnium.RNDeviceInfo.RNDeviceModule: void initializeHeadphoneConnectionReceiver()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])
com.swmansion.rnscreens.SearchBarView: void setTintColor(java.lang.Integer)
okhttp3.Cookie$Builder: Cookie$Builder()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleRadius(java.lang.Integer)
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
com.airbnb.lottie.network.FileExtension: com.airbnb.lottie.network.FileExtension[] values()
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
androidx.recyclerview.widget.RecyclerView: void initAutofill()
com.shockwave.pdfium.PdfiumCore: void nativeCloseDocument(long)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenContainerViewManager: ScreenContainerViewManager()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void ls(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeMap$1$1: java.lang.Object setValue(java.lang.Object)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
com.swmansion.rnscreens.CustomSearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.datatransport.cct.internal.AndroidClientInfo: AndroidClientInfo()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.swmansion.reanimated.ReanimatedModule: void setValue(int,java.lang.Double)
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
com.inprogress.reactnativeyoutube.YouTubeManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,float)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleColor(java.lang.Integer)
com.google.android.gms.internal.measurement.zzft: zzft()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostPause()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.horcrux.svg.RadialGradientView: void setCx(com.facebook.react.bridge.Dynamic)
com.airbnb.lottie.LottieAnimationView: void setTextDelegate(com.airbnb.lottie.TextDelegate)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.bumptech.glide.load.model.ModelCache$ModelKey: ModelCache$ModelKey()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.horcrux.svg.VirtualView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.horcrux.svg.TextView: void setBaselineShift(com.facebook.react.bridge.Dynamic)
okhttp3.MediaType$Companion: MediaType$Companion()
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.inprogress.reactnativeyoutube.YouTubeView: void setLoop(boolean)
com.airbnb.lottie.LottieDrawable$OnVisibleAction: com.airbnb.lottie.LottieDrawable$OnVisibleAction[] values()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)
com.henninghall.date_picker.DatePickerModule: void openPicker(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.CoreComponentsRegistry: com.facebook.react.fabric.CoreComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenStackViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState getActivityState()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.shockwave.pdfium.PdfiumCore: void nativeClosePage(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$300(com.facebook.react.modules.websocket.WebSocketModule)
com.swmansion.rnscreens.SearchBarManager: SearchBarManager()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.google.android.gms.internal.auth-api-phone.zzc: zzc()
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowUniversalAccessFromFileURLs(com.reactnativecommunity.webview.RNCWebView,boolean)
com.brentvatne.react.ReactVideoViewManager: void setPaused(com.brentvatne.react.ReactVideoView,boolean)
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.swmansion.reanimated.nodes.Node: Node(int,com.facebook.react.bridge.ReadableMap,com.swmansion.reanimated.NodesManager)
net.time4j.format.expert.TimezoneOffsetProcessor: TimezoneOffsetProcessor()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.razorpay.NetworkType: com.razorpay.NetworkType valueOf(java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler getExceptionHandler()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getIpAddressSync()
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
com.facebook.react.uimanager.ReanimatedUIManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.inprogress.reactnativeyoutube.YouTubeView: void setPlaylistId(java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.razorpay.CheckoutBridge: void showAlertDialog(java.lang.String,java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.horcrux.svg.SvgViewManager: void setTintColor(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
fr.greweb.reactnativeviewshot.RNViewShotModule: void captureScreen(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontWeight(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: void jni_YGNodeClearChildrenJNI(long)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOrient(com.horcrux.svg.MarkerView,java.lang.String)
com.google.android.gms.dynamite.zzn: zzn()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager: void setStrokeDasharray(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
com.otters.newarchitecture.modules.MainApplicationTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture: com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
com.horcrux.svg.LineView: void setX1(com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerTouchEvent: RNGestureHandlerTouchEvent()
com.reactnativecommunity.webview.RNCWebViewClient: RNCWebViewClient()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
okhttp3.EventListener: EventListener()
com.agontuk.RNFusedLocation.RNFusedLocationModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.geolocation.GeolocationModule: void getCurrentLocationData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.Binding: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,java.lang.Object,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory,java.lang.Object)
net.time4j.Weekmodel: java.lang.Object writeReplace()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
com.google.android.gms.internal.measurement.zzc: zzc()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
com.oblador.vectoricons.VectorIconsModule: VectorIconsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternTransform(com.horcrux.svg.PatternView,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbWidth(com.horcrux.svg.SymbolView,float)
com.swmansion.rnscreens.ScreenViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion()
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String getName()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.henninghall.date_picker.DatePickerManager: java.lang.String getName()
com.reactnativecommunity.slider.ReactSlider: void setUpperLimit(double)
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
com.swmansion.reanimated.NativeProxy: void configureProps(com.facebook.react.bridge.ReadableNativeArray,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.bridge.ModuleSpec: java.lang.Class getType()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
net.time4j.i18n.WeekdataProviderSPI: WeekdataProviderSPI()
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.learnium.RNDeviceInfo.RNDeviceModule: double getBatteryLevelSync()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.yqritc.scalablevideoview.ScalableVideoView: int getVideoWidth()
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
androidx.recyclerview.widget.RecyclerView: void removeAndRecycleViews()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsHorizontalScrollIndicator(com.reactnativecommunity.webview.RNCWebView,boolean)
com.reactnative.ivpusic.imagepicker.IvpusicImagePickerFileProvider: IvpusicImagePickerFileProvider()
androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleColor(int)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
androidx.fragment.app.Fragment$OnPreAttachedListener: Fragment$OnPreAttachedListener()
com.yalantis.ucrop.view.widget.AspectRatioTextView: void setActiveColor(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1)
com.horcrux.svg.RenderableViewManager: void setStrokeMiterlimit(com.horcrux.svg.RenderableView,float)
com.google.firebase.crashlytics.internal.model.StaticSessionData$DeviceData: StaticSessionData$DeviceData()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String getName()
com.razorpay.AnalyticsProperty$Scope: com.razorpay.AnalyticsProperty$Scope valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDirectEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.modules.fresco.FrescoModule: void initialize()
com.facebook.react.bridge.ReadableNativeMap$2: ReadableNativeMap$2(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[])
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.ConcurrentLinkedQueue access$500(com.facebook.react.animated.NativeAnimatedModule)
com.reactnativecommunity.webview.RNCWebViewManager: void setMixedContentMode(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.work.impl.background.systemalarm.ConstraintProxy: ConstraintProxy()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.learnium.RNDeviceInfo.RNDeviceModule: void isLocationEnabled(com.facebook.react.bridge.Promise)
com.horcrux.svg.SvgViewManager: void updateExtraData(com.facebook.react.views.view.ReactViewGroup,java.lang.Object)
com.shockwave.pdfium.PdfiumCore: void nativeClosePages(long[])
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.razorpay.rn.RazorpayModule: java.lang.String getName()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void onNewIntent(android.content.Intent)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.reactnativecommunity.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.reactnativecommunity.slider.ReactSlider)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void sendMessage(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReadableArray: double getDouble(int)
com.facebook.react.uimanager.ViewGroupManager: boolean shouldPromoteGrandchildren()
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.horcrux.svg.RenderableViewManager: java.lang.Class getShadowNodeClass()
com.horcrux.svg.RenderableViewManager: void setName(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.nodes.Node: void runUpdates(com.swmansion.reanimated.UpdateContext)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.reactnativecommunity.slider.ReactSliderManager: void setAccessibilityUnits(com.reactnativecommunity.slider.ReactSlider,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
cn.carbswang.android.numberpickerview.library.NumberPickerView: int getMinValue()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.airbnb.lottie.model.content.ShapeStroke$LineCapType: com.airbnb.lottie.model.content.ShapeStroke$LineCapType valueOf(java.lang.String)
com.facebook.jni.HybridData: void resetNative()
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.razorpay.AnalyticsEvent: com.razorpay.AnalyticsEvent[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(android.view.View,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(android.view.View)
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.razorpay.t: void setFloat(java.lang.String,float)
cl.json.social.TargetChosenReceiver: TargetChosenReceiver()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.ViewGroup)
com.swmansion.reanimated.nodes.Node: void removeChild(com.swmansion.reanimated.nodes.Node)
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.View,java.lang.Object)
org.wonday.pdf.PdfManager: void setSinglePage(org.wonday.pdf.PdfView,boolean)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration[] values()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: com.facebook.react.bridge.WritableMap popRemoteMessageMapFromMessagingStore(java.lang.String)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
androidx.work.ContentUriTriggers: ContentUriTriggers()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontWeight(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()
net.time4j.DateElement: java.lang.Object readResolve()
com.yqritc.scalablevideoview.ScalableVideoView: void setLooping(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.horcrux.svg.RenderableViewManager$SymbolManager: RenderableViewManager$SymbolManager()
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
com.yalantis.ucrop.view.TransformImageView: void setMaxBitmapSize(int)
com.yalantis.ucrop.view.OverlayView: android.graphics.RectF getCropViewRect()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.Screen getScreen()
com.reactnativecommunity.viewpager.ReactViewPagerManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.bundleloader.NativeDevSplitBundleLoaderModule: void loadBundle(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
com.inprogress.reactnativeyoutube.YouTubeView: void setControls(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: ReadableNativeMap$ReadableNativeMapKeySetIterator(com.facebook.react.bridge.ReadableNativeMap)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
com.inprogress.reactnativeyoutube.YouTubeManager: void setPropFullscreen(com.inprogress.reactnativeyoutube.YouTubeView,boolean)
com.reactnative.ivpusic.imagepicker.PickerModule: void openCropper(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.learnium.RNDeviceInfo.RNDeviceModule: void getProduct(com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getExclusive()
com.google.android.gms.internal.measurement.zzcb: com.google.android.gms.internal.measurement.zzcc asInterface(android.os.IBinder)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.horcrux.svg.RenderableViewManager: void setMatrix(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] values()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: void init(android.content.Context)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
com.brentvatne.react.ReactVideoViewManager: void setFullscreen(com.brentvatne.react.ReactVideoView,boolean)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: boolean isDoneCreatingModule()
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: java.lang.String getFullClassName(android.content.Context,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
cl.json.RNShareFileProvider: RNShareFileProvider()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.airbnb.lottie.LottieAnimationView: void setAnimation(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isHeadphonesConnectedSync()
com.facebook.react.bridge.queue.MessageQueueThread: boolean runOnQueue(java.lang.Runnable)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.yalantis.ucrop.view.CropImageView: void setCropBoundsChangeListener(com.yalantis.ucrop.callback.CropBoundsChangeListener)
net.time4j.history.SPX: java.lang.Object readResolve()
okio.Buffer: Buffer()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
com.horcrux.svg.UseView: void setY(com.facebook.react.bridge.Dynamic)
com.google.android.material.animation.MotionSpec: MotionSpec()
com.horcrux.svg.RenderableViewManager: void resetTransformProperty(android.view.View)
com.yalantis.ucrop.view.CropImageView: void setMaxResultImageSizeX(int)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token[] values()
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.facebook.react.bridge.CatalystInstanceImpl: void access$300(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager getNodesManager()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState valueOf(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: HeifExifUtil$HeifExifUtilAndroidN()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.dylanvann.fastimage.FastImageViewManager: void setSource(com.dylanvann.fastimage.FastImageViewWithUrl,com.facebook.react.bridge.ReadableMap)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: DispatchCommandMountItem()
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.google.android.gms.internal.measurement.zznf: com.google.android.gms.internal.measurement.zznf[] values()
com.horcrux.svg.MarkerView: void setMarkerUnits(java.lang.String)
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback: ViewPager2$OnPageChangeCallback()
com.swmansion.rnscreens.SearchBarView: boolean getAutoFocus()
com.horcrux.svg.RenderableViewManager: void setResponsible(com.horcrux.svg.VirtualView,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
com.facebook.react.modules.storage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void enableProgressReport(java.lang.String,int,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
com.BV.LinearGradient.LinearGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.airbnb.lottie.model.content.Mask$MaskMode: com.airbnb.lottie.model.content.Mask$MaskMode valueOf(java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void startRecordingFps()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.learnium.RNDeviceInfo.RNDeviceModule: void getHost(com.facebook.react.bridge.Promise)
org.wonday.pdf.PdfView: void setPassword(java.lang.String)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes getInputType()
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: boolean isAnimating()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.BV.LinearGradient.LinearGradientManager: void setLocations(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$400(com.rnfs.RNFSManager)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.google.android.gms.common.api.internal.zzd: zzd()
com.learnium.RNDeviceInfo.RNDeviceModule: void getAndroidId(com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.horcrux.svg.RenderableViewManager$CircleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.WritableNativeArray: void pushNull()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.reactnativecommunity.toolbarandroid.ReactToolbar: void setLogoSource(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void scanFile(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.FabricUIManager: void onHostDestroy()
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
com.reactnativecommunity.webview.RNCWebViewManager: void setWebviewDebuggingEnabled(com.reactnativecommunity.webview.RNCWebView,boolean)
com.swmansion.reanimated.ReanimatedModule: void onHostResume()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setColorFilters(com.airbnb.lottie.LottieAnimationView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getIncrementalSync()
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.reactnativecommunity.viewpager.ReactViewPagerManager: java.lang.String getName()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
net.time4j.format.TextWidth: net.time4j.format.TextWidth valueOf(java.lang.String)
com.horcrux.svg.RenderableView: void setFillOpacity(float)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.yqritc.scalablevideoview.ScalableVideoView: int getVideoHeight()
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(android.view.View,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.soloader.SoLoader: SoLoader()
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$700(com.rnfs.RNFSManager)
com.brentvatne.react.ReactVideoView: void setControls(boolean)
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.views.slider.ReactSliderManager: void setStep(com.facebook.react.views.slider.ReactSlider,double)
com.github.barteksc.pdfviewer.PDFView: float getMaxZoom()
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setOpacity(android.view.View,float)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void onDropViewInstance(android.view.View)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf)
com.razorpay.RzpAssist: void trackEvent(java.lang.String,java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.inprogress.reactnativeyoutube.YouTubeView: void setVideoIds(com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(android.view.View,boolean)
com.brentvatne.react.ReactVideoViewManager: com.brentvatne.react.ReactVideoView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
com.google.android.material.shape.ShapeAppearanceModel: ShapeAppearanceModel()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.Object lambda$setAutoInitEnabled$0(java.lang.Boolean)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.reactnativecommunity.viewpager.ReactViewPagerManager: android.view.View getChildAt(androidx.viewpager2.widget.ViewPager2,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
net.time4j.IntegerTimeElement: java.lang.Object readResolve()
net.time4j.format.OutputContext: net.time4j.format.OutputContext[] values()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
com.swmansion.rnscreens.SearchBarView: void setSearchViewListeners(androidx.appcompat.widget.SearchView)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
com.horcrux.svg.VirtualView: void setMarkerEnd(java.lang.String)
com.google.android.gms.internal.measurement.zzet: zzet()
com.razorpay.AnalyticsProperty$Scope: com.razorpay.AnalyticsProperty$Scope[] values()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void preferencesSetBool(java.lang.String,boolean,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.razorpay.CheckoutBridge: void onload()
com.dylanvann.fastimage.FastImageViewManager: void onDropViewInstance(android.view.View)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.google.gson.JsonNull: JsonNull()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
com.facebook.jni.DestructorThread$1: void run()
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$1100(com.learnium.RNDeviceInfo.RNDeviceModule)
com.google.android.gms.internal.measurement.zzga: zzga()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: void onComplete(com.google.android.gms.tasks.Task)
com.reactnative.ivpusic.imagepicker.PickerModule: void configureCropperColors(com.yalantis.ucrop.UCrop$Options)
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.Screen createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
com.horcrux.svg.RenderableView: void setStroke(com.facebook.react.bridge.Dynamic)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setEnableMergePaths(com.airbnb.lottie.LottieAnimationView,boolean)
net.time4j.DayPeriod$Element: java.lang.Object writeReplace()
com.reactnativecommunity.netinfo.NetInfoModule: void onCatalystInstanceDestroy()
com.reactnativecommunity.webview.RNCWebViewManager: void setForceDarkOn(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
com.airbnb.lottie.model.content.PolystarShape$Type: com.airbnb.lottie.model.content.PolystarShape$Type valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
net.time4j.CalendarUnit: net.time4j.CalendarUnit valueOf(java.lang.String)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSourceJson(com.airbnb.lottie.LottieAnimationView,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.yalantis.ucrop.view.CropImageView: com.yalantis.ucrop.callback.CropBoundsChangeListener getCropBoundsChangeListener()
net.time4j.IntegerDateElement: java.lang.Object readResolve()
com.google.android.gms.internal.measurement.zzbl: com.google.android.gms.internal.measurement.zzbl[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.modules.intent.IntentModule: void sendOSIntent(android.content.Intent,java.lang.Boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: RenderableViewManager$TextPathViewManager()
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.facebook.react.JSInterpreter: com.facebook.react.JSInterpreter valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
io.invertase.firebase.common.ReactNativeFirebaseModule: ReactNativeFirebaseModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
com.shockwave.pdfium.PdfiumCore: long[] nativeLoadPages(long,int,int)
com.swmansion.rnscreens.SearchBarView: void setTextColor(java.lang.Integer)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsPing(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.firebase.heartbeatinfo.HeartBeatResult: HeartBeatResult()
com.horcrux.svg.VirtualView: void setClipRule(int)
com.facebook.react.uimanager.BaseViewManager: void resetTransformProperty(android.view.View)
com.github.barteksc.pdfviewer.PDFView: float getMidZoom()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
net.time4j.calendar.astro.MoonPhase: net.time4j.calendar.astro.MoonPhase valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.recyclerview.widget.RecyclerView: void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
net.time4j.calendar.service.StdDateElement: java.lang.Object readResolve()
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
com.rnfs.RNFSManager: void exists(java.lang.String,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$FilesPayload$File: CrashlyticsReport$FilesPayload$File()
com.facebook.react.views.image.ReactImageManager: void setAccessible(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void deleteToken(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$000(com.facebook.react.bridge.JavaOnlyMap)
com.yalantis.ucrop.view.CropImageView: void setMaxResultImageSizeY(int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.reactnativecommunity.webview.RNCWebView: void setIgnoreErrFailedForThisURL(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
com.learnium.RNDeviceInfo.RNDeviceModule: int getApiLevelSync()
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
okhttp3.internal.http2.Http2: Http2()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.facebook.react.views.view.ReactViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.GapWorker: GapWorker()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.facebook.react.modules.dialog.DialogModule: java.lang.String getName()
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.reactnativecommunity.slider.ReactSliderManager: void setThumbImage(com.reactnativecommunity.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
net.time4j.tz.model.SPX: SPX()
com.facebook.react.uimanager.UIManagerModule: void initialize()
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: com.facebook.react.bridge.Promise access$002(com.inprogress.reactnativeyoutube.YouTubeStandaloneModule,com.facebook.react.bridge.Promise)
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine[] values()
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
com.reactnative.ivpusic.imagepicker.PickerModule: java.io.File createExternalStoragePrivateFile(android.content.Context,android.net.Uri)
com.facebook.react.common.futures.SimpleSettableFuture: SimpleSettableFuture()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.horcrux.svg.VirtualView: void setMask(java.lang.String)
com.reactnativecommunity.slider.ReactSliderManager$ReactSliderShadowNode: ReactSliderManager$ReactSliderShadowNode()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.facebook.react.modules.debug.AnimationsDebugModule: void invalidate()
com.google.android.material.textfield.CutoutDrawable: CutoutDrawable()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.airbnb.lottie.model.DocumentData$Justification: com.airbnb.lottie.model.DocumentData$Justification valueOf(java.lang.String)
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTranslucent(boolean)
com.facebook.fbreact.specs.NativeJSDevSupportSpec: void onSuccess(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.reactnativecommunity.slider.ReactSliderManager: ReactSliderManager()
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(android.view.View,java.lang.String)
com.google.android.gms.internal.measurement.zzge: zzge()
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setDisplayedValues(java.lang.String[])
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.inprogress.reactnativeyoutube.YouTubeView: void setApiKey(java.lang.String)
com.google.android.gms.internal.measurement.zzmp: zzmp()
com.google.android.gms.internal.measurement.zzjo: zzjo()
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int)
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String getMimeType(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void dropNode(int)
com.facebook.react.bridge.NativeModule: void invalidate()
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.dylanvann.fastimage.FastImageViewManager: void setTintColor(com.dylanvann.fastimage.FastImageViewWithUrl,java.lang.Integer)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
net.time4j.tz.model.DayOfWeekInMonthPattern: void readObject(java.io.ObjectInputStream)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLinesMapBuffer(com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
com.reactlibrary.createthumbnail.CreateThumbnailModule: CreateThumbnailModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.Platform: Platform()
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: CircularRevealWidget$RevealInfo()
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.reactlibrary.InstaStoryManager: java.lang.String getName()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean hasFixedSize()
com.google.android.gms.internal.measurement.zzlr: zzlr()
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void setAttribute(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: com.facebook.react.bridge.Promise access$000(com.inprogress.reactnativeyoutube.YouTubeStandaloneModule)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenContainer)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinY(com.horcrux.svg.SymbolView,float)
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void jsonGetAll(com.facebook.react.bridge.Promise)
com.horcrux.svg.RadialGradientView: void setFy(com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String getName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
com.horcrux.svg.RenderableViewManager$UseViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.measurement.zzje: zzje()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.swmansion.rnscreens.SearchBarManager: java.lang.String getName()
net.time4j.android.spi.AndroidResourceLoader: AndroidResourceLoader()
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getType(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$LineViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
com.google.android.gms.internal.measurement.zzmy: zzmy()
com.airbnb.lottie.parser.moshi.JsonReader$Token: com.airbnb.lottie.parser.moshi.JsonReader$Token valueOf(java.lang.String)
com.razorpay.rn.RazorpayModule: RazorpayModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.horcrux.svg.RenderableViewManager$UseViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(android.view.View,boolean)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.google.android.gms.internal.measurement.zzey: zzey()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.inprogress.reactnativeyoutube.YouTubeManager: void setPropVideoId(com.inprogress.reactnativeyoutube.YouTubeView,java.lang.String)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
com.inprogress.reactnativeyoutube.YouTubeManager: void setApiKey(com.inprogress.reactnativeyoutube.YouTubeView,java.lang.String)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application: CrashlyticsReport$Session$Event$Application()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
com.henninghall.date_picker.DatePickerModule: android.app.AlertDialog createDialog(com.facebook.react.bridge.ReadableMap,com.henninghall.date_picker.PickerView,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
com.jvpg.jvpgclub.MainApplication: MainApplication()
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
androidx.fragment.app.FragmentManager: FragmentManager()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.google.android.material.chip.Chip: float getChipStartPadding()
com.facebook.react.modules.fabric.ReactFabric: void unmountComponentAtNode(int)
com.dylanvann.fastimage.FastImageViewModule: void clearDiskCache(com.facebook.react.bridge.Promise)
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier access$100(com.facebook.react.modules.storage.AsyncStorageModule)
com.BV.LinearGradient.LinearGradientView: void setAngle(float)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.otters.newarchitecture.modules.MainApplicationTurboModuleManagerDelegate: boolean canCreateTurboModule(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(android.view.ViewGroup)
com.razorpay.CheckoutBridge: void ondismiss(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.SearchBarView)
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: boolean canResolveIntent(android.content.Intent)
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.google.android.material.chip.Chip: void setGravity(int)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType valueOf(java.lang.String)
kotlinx.coroutines.EventLoop: EventLoop()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
okhttp3.internal.platform.Platform$Companion: Platform$Companion()
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.facebook.react.bridge.ModuleHolder: void destroy()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.reactnativecommunity.slider.ReactSliderManager: java.lang.Class getShadowNodeClass()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
androidx.recyclerview.widget.RecyclerView: void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void getAllKeys(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.swmansion.rnscreens.SearchBarView: void setPlaceholder(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.airbnb.lottie.model.layer.Layer$LayerType: com.airbnb.lottie.model.layer.Layer$LayerType valueOf(java.lang.String)
com.dylanvann.fastimage.FastImageViewManager: boolean isActivityDestroyed(android.app.Activity)
com.facebook.react.ReactRootView: void setRootViewTag(int)
androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMeetOrSlice(com.horcrux.svg.SymbolView,int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int,int,int)
androidx.recyclerview.widget.RecyclerView: void clearOldPositions()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] values()
com.horcrux.svg.MaskView: void setMaskTransform(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.core.TimingModule: void onHostPause()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setExclusive(boolean)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setAlign(com.horcrux.svg.SymbolView,java.lang.String)
com.yalantis.ucrop.view.GestureCropImageView: float getDoubleTapTargetScale()
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
net.time4j.calendar.KoreanEra$EraElement: java.lang.Object readResolve()
cl.json.RNShareModule: void isBase64File(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.rnfs.DownloadParams: DownloadParams()
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.google.android.gms.internal.measurement.zzgr: zzgr()
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoaded(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
com.airbnb.lottie.RenderMode: com.airbnb.lottie.RenderMode[] values()
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
com.facebook.react.fabric.FabricUIManager: void initialize()
com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism[] values()
net.time4j.PlainTime: java.lang.Object writeReplace()
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.gms.internal.measurement.zzlh: zzlh()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
net.time4j.Weekday: net.time4j.Weekday[] values()
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.horcrux.svg.RenderableViewManager$LineViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
org.wonday.pdf.PdfManager: void setEnableAnnotationRendering(android.view.View,boolean)
net.time4j.history.internal.HistoricVariant: net.time4j.history.internal.HistoricVariant valueOf(java.lang.String)
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setInputType(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
net.time4j.engine.EpochDays: net.time4j.engine.EpochDays[] values()
com.google.android.gms.internal.measurement.zzem: zzem()
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context getContext()
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
org.wonday.pdf.PdfManager: void setShowsVerticalScrollIndicator(org.wonday.pdf.PdfView,boolean)
com.swmansion.rnscreens.Screen: void setNavigationBarHidden(java.lang.Boolean)
cn.carbswang.android.numberpickerview.library.NumberPickerView: int getRawContentSize()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.google.android.gms.internal.measurement.zzfb: zzfb()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
org.wonday.pdf.PdfManager: void setMaxScale(org.wonday.pdf.PdfView,float)
cn.carbswang.android.numberpickerview.library.NumberPickerView: int getPickedIndexRelativeToRaw()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
com.horcrux.svg.SvgViewManager: java.lang.String getName()
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
net.time4j.Weekday: net.time4j.Weekday valueOf(java.lang.String)
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.Map getCommandsMap()
com.reactnativecommunity.slider.ReactSliderManager: void setDisabled(com.reactnativecommunity.slider.ReactSlider,boolean)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.TextInlineImageSpan: TextInlineImageSpan()
net.time4j.tz.spi.TimezoneRepositoryProviderSPI: TimezoneRepositoryProviderSPI()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
com.razorpay.CheckoutBridge: void callNativeIntent(java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger: void clearListeners()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine valueOf(java.lang.String)
kotlin.internal.PlatformImplementations: PlatformImplementations()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: void setMiddleLineColor(int)
com.reactnativecommunity.geolocation.GeolocationModule: java.lang.String getName()
androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
com.swmansion.reanimated.NativeProxy: void unregisterSensor(int)
com.airbnb.lottie.LottieAnimationView: void setApplyingOpacityToLayersEnabled(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(android.view.View,boolean)
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation valueOf(java.lang.String)
cl.json.RNShareModule: void isPackageInstalled(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.learnium.RNDeviceInfo.RNDeviceModule: void getFreeDiskStorageOld(com.facebook.react.bridge.Promise)
com.reactnativecommunity.webview.RNCWebViewModule: boolean grantFileDownloaderPermissions(java.lang.String,java.lang.String)
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar: ReactNativeFirebaseAppRegistrar()
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderRadius(float)
com.google.android.material.shape.CutCornerTreatment: CutCornerTreatment()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$RequestType: com.ReactNativeBlobUtil.ReactNativeBlobUtilReq$RequestType valueOf(java.lang.String)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Application$Organization: CrashlyticsReport$Session$Application$Organization()
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(com.swmansion.rnscreens.Screen,float)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.horcrux.svg.VirtualView: double getFontSizeFromContext()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setOnScrollListener(cn.carbswang.android.numberpickerview.library.NumberPickerView$OnScrollListener)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder: int getModuleId()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
org.wonday.pdf.PdfManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstallReferrer(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.reactnative.ivpusic.imagepicker.PickerModule: java.lang.String resolveRealPath(android.app.Activity,android.net.Uri,boolean)
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSpacing(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.swmansion.reanimated.ReanimatedModule: java.lang.String getName()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void setAttributes(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
androidx.appcompat.widget.SearchView: int getInputType()
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()
com.horcrux.svg.ImageView: void setY(com.facebook.react.bridge.Dynamic)
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.room.RoomDatabase: RoomDatabase()
com.google.android.material.card.MaterialCardView: float getProgress()
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.reactnativecommunity.geolocation.GeolocationModule: GeolocationModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.ReactFontManager$AssetFontFamily: ReactFontManager$AssetFontFamily()
com.reactnative.ivpusic.imagepicker.PickerModule: com.facebook.react.bridge.WritableMap getCroppedRectMap(android.content.Intent)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.facebook.react.modules.storage.AsyncStorageModule: void clearSensitiveData()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(com.swmansion.rnscreens.Screen,boolean)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
androidx.work.Operation$State$SUCCESS: Operation$State$SUCCESS()
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
com.swmansion.rnscreens.Screen: void setTransitioning(boolean)
com.swmansion.reanimated.nodes.Node: java.lang.Object value()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec: void operationComplete(double,java.lang.String,java.lang.String)
com.inprogress.reactnativeyoutube.YouTubeManager: int getCurrentTime(com.inprogress.reactnativeyoutube.YouTubeView)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle valueOf(java.lang.String)
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.LottieComposition getComposition()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
com.github.barteksc.pdfviewer.PDFView: int getSpacingPx()
cn.carbswang.android.numberpickerview.library.NumberPickerView: android.text.TextUtils$TruncateAt getEllipsizeType()
com.rnfs.RNFSManager: java.io.OutputStream access$300(com.rnfs.RNFSManager,java.lang.String,boolean)
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: RenderableViewManager$ForeignObjectManager()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
com.google.android.gms.internal.measurement.zzgl: zzgl()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
com.swmansion.reanimated.layoutReanimation.AnimationsManager$ViewState: com.swmansion.reanimated.layoutReanimation.AnimationsManager$ViewState[] values()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void logPromise(java.lang.String,com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.google.android.material.button.MaterialButton: int getIconPadding()
com.yalantis.ucrop.view.TransformImageView: int getMaxBitmapSize()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
com.yalantis.ucrop.view.TransformImageView: TransformImageView(android.content.Context,android.util.AttributeSet)
com.brentvatne.react.ReactVideoView: void setProgressUpdateInterval(float)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: NativeSafeAreaContextSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
net.time4j.scale.TimeScale: net.time4j.scale.TimeScale valueOf(java.lang.String)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.horcrux.svg.SymbolView: void setVbWidth(float)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf)
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.horcrux.svg.MaskView: void setX(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.activity.ComponentActivity: ComponentActivity()
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.github.barteksc.pdfviewer.util.FitPolicy: com.github.barteksc.pdfviewer.util.FitPolicy[] values()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.horcrux.svg.RadialGradientView: void setRy(com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
com.horcrux.svg.PathView: void setD(java.lang.String)
com.airbnb.lottie.LottieAnimationView: void setMinFrame(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: RenderableViewManager$RadialGradientManager()
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
com.yalantis.ucrop.view.OverlayView: OverlayView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setContentInsetEnd(com.reactnativecommunity.toolbarandroid.ReactToolbar,float)
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternContentUnits(com.horcrux.svg.PatternView,int)
net.time4j.SI: net.time4j.SI[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: void stopRecordingFps(double)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
com.brentvatne.react.ReactVideoViewManager: void setResizeMode(com.brentvatne.react.ReactVideoView,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing[] values()
com.google.android.material.shape.RoundedCornerTreatment: RoundedCornerTreatment()
com.facebook.react.uimanager.ReanimatedUIManager: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.FabricUIManager: java.lang.Object getEventDispatcher()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void writeFile(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,com.facebook.react.bridge.Promise)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String getName()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
androidx.viewpager2.widget.ViewPager2: void setOrientation(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.rnfs.RNFSManager: void hash(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
org.wonday.pdf.PdfManager: void setPage(org.wonday.pdf.PdfView,int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.airbnb.lottie.LottieAnimationView: void setAnimation(int)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
com.henninghall.date_picker.DatePickerModule: com.henninghall.date_picker.PickerView createPicker(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.rnfs.RNFSManager: void write(java.lang.String,java.lang.String,int,com.facebook.react.bridge.Promise)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void receiveCommand(com.reactnativecommunity.toolbarandroid.ReactToolbar,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.shockwave.pdfium.PdfiumCore: void nativeRenderPage(long,android.view.Surface,int,int,int,int,int,boolean)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.horcrux.svg.RenderableViewManager$DefsViewManager: RenderableViewManager$DefsViewManager()
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
com.horcrux.svg.SvgViewManager: void setBbWidth(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] values()
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.facebook.fbreact.specs.NativeJSDevSupportSpec: java.util.Map getConstants()
com.reactnative.ivpusic.imagepicker.PickerModule: void access$400(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity,android.net.Uri)
net.time4j.Quarter: net.time4j.Quarter valueOf(java.lang.String)
com.reactnativecommunity.slider.ReactSliderManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.JavaScriptContextHolder: long get()
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.RenderableView: void setVectorEffect(int)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: void playVideos(java.lang.String,com.facebook.react.bridge.ReadableArray,boolean,boolean,int,int,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
com.airbnb.lottie.LottieAnimationView: float getSpeed()
net.time4j.history.SPX: void writeExternal(java.io.ObjectOutput)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
org.wonday.pdf.PdfManager: PdfManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
com.google.android.gms.internal.measurement.zzkg: zzkg()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String,com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleHolder,boolean)
com.BV.LinearGradient.LinearGradientManager: void setAngleCenter(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.horcrux.svg.ForeignObjectView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.drawee.components.DraweeEventTracker: DraweeEventTracker()
androidx.recyclerview.widget.RecyclerView: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.brentvatne.react.ReactVideoView: void setPlayInBackground(boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void replaceExistingNonRootView(int,int)
com.google.android.material.internal.BaselineLayout: int getBaseline()
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean ensureDatabase()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setBlurOnSubmit(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: java.lang.String lambda$getToken$2(com.google.firebase.messaging.FirebaseMessaging)
com.horcrux.svg.VirtualView: void setMatrix(com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.FabricUIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.react.uimanager.ReanimatedUIManager: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.core.PinchGestureHandler: PinchGestureHandler()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$RenderableShadowNode: void ignoreLayoutProps(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.Map getConstants()
com.horcrux.svg.VirtualView: void setMarkerMid(java.lang.String)
com.google.android.gms.internal.measurement.zzfp: zzfp()
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType valueOf(java.lang.String)
androidx.viewpager2.widget.ViewPager2: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes[] values()
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void setTitleColor(com.reactnativecommunity.toolbarandroid.ReactToolbar,java.lang.Integer)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.swmansion.reanimated.ReanimatedModule: void connectNodes(int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
cl.json.RNShareModule: void onNewIntent(android.content.Intent)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.recyclerview.widget.RecyclerView: void resetScroll()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.google.android.gms.internal.measurement.zzfu: zzfu()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
com.otters.newarchitecture.components.MainComponentsRegistry: MainComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation valueOf(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
androidx.work.Data: Data()
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport: CrashlyticsReport()
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void addListener(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskUnits(com.horcrux.svg.MaskView,int)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
okhttp3.HttpUrl$Companion: HttpUrl$Companion()
com.swmansion.rnscreens.ScreenStack: void setGoingForward(boolean)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.horcrux.svg.RenderableViewManager$PathViewManager: RenderableViewManager$PathViewManager()
com.facebook.soloader.SoSource: SoSource()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(android.view.View,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(android.view.View,boolean)
androidx.room.RoomDatabase$Callback: RoomDatabase$Callback()
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
net.time4j.history.YearDefinition: net.time4j.history.YearDefinition valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForInsert(int,int)
com.horcrux.svg.RenderableViewManager: void setMarkerMid(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.bumptech.glide.module.AppGlideModule: AppGlideModule()
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
androidx.recyclerview.widget.RecyclerView: void initAdapterManager()
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$800(com.rnfs.RNFSManager)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.swmansion.reanimated.nodes.Node: void onDrop()
okhttp3.Cookie$Companion: Cookie$Companion()
com.facebook.react.views.slider.ReactSlider: void setMaxValue(double)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(android.view.View,java.lang.String)
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
com.airbnb.lottie.LottieAnimationView: void setSafeMode(boolean)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.airbnb.lottie.LottieAnimationView: void setMaxFrame(java.lang.String)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Device: CrashlyticsReport$Session$Event$Device()
androidx.recyclerview.widget.GapWorker$Task: GapWorker$Task()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void access$100(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
io.invertase.firebase.utils.ReactNativeFirebaseUtilsModule: java.util.Map getConstants()
com.facebook.common.time.MonotonicNanoClock: long nowNanos()
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getConfigSubviewsCount()
com.swmansion.rnscreens.SearchBarManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.facebook.react.bridge.CatalystInstance: void destroy()
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptEnabled(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
androidx.core.app.ComponentActivity: ComponentActivity()
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
okhttp3.ResponseBody: ResponseBody()
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
cn.carbswang.android.numberpickerview.library.NumberPickerView: boolean getWrapSelectorWheelAbsolutely()
io.invertase.firebase.app.ReactNativeFirebaseAppRegistrar: java.util.List getComponents()
net.time4j.calendar.EastAsianME: java.lang.Object readResolve()
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(com.horcrux.svg.TextPathView,com.facebook.react.bridge.Dynamic)
com.google.firebase.crashlytics.FirebaseCrashlytics: void setCustomKey(java.lang.String,long)
com.heanoria.library.reactnative.locationenabler.RNAndroidLocationEnablerModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.BV.LinearGradient.LinearGradientView: void setColors(com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()
com.agontuk.RNFusedLocation.RNFusedLocationModule: void startObserving(com.facebook.react.bridge.ReadableMap)
com.rnfs.UploadParams: UploadParams()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
com.agontuk.RNFusedLocation.RNFusedLocationModule: com.facebook.react.bridge.ReactApplicationContext getContext()
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternUnits(com.horcrux.svg.PatternView,int)
com.BV.LinearGradient.LinearGradientManager: void setEndPoint(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)
com.inprogress.reactnativeyoutube.YouTubeModule: void getCurrentTime(int,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.core.ManualGestureHandler: ManualGestureHandler()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.henninghall.date_picker.PickerView: java.lang.String getDate()
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
fr.greweb.reactnativeviewshot.RNViewShotModule: java.io.File createTempFile(android.content.Context,java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.Binding access$600(com.facebook.react.fabric.FabricUIManager)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.swmansion.gesturehandler.react.RNGestureHandlerEvent: RNGestureHandlerEvent()
com.facebook.react.animated.AnimationDriver: AnimationDriver()
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String)
com.facebook.react.uimanager.OnLayoutEvent: OnLayoutEvent()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.horcrux.svg.SymbolView: void setVbHeight(float)
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec: NativeAnimationsDebugModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabelledBy(android.view.View,com.facebook.react.bridge.Dynamic)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.google.firebase.crashlytics.FirebaseCrashlytics: void setCustomKey(java.lang.String,int)
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void removeConfigForTag(int)
com.facebook.react.bridge.Arguments$1: int size()
com.rnfs.RNFSManager: void existsAssets(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasGmsSync()
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures valueOf(java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
com.google.android.gms.internal.location.zzc: zzc()
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] values()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingService: ReactNativeFirebaseMessagingService()
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void getInitialNotification(com.facebook.react.bridge.Promise)
com.reactnativecommunity.geolocation.GeolocationModule: void emitError(int,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTextColor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.brentvatne.react.ReactVideoViewManager: void setStereoPan(com.brentvatne.react.ReactVideoView,float)
io.invertase.firebase.common.ReactNativeFirebaseModule: void rejectPromiseWithCodeAndMessage(com.facebook.react.bridge.Promise,java.lang.String,java.lang.String,java.lang.String)
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
net.time4j.history.CalendarAlgorithm: net.time4j.history.CalendarAlgorithm valueOf(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.google.firebase.crashlytics.FirebaseCrashlytics: void setCustomKey(java.lang.String,java.lang.String)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
net.time4j.tz.OffsetSign: net.time4j.tz.OffsetSign valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getUserAgentSync()
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.google.firebase.crashlytics.FirebaseCrashlytics: com.google.firebase.crashlytics.FirebaseCrashlytics getInstance()
com.horcrux.svg.RenderableViewManager$PathViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(android.view.View,java.lang.Integer)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.gms.internal.base.zac: zac()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor(com.facebook.react.bridge.JavaMethodWrapper$1)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void onDropViewInstance(android.view.View)
com.yqritc.scalablevideoview.ScalableVideoView: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect getOverflowInset()
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(android.view.View,boolean)
net.time4j.tz.HistorizedTimezone: void readObject(java.io.ObjectInputStream)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: RNGestureHandlerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.camera.ImageStoreManager)
com.airbnb.lottie.LottieAnimationView: com.airbnb.lottie.PerformanceTracker getPerformanceTracker()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
com.google.android.gms.internal.measurement.zzfs: zzfs()
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
com.swmansion.reanimated.ReanimatedModule: void onCatalystInstanceDestroy()
com.learnium.RNDeviceInfo.RNDeviceModule: double getLastUpdateTimeSync()
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
com.horcrux.svg.RenderableViewManager: void setPropList(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
com.facebook.react.fabric.ReactNativeConfig: int getInt64(java.lang.String)
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
net.time4j.tz.ZonalOffset: void readObject(java.io.ObjectInputStream)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
com.shockwave.pdfium.PdfiumCore: java.lang.String nativeGetLinkURI(long,long)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.google.android.gms.internal.measurement.zzam: zzam()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
com.bumptech.glide.util.MultiClassKey: MultiClassKey()
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(com.swmansion.rnscreens.Screen,boolean)
com.razorpay.rn.RazorpayModule: void onActivityResult(int,int,android.content.Intent)
com.github.barteksc.pdfviewer.PDFView: void setPageSnap(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getAndroidIdSync()
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHref(com.horcrux.svg.UseView,java.lang.String)
com.reactnativecommunity.toolbarandroid.ReactToolbar: void setNavIconSource(com.facebook.react.bridge.ReadableMap)
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
com.brentvatne.react.ReactVideoViewManager: void setMuted(com.brentvatne.react.ReactVideoView,boolean)
com.reactnativerestart.RestartModule: void Restart()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(android.view.View,boolean)
com.razorpay.CheckoutBridge: void onCheckoutBackPress()
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.reactnativecommunity.clipboard.ClipboardModule: void setString(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getLastUpdateTime(com.facebook.react.bridge.Promise)
com.bumptech.glide.TransitionOptions: TransitionOptions()
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.SvgViewManager: void setVbWidth(com.horcrux.svg.SvgView,float)
androidx.recyclerview.widget.RecyclerView: void offsetPositionRecordsForMove(int,int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod valueOf(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void initialize()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.learnium.RNDeviceInfo.RNDeviceModule: void isBatteryCharging(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior: com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf)
com.horcrux.svg.PatternView: void setMinX(float)
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
net.time4j.SI: net.time4j.SI valueOf(java.lang.String)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.fabric.FabricUIManager: boolean access$500(com.facebook.react.fabric.FabricUIManager)
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandler(int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontFamily(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.rnfs.RNFSManager: void existsRes(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.rnfs.Downloader: Downloader()
com.airbnb.lottie.LottieAnimationView: int getRepeatMode()
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setMaxValue(int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontSize(float)
com.facebook.react.views.scroll.ReactScrollView: void setScrollAwayTopPaddingEnabledUnstable(int)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isEmulatorSync()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
org.wonday.pdf.PdfManager: void setShowsVerticalScrollIndicator(android.view.View,boolean)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.swmansion.rnscreens.CustomSearchView: void setOverrideBackAction(boolean)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
com.reactnativecommunity.netinfo.types.ConnectionType: com.reactnativecommunity.netinfo.types.ConnectionType[] values()
androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.airbnb.lottie.model.content.ShapeStroke$LineJoinType: com.airbnb.lottie.model.content.ShapeStroke$LineJoinType[] values()
com.google.android.gms.internal.measurement.zzgi: zzgi()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
com.horcrux.svg.ForeignObjectView: void setX(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
net.time4j.PlainTimestamp: void readObject(java.io.ObjectInputStream)
com.google.firebase.crashlytics.FirebaseCrashlytics: void setCustomKey(java.lang.String,double)
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.henninghall.date_picker.Formats$Format: com.henninghall.date_picker.Formats$Format[] values()
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.brentvatne.react.ReactVideoViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.yqritc.scalablevideoview.ScalableType: com.yqritc.scalablevideoview.ScalableType valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.horcrux.svg.PatternView: void setX(com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.recyclerview.widget.RecyclerView: void dispatchLayout()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
androidx.recyclerview.widget.RecyclerView: void absorbGlows(int,int)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)
com.google.android.gms.stats.zzc: zzc()
com.reactnativecommunity.webview.RNCWebViewManager: void setSource(com.reactnativecommunity.webview.RNCWebView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.drawee.backends.pipeline.Fresco: Fresco()
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.facebook.react.common.mapbuffer.ReadableMapBuffer$DataType: com.facebook.react.common.mapbuffer.ReadableMapBuffer$DataType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isPinOrFingerprintSetSync()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void mkdir(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
com.rnfs.RNFSManager: java.util.Map getConstants()
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.horcrux.svg.LinearGradientView: void setX1(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ViewManager: ViewManager()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
androidx.collection.SparseArrayCompat: SparseArrayCompat()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
com.google.android.gms.tasks.Task: Task()
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
io.invertase.firebase.messaging.ReactNativeFirebaseMessagingModule: void getToken(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
net.time4j.history.HistoricEraElement: java.lang.Object readResolve()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
io.invertase.firebase.common.ReactNativeFirebaseModule: java.util.concurrent.ExecutorService getExecutor()
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableView: void setPropList(com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide[] values()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.react.modules.storage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
cl.json.RNShareModule$SHARES: cl.json.RNShareModule$SHARES valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstance: void initialize()
com.razorpay.CheckoutBridge: void setMerchantOptions(java.lang.String)
com.google.android.material.button.MaterialButton: void setElevation(float)
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod[] values()
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
net.time4j.Moment: java.lang.Object writeReplace()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.reactnative.ivpusic.imagepicker.PickerModule: void cleanSingle(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupported64BitAbis(com.facebook.react.bridge.Promise)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSharp(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: ScreenStackHeaderSubviewManager()
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setImageAssetsFolder(com.airbnb.lottie.LottieAnimationView,java.lang.String)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.rnfs.RNFSManager: RNFSManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
net.time4j.tz.SPX: void writeExternal(java.io.ObjectOutput)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
com.swmansion.gesturehandler.react.RNGestureHandlerStateChangeEvent: RNGestureHandlerStateChangeEvent()
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.learnium.RNDeviceInfo.RNDeviceModule: void getFingerprint(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.rnfs.RNFSManager: void read(java.lang.String,int,int,com.facebook.react.bridge.Promise)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: void maybeLoadSoLibrary()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.FabricUIManager: long measureMapBuffer(int,java.lang.String,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float,float,float,float[])
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
com.swmansion.reanimated.NativeProxy$AnimationFrameCallback: void onAnimationFrame(double)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
com.facebook.react.fabric.Binding: void registerSurface(com.facebook.react.fabric.SurfaceHandlerBinding)
androidx.recyclerview.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)
com.horcrux.svg.VirtualView: float getCanvasWidth()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.modules.systeminfo.AndroidInfoHelpers: AndroidInfoHelpers()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
com.horcrux.svg.VirtualView: void setDisplay(java.lang.String)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] values()
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
org.apache.commons.io.comparator.AbstractFileComparator: AbstractFileComparator()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.slider.ReactSliderManager: void setTestID(com.facebook.react.views.slider.ReactSlider,java.lang.String)
com.github.barteksc.pdfviewer.PDFView: float getZoom()
net.time4j.LongElement: java.lang.Object readResolve()
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
net.time4j.calendar.SexagesimalName$Branch: net.time4j.calendar.SexagesimalName$Branch valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnter(android.view.View,boolean)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzci)
com.google.android.gms.internal.measurement.zzfq: zzfq()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
net.time4j.Moment$LongElement: net.time4j.Moment$LongElement valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setTextIsSelectable(boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
com.horcrux.svg.LinearGradientView: void setGradientUnits(int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager()
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient access$600(com.facebook.react.modules.network.NetworkingModule)
net.time4j.SPX: java.lang.Object readResolve()
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.henninghall.date_picker.pickers.AndroidNative: void setDividerHeight(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect getOverflowInset()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.facebook.react.fabric.SurfaceHandlerBinding: void stopNative()
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
com.brentvatne.react.ReactVideoView$Events: com.brentvatne.react.ReactVideoView$Events valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void getContentIntent(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.NativeProxy$SensorSetter: void sensorSetter(float[])
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
net.time4j.format.expert.ParsedEntity: ParsedEntity()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.dylanvann.fastimage.FastImageViewModule: FastImageViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
net.time4j.tz.SPX: SPX()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactTextInputManager: android.widget.EditText createInternalEditText(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
cn.carbswang.android.numberpickerview.library.NumberPickerView: java.lang.String[] getDisplayedValues()
com.swmansion.rnscreens.ScreenContainerViewManager: boolean needsCustomLayoutForChildren()
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
okhttp3.Handshake$Companion: Handshake$Companion()
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String getName()
com.facebook.imagepipeline.nativecode.NativeCodeInitializer: NativeCodeInitializer()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void eventsAddListener(java.lang.String)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
com.bumptech.glide.load.Options: Options()
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.agontuk.RNFusedLocation.LocationAccuracy: com.agontuk.RNFusedLocation.LocationAccuracy valueOf(java.lang.String)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getScreenCTM(int)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.google.android.gms.internal.ads_identifier.zzc: zzc()
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: void handleException(java.lang.Exception)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: RenderableViewManager$LinearGradientManager()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setSourceName(com.airbnb.lottie.LottieAnimationView,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(long)
com.google.android.gms.internal.measurement.zzfn: zzfn()
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getPowerStateSync()
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
com.learnium.RNDeviceInfo.RNDeviceModule: void getBatteryLevel(com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void registerRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.reactnativecommunity.clipboard.ClipboardModule: void hasString(com.facebook.react.bridge.Promise)
com.airbnb.lottie.LottieAnimationView: void setFontAssetDelegate(com.airbnb.lottie.FontAssetDelegate)
com.google.android.datatransport.runtime.SendRequest: SendRequest()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.learnium.RNDeviceInfo.RNDeviceModule: void hasHms(com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void stopScroll()
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadSoLibrary()
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
androidx.recyclerview.widget.RecyclerView: void saveOldPositions()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: SafeAreaViewShadowNode()
com.google.firebase.crashlytics.FirebaseCrashlytics: void recordException(java.lang.Throwable)
com.learnium.RNDeviceInfo.RNDeviceModule: void getMaxMemory(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReadableNativeMap$1: ReadableNativeMap$1(com.facebook.react.bridge.ReadableNativeMap,java.lang.String[],java.lang.Object[])
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
com.airbnb.lottie.model.content.GradientType: com.airbnb.lottie.model.content.GradientType[] values()
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.gms.internal.measurement.zzlb: zzlb()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
com.reactnativecommunity.toolbarandroid.ReactToolbarManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.google.android.material.chip.Chip: float getChipEndPadding()
com.google.android.gms.internal.measurement.zzbn: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String access$300()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void readStream(java.lang.String,java.lang.String,int,int,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void hasSystemFeature(java.lang.String,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void removeItemDecorationAt(int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setSelection(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReactSoftExceptionLogger: ReactSoftExceptionLogger()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
com.swmansion.rnscreens.SearchBarView: void setShouldOverrideBackButton(boolean)
com.bumptech.glide.GeneratedAppGlideModule: GeneratedAppGlideModule()
com.facebook.react.views.slider.ReactSliderManager: void setThumbImage(com.facebook.react.views.slider.ReactSlider,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String getName()
com.facebook.react.modules.network.NetworkingModule: java.lang.String getName()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzcf)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Device: CrashlyticsReport$Session$Device()
com.horcrux.svg.RenderableViewManager: void setDisplay(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.learnium.RNDeviceInfo.RNDeviceModule: void getAvailableLocationProviders(com.facebook.react.bridge.Promise)
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
com.razorpay.CheckoutBridge: void oncomplete(java.lang.String)
com.shockwave.pdfium.PdfiumCore: java.lang.String nativeGetBookmarkTitle(long)
net.time4j.calendar.service.GenericTextProviderSPI: GenericTextProviderSPI()
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()
androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.UIManager: java.lang.Object getEventDispatcher()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSystemManufacturer(com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.Screen: void setReplaceAnimation(com.swmansion.rnscreens.Screen$ReplaceAnimation)
net.time4j.calendar.EastAsianMonth: java.lang.Object readResolve()
com.facebook.react.modules.storage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.rnfs.RNFSManager: void readFileRes(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
com.brentvatne.react.ReactVideoViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
net.time4j.Weekmodel$DayOfWeekElement: java.lang.Object readResolve()
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.github.barteksc.pdfviewer.PDFView$State: com.github.barteksc.pdfviewer.PDFView$State valueOf(java.lang.String)
net.time4j.Weekcycle: java.lang.Object readResolve()
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinY(com.horcrux.svg.MarkerView,float)
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.fabric.events.EventBeatManager)
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.facebook.react.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
com.google.android.gms.internal.measurement.zzgy: zzgy()
com.google.android.gms.internal.measurement.zzkt: zzkt()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.reactnativecommunity.viewpager.ReactViewPagerManager: void receiveCommand(androidx.viewpager2.widget.ViewPager2,int,com.facebook.react.bridge.ReadableArray)
net.time4j.DayPeriod$Element: void readObject(java.io.ObjectInputStream)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.brentvatne.react.ReactVideoView$Events: com.brentvatne.react.ReactVideoView$Events[] values()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void onDropViewInstance(android.view.View)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(android.view.View,java.lang.String)
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline valueOf(java.lang.String)
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.facebook.react.modules.core.TimingModule: void onHeadlessJsTaskFinish(int)
androidx.viewpager2.widget.ViewPager2: int getOffscreenPageLimit()
com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState: com.swmansion.reanimated.keyboardObserver.ReanimatedKeyboardEventListener$KeyboardState[] values()
com.dylanvann.fastimage.FastImageViewManager: void setDefaultSource(com.dylanvann.fastimage.FastImageViewWithUrl,java.lang.String)
com.BV.LinearGradient.LinearGradientManager: void setBorderRadii(com.BV.LinearGradient.LinearGradientView,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clearSensitiveData()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingModuleName(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.horcrux.svg.RenderableViewManager$RectViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
com.henninghall.date_picker.pickers.IosClone: android.view.View getView()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.modules.network.NetworkingModule: void access$200(com.facebook.react.modules.network.NetworkingModule,int)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String)
com.airbnb.android.react.lottie.LottieAnimationViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
org.wonday.pdf.PdfManager: PdfManager()
com.facebook.react.fabric.Binding: Binding()
org.wonday.pdf.PdfManager: void setPassword(android.view.View,java.lang.String)
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.google.firebase.installations.InstallationTokenResult: InstallationTokenResult()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long)
com.google.android.gms.internal.measurement.zzhn: zzhn()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
com.facebook.react.bridge.ReactCxxErrorHandler: void setHandleErrorFunc(java.lang.Object,java.lang.reflect.Method)
com.razorpay.t: boolean getBoolean(java.lang.String)
com.henninghall.date_picker.pickers.AndroidNative: void setTextColor(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.FabricViewStateManager getFabricViewStateManager()
com.horcrux.svg.SvgView: android.graphics.Rect getCanvasBounds()
com.google.android.gms.internal.measurement.zzjr: zzjr()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.reactnativecommunity.webview.RNCWebView: void setWebViewClient(android.webkit.WebViewClient)
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstanceId(com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory findFactoryForHandler(com.swmansion.gesturehandler.core.GestureHandler)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float)
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
com.swmansion.rnscreens.Screen: java.lang.Integer getScreenOrientation()
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
com.agontuk.RNFusedLocation.RNFusedLocationModule: java.lang.String getName()
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.fbreact.specs.NativeAsyncSQLiteDBStorageSpec: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager access$000(com.facebook.react.animated.NativeAnimatedModule)
com.shockwave.pdfium.PdfiumCore: int nativeGetPageCount(long)
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback: ChoreographerCompat$FrameCallback()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.yalantis.ucrop.view.CropImageView: float getMaxScale()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
com.airbnb.android.react.lottie.LottieAnimationViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getNativeCallInvokerHolder()
com.facebook.react.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.TurboModuleManagerDelegate,boolean,boolean)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,com.facebook.react.uimanager.UIImplementationProvider,int)
okhttp3.CacheControl$Companion: CacheControl$Companion()
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
com.swmansion.reanimated.nodes.EventNode: java.lang.Double evaluate()
androidx.recyclerview.widget.RecyclerView: void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(android.view.View,boolean)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
com.airbnb.lottie.parser.KeyframeParser: KeyframeParser()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.Dynamic: void recycle()
com.horcrux.svg.SvgViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
com.swmansion.reanimated.NativeProxy$EventHandler: void receiveEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void onDropViewInstance(android.view.View)
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
net.time4j.format.DisplayMode: net.time4j.format.DisplayMode valueOf(java.lang.String)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.swmansion.rnscreens.Screen: void setGestureEnabled(boolean)
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
io.invertase.firebase.app.ReactNativeFirebaseAppModule: void metaGetAll(com.facebook.react.bridge.Promise)
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.rnfs.RNFSManager: java.lang.String getName()
com.swmansion.rnscreens.Screen: void setStatusBarTranslucent(java.lang.Boolean)
com.yalantis.ucrop.view.GestureCropImageView: void setDoubleTapScaleSteps(int)
com.brentvatne.react.ReactVideoViewManager: void setRate(com.brentvatne.react.ReactVideoView,float)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.rnfs.RNFSManager: void getAllExternalFilesDirs(com.facebook.react.bridge.Promise)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
com.airbnb.android.react.lottie.LottieAnimationViewManager: void sendOnAnimationFinishEvent(com.airbnb.lottie.LottieAnimationView,boolean)
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.google.android.youtube.player.YouTubeInitializationResult: com.google.android.youtube.player.YouTubeInitializationResult[] values()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.facebook.react.devsupport.JSDevSupport: void getJSHierarchy(int,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
com.rnfs.RNFSManager: void unlink(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(android.view.View,boolean)
com.reactnativerestart.RestartModule: void access$000(com.reactnativerestart.RestartModule)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] values()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.horcrux.svg.RenderableViewManager$RectViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.swmansion.rnscreens.ScreenViewManager: ScreenViewManager()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
net.time4j.tz.SPX: void readExternal(java.io.ObjectInput)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.FabricUIManager: void preInitializeViewManagers(java.util.List)
com.yalantis.ucrop.view.widget.HorizontalProgressWheelView: HorizontalProgressWheelView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void createFileASCII(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
org.wonday.pdf.PdfManager: void setShowsHorizontalScrollIndicator(android.view.View,boolean)
androidx.transition.Transition: Transition()
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactContext: void onHostPause()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
com.bumptech.glide.GlideBuilder$EnableImageDecoderForBitmaps: GlideBuilder$EnableImageDecoderForBitmaps()
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
com.facebook.react.modules.core.ReactChoreographer: ReactChoreographer()
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
com.swmansion.reanimated.NativeProxy$EventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostResume()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.airbnb.lottie.LottieAnimationView: void setFailureListener(com.airbnb.lottie.LottieListener)
com.dylanvann.fastimage.FastImageViewManager: com.dylanvann.fastimage.FastImageViewWithUrl createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.rnscreens.SearchBarView: void setInputType(com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes)
androidx.core.content.ContextCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
androidx.startup.InitializationProvider: InitializationProvider()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.rnfs.RNFSManager: com.facebook.react.bridge.ReactApplicationContext access$600(com.rnfs.RNFSManager)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScript(com.reactnativecommunity.webview.RNCWebView,java.lang.String)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.shockwave.pdfium.PdfiumCore: long nativeOpenMemDocument(byte[],java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
net.time4j.calendar.SexagesimalName: java.lang.Object readResolve()
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager$ViewState: com.swmansion.reanimated.layoutReanimation.AnimationsManager$ViewState valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
com.inprogress.reactnativeyoutube.YouTubeView: int getDuration()
androidx.recyclerview.widget.RecyclerView: void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
io.invertase.firebase.crashlytics.ReactNativeFirebaseCrashlyticsModule: void recordError(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
com.facebook.fbreact.specs.NativeAsyncLocalStorageSpec: NativeAsyncLocalStorageSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForNativeAnimatedEvent(com.swmansion.gesturehandler.react.RNGestureHandlerEvent)
cn.carbswang.android.numberpickerview.library.NumberPickerView: void setHintText(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$Thread: CrashlyticsReport$Session$Event$Application$Execution$Thread()
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.Object,java.lang.Object,boolean)
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(com.swmansion.rnscreens.ScreenContainer,android.view.View,int)
com.horcrux.svg.RenderableViewManager$LineViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
com.brentvatne.react.ReactVideoViewManager: void setPropPreventsDisplaySleepDuringVideoPlayback(com.brentvatne.react.ReactVideoView,boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
com.brentvatne.react.ReactVideoView: void setVolumeModifier(float)
com.ReactNativeBlobUtil.ReactNativeBlobUtil: void readFile(java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.UIManagerModule: void preInitializeViewManagers(java.util.List)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize getAutoCapitalize()
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: boolean hasNextKey()
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
com.henninghall.date_picker.pickers.AndroidNative: void setItemPaddingHorizontal(int)
com.reactnative.ivpusic.imagepicker.PickerModule: void access$300(com.reactnative.ivpusic.imagepicker.PickerModule,android.app.Activity)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
org.reactnative.maskedview.RNCMaskedViewManager: org.reactnative.maskedview.RNCMaskedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.blob.BlobModule: long access$300(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.slider.ReactSliderManager: void setMaximumValue(com.reactnativecommunity.slider.ReactSlider,float)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.inprogress.reactnativeyoutube.YouTubeStandaloneModule: void playPlaylist(java.lang.String,java.lang.String,boolean,boolean,int,int,com.facebook.react.bridge.Promise)
com.airbnb.android.react.lottie.LottieAnimationViewManager: void setTextFilters(com.airbnb.lottie.LottieAnimationView,com.facebook.react.bridge.ReadableArray)
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setRotate(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setOpacity(android.view.View,float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: RenderableViewManager$EllipseViewManager()
com.reactnativecommunity.webview.RNCWebViewManager: void setHasOnScroll(com.reactnativecommunity.webview.RNCWebView,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.webview.RNCWebViewFileProvider: RNCWebViewFileProvider()
com.swmansion.reanimated.NativeProxy: void unsubscribeFromKeyboardEvents(int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
net.time4j.engine.AbstractDuration: AbstractDuration()
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList access$300(com.facebook.react.fabric.FabricUIManager)
com.facebook.react.views.text.ReactStrikethroughSpan: ReactStrikethroughSpan()
com.google.android.gms.internal.measurement.zzgh: zzgh()
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent valueOf(java.lang.String)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData initHybrid()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
androidx.recyclerview.widget.RecyclerView: boolean hasUpdatedView()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.yalantis.ucrop.view.UCropView: com.yalantis.ucrop.view.GestureCropImageView getCropImageView()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleColor()
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
net.time4j.history.EraPreference: EraPreference()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.RenderableViewManager$PathViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
